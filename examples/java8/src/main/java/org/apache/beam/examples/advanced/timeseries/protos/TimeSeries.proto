/*
 * Licensed to the Apache Software Foundation (ASF) under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for additional information regarding
 * copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License. You may obtain a
 * copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";
option java_outer_classname = "TimeSeriesProtos";
option java_multiple_files = false;
option java_package = "org.apache.beam.examples.advanced.timeseries.protos";
package protos;

message TSKey {
	string key = 1;
}

// Generic TS data point
message TSDataPoint {
	TSKey key = 1;
	oneof value {
	// DT_FLOAT.
		float float_val = 3;

		// DT_DOUBLE.
		double double_val = 4;

		// DT_INT32, DT_INT16, DT_INT8, DT_UINT8.
		int32 int_val = 5;
	}
	google.protobuf.Timestamp timestamp = 7;
	map < string, string > metadata = 8;
}

message TSDataSchema {
	TSKey key = 1;
	map < string, TSKey > features = 2;
}

// Time Series sequence holder
message TSDataPointSequence {
	TSKey key = 1;
	PipelineVersion pipelineVersion = 2;
	repeated TSDataPoint accums = 3;
	int64 lowerWindowBoundary = 8;
	int64 upperWindowBoundary = 9;
}

message PipelineVersion {
	string majorVersion = 1;
	string minorVersion = 2;
	string pipelineName = 3;
	string transformName = 4;
}

enum DownSampleType {
	SUM = 0;
	FIRST = 1;
	LAST = 2;
	AVERAGE = 3;
}

// Accumulator used in combiners
message TSAccum {
	TSKey key = 1;
	PipelineVersion pipelineVersion = 2;
	TSDataPoint data = 3;
	int64 durationMills = 4;
	google.protobuf.Timestamp lowerWindowBoundary = 5;
	google.protobuf.Timestamp upperWindowBoundary = 6;
}

// Time Series sequence holder
message TSAccumSequence {
	TSKey key = 1;
	PipelineVersion pipelineVersion = 2;
	repeated TSAccum accums = 3;
	google.protobuf.Timestamp lowerWindowBoundary = 4;
	google.protobuf.Timestamp upperWindowBoundary = 5;
}

