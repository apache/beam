/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Mocks generated by Mockito 5.0.16 from annotations
// in playground/test/pages/playground/states/example_selector_state_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:playground/modules/examples/models/example_loading_descriptors/example_loading_descriptor.dart'
    as _i6;
import 'package:playground/modules/examples/models/example_loading_descriptors/examples_loading_descriptor.dart'
    as _i5;
import 'package:playground/pages/playground/states/example_loaders/examples_loader.dart'
    as _i2;
import 'package:playground/pages/playground/states/playground_state.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ExamplesLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockExamplesLoader extends _i1.Mock implements _i2.ExamplesLoader {
  MockExamplesLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setPlaygroundState(_i3.PlaygroundState? value) =>
      super.noSuchMethod(Invocation.method(#setPlaygroundState, [value]),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> load(_i5.ExamplesLoadingDescriptor? descriptor) =>
      (super.noSuchMethod(Invocation.method(#load, [descriptor]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> loadOne(
          {_i5.ExamplesLoadingDescriptor? group,
          _i6.ExampleLoadingDescriptor? one}) =>
      (super.noSuchMethod(
          Invocation.method(#loadOne, [], {#group: group, #one: one}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
