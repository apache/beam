// Mocks generated by Mockito 5.3.2 from annotations
// in playground_components/test/src/common/example_cache.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i11;

import 'package:mockito/mockito.dart' as _i1;
import 'package:playground_components/src/cache/example_cache.dart' as _i3;
import 'package:playground_components/src/models/category_with_examples.dart'
    as _i5;
import 'package:playground_components/src/models/example.dart' as _i2;
import 'package:playground_components/src/models/example_base.dart' as _i10;
import 'package:playground_components/src/models/example_view_options.dart'
    as _i8;
import 'package:playground_components/src/models/loading_status.dart' as _i7;
import 'package:playground_components/src/models/sdk.dart' as _i4;
import 'package:playground_components/src/models/snippet_file.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeExample_0 extends _i1.SmartFake implements _i2.Example {
  _FakeExample_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExampleCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockExampleCache extends _i1.Mock implements _i3.ExampleCache {
  MockExampleCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<_i4.Sdk, List<_i5.CategoryWithExamples>> get categoryListsBySdk =>
      (super.noSuchMethod(
        Invocation.getter(#categoryListsBySdk),
        returnValue: <_i4.Sdk, List<_i5.CategoryWithExamples>>{},
      ) as Map<_i4.Sdk, List<_i5.CategoryWithExamples>>);
  @override
  Map<_i4.Sdk, _i2.Example> get defaultExamplesBySdk => (super.noSuchMethod(
        Invocation.getter(#defaultExamplesBySdk),
        returnValue: <_i4.Sdk, _i2.Example>{},
      ) as Map<_i4.Sdk, _i2.Example>);
  @override
  bool get isSelectorOpened => (super.noSuchMethod(
        Invocation.getter(#isSelectorOpened),
        returnValue: false,
      ) as bool);
  @override
  set isSelectorOpened(bool? _isSelectorOpened) => super.noSuchMethod(
        Invocation.setter(
          #isSelectorOpened,
          _isSelectorOpened,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> get allExamplesFuture => (super.noSuchMethod(
        Invocation.getter(#allExamplesFuture),
        returnValue: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i7.LoadingStatus get catalogStatus => (super.noSuchMethod(
        Invocation.getter(#catalogStatus),
        returnValue: _i7.LoadingStatus.loading,
      ) as _i7.LoadingStatus);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i6.Future<void> loadAllPrecompiledObjectsIfNot() => (super.noSuchMethod(
        Invocation.method(
          #loadAllPrecompiledObjectsIfNot,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  List<_i5.CategoryWithExamples> getCategories(_i4.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [sdk],
        ),
        returnValue: <_i5.CategoryWithExamples>[],
      ) as List<_i5.CategoryWithExamples>);
  @override
  _i6.Future<_i2.Example> getPrecompiledObject(
    String? path,
    _i4.Sdk? sdk,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrecompiledObject,
          [
            path,
            sdk,
          ],
        ),
        returnValue: _i6.Future<_i2.Example>.value(_FakeExample_0(
          this,
          Invocation.method(
            #getPrecompiledObject,
            [
              path,
              sdk,
            ],
          ),
        )),
      ) as _i6.Future<_i2.Example>);
  @override
  _i6.Future<_i2.Example> loadSharedExample(
    String? id, {
    required _i8.ExampleViewOptions? viewOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadSharedExample,
          [id],
          {#viewOptions: viewOptions},
        ),
        returnValue: _i6.Future<_i2.Example>.value(_FakeExample_0(
          this,
          Invocation.method(
            #loadSharedExample,
            [id],
            {#viewOptions: viewOptions},
          ),
        )),
      ) as _i6.Future<_i2.Example>);
  @override
  _i6.Future<String> saveSnippet({
    required List<_i9.SnippetFile>? files,
    required _i4.Sdk? sdk,
    required String? pipelineOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSnippet,
          [],
          {
            #files: files,
            #sdk: sdk,
            #pipelineOptions: pipelineOptions,
          },
        ),
        returnValue: _i6.Future<String>.value(''),
      ) as _i6.Future<String>);
  @override
  _i6.Future<_i2.Example> loadExampleInfo(_i10.ExampleBase? example) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadExampleInfo,
          [example],
        ),
        returnValue: _i6.Future<_i2.Example>.value(_FakeExample_0(
          this,
          Invocation.method(
            #loadExampleInfo,
            [example],
          ),
        )),
      ) as _i6.Future<_i2.Example>);
  @override
  void setSelectorOpened(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setSelectorOpened,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i2.Example?> getDefaultExampleBySdk(_i4.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultExampleBySdk,
          [sdk],
        ),
        returnValue: _i6.Future<_i2.Example?>.value(),
      ) as _i6.Future<_i2.Example?>);
  @override
  _i6.Future<void> loadDefaultPrecompiledObjects() => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultPrecompiledObjects,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> loadDefaultPrecompiledObjectsIfNot() => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultPrecompiledObjectsIfNot,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i10.ExampleBase?> getCatalogExampleByPath(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCatalogExampleByPath,
          [path],
        ),
        returnValue: _i6.Future<_i10.ExampleBase?>.value(),
      ) as _i6.Future<_i10.ExampleBase?>);
  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
