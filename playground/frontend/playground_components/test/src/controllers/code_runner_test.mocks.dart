// Mocks generated by Mockito 5.3.2 from annotations
// in playground_components/test/src/controllers/code_runner_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i21;

import 'package:mockito/mockito.dart' as _i1;
import 'package:playground_components/src/api/v1/api.pb.dart' as _i2;
import 'package:playground_components/src/cache/example_cache.dart' as _i15;
import 'package:playground_components/src/controllers/example_loaders/example_loader_factory.dart'
    as _i6;
import 'package:playground_components/src/controllers/example_loaders/examples_loader.dart'
    as _i12;
import 'package:playground_components/src/controllers/playground_controller.dart'
    as _i13;
import 'package:playground_components/src/models/category_with_examples.dart'
    as _i16;
import 'package:playground_components/src/models/example.dart' as _i7;
import 'package:playground_components/src/models/example_base.dart' as _i20;
import 'package:playground_components/src/models/example_loading_descriptors/examples_loading_descriptor.dart'
    as _i14;
import 'package:playground_components/src/models/example_view_options.dart'
    as _i18;
import 'package:playground_components/src/models/loading_status.dart' as _i17;
import 'package:playground_components/src/models/sdk.dart' as _i10;
import 'package:playground_components/src/models/snippet_file.dart' as _i19;
import 'package:playground_components/src/repositories/code_client/code_client.dart'
    as _i8;
import 'package:playground_components/src/repositories/models/check_status_response.dart'
    as _i4;
import 'package:playground_components/src/repositories/models/output_response.dart'
    as _i5;
import 'package:playground_components/src/repositories/models/run_code_request.dart'
    as _i11;
import 'package:playground_components/src/repositories/models/run_code_response.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetMetadataResponse_0 extends _i1.SmartFake
    implements _i2.GetMetadataResponse {
  _FakeGetMetadataResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRunCodeResponse_1 extends _i1.SmartFake
    implements _i3.RunCodeResponse {
  _FakeRunCodeResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckStatusResponse_2 extends _i1.SmartFake
    implements _i4.CheckStatusResponse {
  _FakeCheckStatusResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOutputResponse_3 extends _i1.SmartFake
    implements _i5.OutputResponse {
  _FakeOutputResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExampleLoaderFactory_4 extends _i1.SmartFake
    implements _i6.ExampleLoaderFactory {
  _FakeExampleLoaderFactory_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExample_5 extends _i1.SmartFake implements _i7.Example {
  _FakeExample_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CodeClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockCodeClient extends _i1.Mock implements _i8.CodeClient {
  MockCodeClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.GetMetadataResponse> getMetadata(_i10.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetadata,
          [sdk],
        ),
        returnValue: _i9.Future<_i2.GetMetadataResponse>.value(
            _FakeGetMetadataResponse_0(
          this,
          Invocation.method(
            #getMetadata,
            [sdk],
          ),
        )),
      ) as _i9.Future<_i2.GetMetadataResponse>);
  @override
  _i9.Future<_i3.RunCodeResponse> runCode(_i11.RunCodeRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #runCode,
          [request],
        ),
        returnValue:
            _i9.Future<_i3.RunCodeResponse>.value(_FakeRunCodeResponse_1(
          this,
          Invocation.method(
            #runCode,
            [request],
          ),
        )),
      ) as _i9.Future<_i3.RunCodeResponse>);
  @override
  _i9.Future<void> cancelExecution(String? pipelineUuid) => (super.noSuchMethod(
        Invocation.method(
          #cancelExecution,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i4.CheckStatusResponse> checkStatus(String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkStatus,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i4.CheckStatusResponse>.value(
            _FakeCheckStatusResponse_2(
          this,
          Invocation.method(
            #checkStatus,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i4.CheckStatusResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getCompileOutput(String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompileOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getCompileOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getRunOutput(String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRunOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getRunOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getLogOutput(String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLogOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getLogOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getRunErrorOutput(String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRunErrorOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getRunErrorOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getValidationErrorOutput(
          String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getValidationErrorOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getValidationErrorOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getPreparationErrorOutput(
          String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPreparationErrorOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getPreparationErrorOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
  @override
  _i9.Future<_i5.OutputResponse> getGraphOutput(String? pipelineUuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGraphOutput,
          [pipelineUuid],
        ),
        returnValue: _i9.Future<_i5.OutputResponse>.value(_FakeOutputResponse_3(
          this,
          Invocation.method(
            #getGraphOutput,
            [pipelineUuid],
          ),
        )),
      ) as _i9.Future<_i5.OutputResponse>);
}

/// A class which mocks [ExamplesLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockExamplesLoader extends _i1.Mock implements _i12.ExamplesLoader {
  MockExamplesLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.ExampleLoaderFactory get defaultFactory => (super.noSuchMethod(
        Invocation.getter(#defaultFactory),
        returnValue: _FakeExampleLoaderFactory_4(
          this,
          Invocation.getter(#defaultFactory),
        ),
      ) as _i6.ExampleLoaderFactory);
  @override
  void setPlaygroundController(_i13.PlaygroundController? value) =>
      super.noSuchMethod(
        Invocation.method(
          #setPlaygroundController,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<void> loadIfNew(_i14.ExamplesLoadingDescriptor? descriptor) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadIfNew,
          [descriptor],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> load(_i14.ExamplesLoadingDescriptor? descriptor) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [descriptor],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> loadDefaultIfAny(_i10.Sdk? sdk) => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultIfAny,
          [sdk],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [ExampleCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockExampleCache extends _i1.Mock implements _i15.ExampleCache {
  MockExampleCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<_i10.Sdk, List<_i16.CategoryWithExamples>> get categoryListsBySdk =>
      (super.noSuchMethod(
        Invocation.getter(#categoryListsBySdk),
        returnValue: <_i10.Sdk, List<_i16.CategoryWithExamples>>{},
      ) as Map<_i10.Sdk, List<_i16.CategoryWithExamples>>);
  @override
  Map<_i10.Sdk, _i7.Example> get defaultExamplesBySdk => (super.noSuchMethod(
        Invocation.getter(#defaultExamplesBySdk),
        returnValue: <_i10.Sdk, _i7.Example>{},
      ) as Map<_i10.Sdk, _i7.Example>);
  @override
  bool get isSelectorOpened => (super.noSuchMethod(
        Invocation.getter(#isSelectorOpened),
        returnValue: false,
      ) as bool);
  @override
  set isSelectorOpened(bool? _isSelectorOpened) => super.noSuchMethod(
        Invocation.setter(
          #isSelectorOpened,
          _isSelectorOpened,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<void> get allExamplesFuture => (super.noSuchMethod(
        Invocation.getter(#allExamplesFuture),
        returnValue: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i17.LoadingStatus get catalogStatus => (super.noSuchMethod(
        Invocation.getter(#catalogStatus),
        returnValue: _i17.LoadingStatus.loading,
      ) as _i17.LoadingStatus);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i9.Future<void> loadAllPrecompiledObjectsIfNot() => (super.noSuchMethod(
        Invocation.method(
          #loadAllPrecompiledObjectsIfNot,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  List<_i16.CategoryWithExamples> getCategories(_i10.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [sdk],
        ),
        returnValue: <_i16.CategoryWithExamples>[],
      ) as List<_i16.CategoryWithExamples>);
  @override
  _i9.Future<_i7.Example> getPrecompiledObject(
    String? path,
    _i10.Sdk? sdk,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrecompiledObject,
          [
            path,
            sdk,
          ],
        ),
        returnValue: _i9.Future<_i7.Example>.value(_FakeExample_5(
          this,
          Invocation.method(
            #getPrecompiledObject,
            [
              path,
              sdk,
            ],
          ),
        )),
      ) as _i9.Future<_i7.Example>);
  @override
  _i9.Future<_i7.Example> loadSharedExample(
    String? id, {
    required _i18.ExampleViewOptions? viewOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadSharedExample,
          [id],
          {#viewOptions: viewOptions},
        ),
        returnValue: _i9.Future<_i7.Example>.value(_FakeExample_5(
          this,
          Invocation.method(
            #loadSharedExample,
            [id],
            {#viewOptions: viewOptions},
          ),
        )),
      ) as _i9.Future<_i7.Example>);
  @override
  _i9.Future<String> saveSnippet({
    required List<_i19.SnippetFile>? files,
    required _i10.Sdk? sdk,
    required String? pipelineOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSnippet,
          [],
          {
            #files: files,
            #sdk: sdk,
            #pipelineOptions: pipelineOptions,
          },
        ),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<_i7.Example> loadExampleInfo(_i20.ExampleBase? example) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadExampleInfo,
          [example],
        ),
        returnValue: _i9.Future<_i7.Example>.value(_FakeExample_5(
          this,
          Invocation.method(
            #loadExampleInfo,
            [example],
          ),
        )),
      ) as _i9.Future<_i7.Example>);
  @override
  void setSelectorOpened(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setSelectorOpened,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Future<_i7.Example?> getDefaultExampleBySdk(_i10.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultExampleBySdk,
          [sdk],
        ),
        returnValue: _i9.Future<_i7.Example?>.value(),
      ) as _i9.Future<_i7.Example?>);
  @override
  _i9.Future<void> loadDefaultPrecompiledObjects() => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultPrecompiledObjects,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> loadDefaultPrecompiledObjectsIfNot() => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultPrecompiledObjectsIfNot,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i20.ExampleBase?> getCatalogExampleByPath(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCatalogExampleByPath,
          [path],
        ),
        returnValue: _i9.Future<_i20.ExampleBase?>.value(),
      ) as _i9.Future<_i20.ExampleBase?>);
  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
