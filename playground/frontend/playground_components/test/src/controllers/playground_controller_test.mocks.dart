// Mocks generated by Mockito 5.2.0 from annotations
// in playground_components/test/src/controllers/playground_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i14;

import 'package:mockito/mockito.dart' as _i1;
import 'package:playground_components/src/cache/example_cache.dart' as _i10;
import 'package:playground_components/src/controllers/example_loaders/example_loader_factory.dart'
    as _i2;
import 'package:playground_components/src/controllers/example_loaders/examples_loader.dart'
    as _i5;
import 'package:playground_components/src/controllers/playground_controller.dart'
    as _i6;
import 'package:playground_components/src/models/category_with_examples.dart'
    as _i11;
import 'package:playground_components/src/models/example.dart' as _i4;
import 'package:playground_components/src/models/example_base.dart' as _i3;
import 'package:playground_components/src/models/example_loading_descriptors/examples_loading_descriptor.dart'
    as _i8;
import 'package:playground_components/src/models/loading_status.dart' as _i12;
import 'package:playground_components/src/models/sdk.dart' as _i9;
import 'package:playground_components/src/models/snippet_file.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeExampleLoaderFactory_0 extends _i1.Fake
    implements _i2.ExampleLoaderFactory {}

class _FakeExampleBase_1 extends _i1.Fake implements _i3.ExampleBase {}

class _FakeExample_2 extends _i1.Fake implements _i4.Example {}

/// A class which mocks [ExamplesLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockExamplesLoader extends _i1.Mock implements _i5.ExamplesLoader {
  MockExamplesLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ExampleLoaderFactory get defaultFactory => (super.noSuchMethod(
        Invocation.getter(#defaultFactory),
        returnValue: _FakeExampleLoaderFactory_0(),
      ) as _i2.ExampleLoaderFactory);
  @override
  void setPlaygroundController(_i6.PlaygroundController? value) =>
      super.noSuchMethod(
        Invocation.method(
          #setPlaygroundController,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> load(_i8.ExamplesLoadingDescriptor? descriptor) =>
      (super.noSuchMethod(
        Invocation.method(
          #load,
          [descriptor],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> loadDefaultIfAny(_i9.Sdk? sdk) => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultIfAny,
          [sdk],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [ExampleCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockExampleCache extends _i1.Mock implements _i10.ExampleCache {
  MockExampleCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<_i9.Sdk, List<_i11.CategoryWithExamples>> get categoryListsBySdk =>
      (super.noSuchMethod(
        Invocation.getter(#categoryListsBySdk),
        returnValue: <_i9.Sdk, List<_i11.CategoryWithExamples>>{},
      ) as Map<_i9.Sdk, List<_i11.CategoryWithExamples>>);
  @override
  Map<_i9.Sdk, _i4.Example> get defaultExamplesBySdk => (super.noSuchMethod(
        Invocation.getter(#defaultExamplesBySdk),
        returnValue: <_i9.Sdk, _i4.Example>{},
      ) as Map<_i9.Sdk, _i4.Example>);
  @override
  bool get isSelectorOpened => (super.noSuchMethod(
        Invocation.getter(#isSelectorOpened),
        returnValue: false,
      ) as bool);
  @override
  set isSelectorOpened(bool? _isSelectorOpened) => super.noSuchMethod(
        Invocation.setter(
          #isSelectorOpened,
          _isSelectorOpened,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> get allExamplesFuture => (super.noSuchMethod(
        Invocation.getter(#allExamplesFuture),
        returnValue: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i12.LoadingStatus get catalogStatus => (super.noSuchMethod(
        Invocation.getter(#catalogStatus),
        returnValue: _i12.LoadingStatus.loading,
      ) as _i12.LoadingStatus);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> loadAllPrecompiledObjectsIfNot() => (super.noSuchMethod(
        Invocation.method(
          #loadAllPrecompiledObjectsIfNot,
          [],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  List<_i11.CategoryWithExamples> getCategories(_i9.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [sdk],
        ),
        returnValue: <_i11.CategoryWithExamples>[],
      ) as List<_i11.CategoryWithExamples>);
  @override
  _i7.Future<_i3.ExampleBase> getPrecompiledObject(
    String? path,
    _i9.Sdk? sdk,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPrecompiledObject,
          [
            path,
            sdk,
          ],
        ),
        returnValue: Future<_i3.ExampleBase>.value(_FakeExampleBase_1()),
      ) as _i7.Future<_i3.ExampleBase>);
  @override
  _i7.Future<_i4.Example> loadSharedExample(String? id) => (super.noSuchMethod(
        Invocation.method(
          #loadSharedExample,
          [id],
        ),
        returnValue: Future<_i4.Example>.value(_FakeExample_2()),
      ) as _i7.Future<_i4.Example>);
  @override
  _i7.Future<String> saveSnippet({
    List<_i13.SnippetFile>? files,
    _i9.Sdk? sdk,
    String? pipelineOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSnippet,
          [],
          {
            #files: files,
            #sdk: sdk,
            #pipelineOptions: pipelineOptions,
          },
        ),
        returnValue: Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i4.Example> loadExampleInfo(_i3.ExampleBase? example) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadExampleInfo,
          [example],
        ),
        returnValue: Future<_i4.Example>.value(_FakeExample_2()),
      ) as _i7.Future<_i4.Example>);
  @override
  void setSelectorOpened(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setSelectorOpened,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i4.Example?> getDefaultExampleBySdk(_i9.Sdk? sdk) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultExampleBySdk,
          [sdk],
        ),
        returnValue: Future<_i4.Example?>.value(),
      ) as _i7.Future<_i4.Example?>);
  @override
  _i7.Future<void> loadDefaultPrecompiledObjects() => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultPrecompiledObjects,
          [],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> loadDefaultPrecompiledObjectsIfNot() => (super.noSuchMethod(
        Invocation.method(
          #loadDefaultPrecompiledObjectsIfNot,
          [],
        ),
        returnValue: Future<void>.value(),
        returnValueForMissingStub: Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<_i3.ExampleBase?> getCatalogExampleByPath(String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCatalogExampleByPath,
          [path],
        ),
        returnValue: Future<_i3.ExampleBase?>.value(),
      ) as _i7.Future<_i3.ExampleBase?>);
  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
