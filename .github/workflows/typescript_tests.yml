# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# To learn more about GitHub Actions in Apache Beam check the CI.md

name: TypeScript Tests

on:
  workflow_dispatch:
  schedule:
    - cron: '10 2 * * *'
  push:
    branches: ['master', 'release-*', 'javascript']
    tags: 'v*'
  pull_request:
    branches: ['master', 'release-*', 'javascript']
    tags: 'v*'
    paths: ['sdks/typescript/**']

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

  typescript_unit_tests:
    name: 'TypeScript Unit Tests'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: recursive
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: npm ci
        working-directory: ./sdks/typescript
      - run: npm run build
        working-directory: ./sdks/typescript
      - run: npm run prettier-check
        working-directory: ./sdks/typescript
        if: ${{ matrix.os == 'ubuntu-latest' }}
#      - run: npm run codecovTest
#        working-directory: ./sdks/typescript
#        if: ${{ matrix.os == 'ubuntu-latest' }}
      - run: npm test
        working-directory: ./sdks/typescript
#        if: ${{ matrix.os != 'ubuntu-latest' }}

  typescript_xlang_tests:
    name: 'TypeScript xlang Tests'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: recursive
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Setup Beam Python
        working-directory: ./sdks/python
        run: |
          pip install pip setuptools --upgrade
          pip install -r build-requirements.txt
          pip install 'pandas>=1.0,<1.5'
          python setup.py develop
      - run: npm ci
        working-directory: ./sdks/typescript
      - run: npm run build
        working-directory: ./sdks/typescript
      - run: npm test -- --grep "@xlang" --grep "@ulr"
        working-directory: ./sdks/typescript
        env:
          BEAM_SERVICE_OVERRIDES: '{"python:*": "python"}'

  check_gcp_variables:
    timeout-minutes: 5
    name: "Check GCP variables"
    runs-on: ubuntu-latest
    outputs:
      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}
    steps:
      - uses: actions/checkout@v3
      - name: "Check are GCP variables set"
        run: "./scripts/ci/ci_check_are_gcp_variables_set.sh"
        id: check_gcp_variables
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}
          GCP_PYTHON_WHEELS_BUCKET: "not-needed-here"

  typescript_dataflow_tests:
    name: 'TypeScript Dataflow Tests'
    runs-on: ubuntu-latest
    needs:
      - check_gcp_variables
    if: needs.check_gcp_variables.outputs.gcp-variables-set == 'true'
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: recursive
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Setup Beam Python
        working-directory: ./sdks/python
        run: |
          pip install pip setuptools --upgrade
          pip install -r build-requirements.txt
          pip install 'pandas>=1.0,<1.5'
          python setup.py develop
          pip install -e ".[gcp]"
      - name: Authenticate on GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
      - run: npm ci
        working-directory: ./sdks/typescript
      - run: npm run build
        working-directory: ./sdks/typescript
      - run: npm test -- --grep "@dataflow"
        working-directory: ./sdks/typescript
        env:
          BEAM_SERVICE_OVERRIDES: '{"python:*": "python"}'
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
          GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}
