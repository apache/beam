# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PreCommit Python Lint

on:
  pull_request_target:
    branches: [ "master", "release-*" ]
    paths: ["sdks/python/**", 'release/trigger_all_tests.json']
  push:
    branches: ['master', 'release-*']
    tags: 'v*'
    paths: ["sdks/python/**"]
  workflow_dispatch:

# Setting explicit permissions for the action
permissions:
  actions: write
  pull-requests: read
  checks: write
  contents: read
  deployments: read
  id-token: none
  issues: read
  discussions: read
  packages: read
  pages: read
  repository-projects: read
  security-events: read
  statuses: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.sha }}'
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.9'

jobs:
  python_lint:
    name: 'Python Lint'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -e ".[dev,gcp,test,docs,lint]"
        python -m pip install pylint==2.17.7 pycodestyle==2.11.1 isort==5.13.2

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py', '**/setup.cfg', '**/tox.ini') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Run isort
      run: |
        python -m isort --check-only apache_beam
      working-directory: sdks/python

    - name: Run pylint
      run: |
        python -m pylint apache_beam --rcfile=../../.pylintrc
      working-directory: sdks/python

    - name: Run pycodestyle
      run: |
        python -m pycodestyle apache_beam --config=../../.pycodestyle
      working-directory: sdks/python

    - name: Check formatting
      run: |
        python -m yapf --diff --recursive apache_beam
      working-directory: sdks/python

    - name: Type checking
      run: |
        python -m mypy apache_beam/io/gcp/bigquery_cache.py apache_beam/io/gcp/bigquery_cache_test.py
      working-directory: sdks/python

    - name: Upload lint results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: lint-results
        path: |
          sdks/python/.pylint.d/
          sdks/python/.mypy_cache/
        if-no-files-found: ignore
