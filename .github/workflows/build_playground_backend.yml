# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build And Deploy Playground Backend Application

on:
  push:
    tags: 'v*'
  pull_request:
    paths: ['playground/backend/**']
  workflow_dispatch:
jobs:
  build_playground_backend_docker_image:
    name: Build Playground Backend App
    runs-on: ubuntu-latest
    env:
      GO_VERSION: 1.17.0
      BEAM_VERSION: 2.33.0
      TERRAFORM_VERSION: 1.0.9
      STAND_SUFFIX: ''
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
            distribution: 'zulu'
            java-version: '8'
      - uses: actions/setup-go@v2
        with:
            go-version: '${{ env.GO_VERSION }}'
      - name: Remove default github maven configuration
        # This step is a workaround to avoid a decryption issue
        run: rm ~/.m2/settings.xml
      - name: Run PreCommit
        run: ./gradlew playground:backend:precommit
      - name: install npm
        uses: actions/setup-node@v2
        with:
            node-version: '14'
      - name: install docker linter
        run: npm install  -g dockerlint
      - name: lint dockerfile
        run: dockerlint Dockerfile
        working-directory: playground/backend/containers/java
      - uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Set Docker Tag
        run: echo "DOCKERTAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set Docker Tag If Github Tag was trigger
        run: echo "DOCKERTAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')
      - name: Setup GCP account
        run: |
             echo "${{ secrets.PLAYGROUND_GCP_ACCESS_KEY }}" | base64 -d > /tmp/gcp_access.json
        if: startsWith(github.ref, 'refs/tags/')
      - name: Login to Docker Registry
        run: cat /tmp/gcp_access.json | docker login -u _json_key --password-stdin https://${{ secrets.PLAYGROUND_REGISTRY_NAME }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prepare Build Java
        run: |
            export
            ./gradlew playground:backend:containers:java:dockerTagPush -Pdocker-repository-root='${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository' -Pbase-image='apache/beam_java8_sdk:${{ env.BEAM_VERSION }}'  -Pdocker-tag=${{ env.DOCKERTAG }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prepare Build Python
        run: ./gradlew playground:backend:containers:python:dockerTagPush -Pdocker-repository-root='${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository'  -Pdocker-tag=${{ env.DOCKERTAG }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prepare Build Go
        run: ./gradlew playground:backend:containers:go:dockerTagPush -Pdocker-repository-root='${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository' -Pdocker-tag=${{ env.DOCKERTAG }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prepare Build SCIO
        run: ./gradlew playground:backend:containers:scio:dockerTagPush -Pdocker-repository-root='${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository' -Pdocker-tag=${{ env.DOCKERTAG }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Prepare Build Router
        run: ./gradlew playground:backend:containers:router:dockerTagPush -Pdocker-repository-root='${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository' -Pdocker-tag=${{ env.DOCKERTAG }}
        if: startsWith(github.ref, 'refs/tags/')
      - name: Clean All Build directories
        run: ./gradlew clean
      - name: Deploy Backend Application Java
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
        run: terraform init && terraform apply -auto-approve -var="project_id=${{ secrets.PLAYGROUND_PROJECT_ID }}" -var="docker_registry_address=${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository" -var="docker_image_tag=${{ env.DOCKERTAG }}" -var="service_name=backend-java${{env.STAND_SUFFIX}}"
        working-directory: playground/terraform/applications/backend-java
        if: startsWith(github.ref, 'refs/tags/')
      - name: Deploy Backend Application Go
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
        run: terraform init && terraform apply -auto-approve -var="project_id=${{ secrets.PLAYGROUND_PROJECT_ID }}" -var="docker_registry_address=${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository" -var="docker_image_tag=${{ env.DOCKERTAG }}" -var="service_name=backend-go${{env.STAND_SUFFIX}}"
        working-directory: playground/terraform/applications/backend-go
        if: startsWith(github.ref, 'refs/tags/')
      - name: Deploy Backend Application Python
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
        run: terraform init && terraform apply -auto-approve -var="project_id=${{ secrets.PLAYGROUND_PROJECT_ID }}" -var="docker_registry_address=${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository" -var="docker_image_tag=${{ env.DOCKERTAG }}" -var="service_name=backend-python${{env.STAND_SUFFIX}}"
        working-directory: playground/terraform/applications/backend-python
        if: startsWith(github.ref, 'refs/tags/')
      - name: Deploy Backend Application SCIO
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
        run: terraform init && terraform apply -auto-approve -var="project_id=${{ secrets.PLAYGROUND_PROJECT_ID }}" -var="docker_registry_address=${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository" -var="docker_image_tag=${{ env.DOCKERTAG }}" -var="service_name=backend-scio${{env.STAND_SUFFIX}}"
        working-directory: playground/terraform/applications/backend-scio
        if: startsWith(github.ref, 'refs/tags/')
      - name: Deploy Backend Application Router
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
        run: terraform init && terraform apply -auto-approve -var="project_id=${{ secrets.PLAYGROUND_PROJECT_ID }}" -var="docker_registry_address=${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.PLAYGROUND_PROJECT_ID }}/playground-repository" -var="docker_image_tag=${{ env.DOCKERTAG }}" -var="service_name=backend-router${{env.STAND_SUFFIX}}"
        working-directory: playground/terraform/applications/backend-router
        if: startsWith(github.ref, 'refs/tags/')
