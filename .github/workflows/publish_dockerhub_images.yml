name: Build And Publish Dockerhub images
on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        type: string
        description: Release Version
        required: true
        default: "2.41.2"
      RC_NUM:
        type: string
        description: Release Candidate Number
        required: true
        default: "1"
      FINAL_PUBLISH:
        type: boolean
        description: Publish as RELEASE and LATEST?
        required: true
        default: false

jobs:
  build:
    env:
      RELEASE_VERSION: ${{github.event.inputs.RELEASE_VERSION}}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USER}}
          password: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: Setting Release Branch
        run: echo "RC_TAG=v${{env.RELEASE_VERSION}}-RC${{github.event.inputs.RC_NUM}}" >> $GITHUB_ENV    
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{env.RC_TAG}}
      - name: Setup Go 
        uses: actions/setup-go@v3
        with:
          go-version: '^1.13.1' 
      - name: Setup python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: Setup Java
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: |
            8
            17
            11
      - name: Exporting Java_HOME to Java 8
        run: echo "JAVA_HOME=${JAVA_HOME_8_X64}" >> $GITHUB_ENV
      - name: Installing ensurepip
        run: sudo apt install -y python3.8-venv
      #- name: Publish images
      #  run: ./gradlew :pushAllDockerImages  -Pdocker-pull-licenses -Pdocker-tag="${{env.RC_TAG}}" -Pdocker-repository-root="elink21" -Pjava11Home=${JAVA_HOME_11_X64} 
      - name: Mockup test for Final Publish
        run: echo "FROM ubuntu:20.04" >> Dockerfile
      - name: Building
        run: docker build . -t elink21/beam_test:${RC_TAG}
      - name: Pushing
        run: docker push elink21/beam_test:${RC_TAG}
      - name: Publish as LATEST and RELEASE
        if: ${{github.event.inputs.FINAL_PUBLISH}}
        run: >
          IMAGES=$(docker images --filter "reference=elink21/beam_*:$RC_TAG" --format "{{.Repository}}")
          echo "${IMAGES}"
          echo "${IMAGES}" | while read IMAGE; do
            # Pull verified RC from dockerhub.
            docker pull "${IMAGE}:${RC_TAG}"

            # Tag with ${RELEASE} and push to dockerhub.
            docker tag "${IMAGE}:${RC_TAG}" "${IMAGE}:${RELEASE_VERSION}"
            docker push "${IMAGE}:${RELEASE_VERSION}"

            # Tag with latest and push to dockerhub.
            docker tag "${IMAGE}:{RC_TAG}" "${IMAGE}:latest"
            docker push "${IMAGE}:latest"
          done
     