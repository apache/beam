# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# To learn more about GitHub Actions in Apache Beam check the CI.md
name: Build And Publish Dockerhub images
on:
  workflow_dispatch:
    inputs:
      RELEASE_VERSION:
        type: string
        description: Release Version
        required: true
        default: "2.42.X"
      RC_NUM:
        type: string
        description: Release Candidate Number
        required: true
        default: "1"
      FINAL_PUBLISH:
        type: boolean
        description: Publish as RELEASE and LATEST?
        required: true
        default: false

jobs:
  build:
    env:
      RELEASE_VERSION: ${{github.event.inputs.RELEASE_VERSION}}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_REPO}}
          password: ${{secrets.DOCKER_HUB_TOKEN}}
      - name: Setting Release Branch
        run: echo "RC_TAG=v${{env.RELEASE_VERSION}}-RC${{github.event.inputs.RC_NUM}}" >> $GITHUB_ENV    
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{env.RC_TAG}}
      - name: Setup Go 
        uses: actions/setup-go@v3
        with:
          go-version: '1.18' 
      - name: Setup python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        
      - name: Setup Java
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: |
            8
            11
      - name: Exporting Java_HOME to Java 8
        run: echo "JAVA_HOME=${JAVA_HOME_8_X64}" >> $GITHUB_ENV
      - name: Installing ensurepip
        run: sudo apt install -y python3.8-venv
      - name: Publish images
        run: ./gradlew :pushAllDockerImages  -Pdocker-pull-licenses -Pdocker-tag="${{env.RC_TAG}}" -Pdocker-repository-root="${{secrets.DOCKER_HUB_REPO}}" -Pjava11Home=${JAVA_HOME_11_X64} 
      - name: Publish as LATEST and RELEASE_VERSION
        if: ${{ github.event.inputs.FINAL_PUBLISH == 'true' }}
        run: |
          IMAGES=$(docker images --filter "reference=${{secrets.DOCKER_HUB_REPO}}/beam_*:${{env.RC_TAG}}" --format "{{.Repository}}")          
          echo "$IMAGES" | while read IMAGE; do
            # Pull verified RC from dockerhub.
            docker pull "$IMAGE:${{env.RC_TAG}}"

            # Tag with ${RELEASE} and push to dockerhub.
            docker tag "$IMAGE:${{env.RC_TAG}}" "$IMAGE:$RELEASE_VERSION"
            docker push "$IMAGE:$RELEASE_VERSION"

            # Tag with latest and push to dockerhub.
            docker tag "$IMAGE:${{env.RC_TAG}}" "$IMAGE:latest"
            docker push "$IMAGE:latest"
          done
