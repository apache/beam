# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: PostCommit Java Examples Dataflow ARM

on:
  push:
    tags: ['v*']
    branches: ['master', 'release-*']
    paths:
      - 'model/**'
      - 'sdks/java/**'
      - 'runners/google-cloud-dataflow-java/**'
      - 'examples/java/**'
      - 'examples/kotlin/**'
      - 'release/**'
      - '.github/workflows/beam_PostCommit_Java_Examples_Dataflow_ARM.yml'
  issue_comment:
    types: [created]
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.issue.number || github.event.pull_request.head.label || github.sha || github.head_ref || github.ref }}-${{ github.event.schedule || github.event.comment.body || github.event.sender.login}}'
  cancel-in-progress: true

env:
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}

#Setting explicit permissions for the action to avoid the default permissions which are `write-all` in case of pull_request_target event
permissions:
  actions: write
  pull-requests: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: read
  discussions: read
  packages: read
  pages: read
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  beam_PostCommit_Java_Examples__Dataflow_ARM:
    name: ${{matrix.job_name}} (${{matrix.job_phrase}} ${{matrix.java_version}}) 
    runs-on: [self-hosted, ubuntu-20.04, main]
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix: 
        job_name: [beam_PostCommit_Java_Examples__Dataflow_ARM]
        job_phrase: [Run Java_Examples_Dataflow_ARM PostCommit]
        java_version: ['8','11','17']
    if: |
      github.event_name == 'push' ||
      github.event_name == 'schedule' ||
      github. event_name == 'workflow_dispatch' ||
      startswith(github.event.comment.body, 'Run Java_Examples_Dataflow_ARM PostCommit')
    steps:
      - uses: actions/checkout@v3
      - name: Setup repository
        uses: ./.github/actions/setup-action
        with:
          comment_phrase: ${{ matrix.job_phrase }} ${{matrix.java_version}}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_job: ${{ matrix.job_name }} (${{ matrix.job_phrase }}) ${{matrix.java_version}}
      - name: Setup self-hosted
        uses: ./.github/actions/setup-self-hosted-action
        with:
          requires-py-38: false
          requires-py-39: false
          requires-go: false
      - name: Set up Java${{ matrix.java_version }}
        uses: actions/setup-java@v3.8.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java_version }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Authenticate on GCP
        id: auth
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
      - name: GCloud Docker credential helper
        run: |
          gcloud auth configure-docker us.gcr.io
      - name: Generate TAG unique variable based on timestamp
        id: set_tag
        run: echo "TAG=$(date +'%Y%m%d-%H%M%S%N')" >> $GITHUB_OUTPUT
      - name: run javaExamplesDataflowARMPostCommit script for Java${{ matrix.java_version }}
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
            gradle-command: :runners:google-cloud-dataflow-java:arm:examplesJavaRunnerV2IntegrationTestARM
            arguments: |
                -PcompileAndRunTestsWithJava${{ matrix.java_version }} \
                -Pjava${{ matrix.java_version }}Home=$JAVA_HOME_${{ matrix.java_version }}_X64 \
                -Pcontainer-architecture-list=arm64,amd64 \
                -Ppush-containers \
                -Pdocker-repository-root=us.gcr.io/apache-beam-testing/github-actions \
                -Pdocker-tag=${{ steps.set_tag.outputs.TAG }} \
                -PdisableSpotlessCheck=true \
                -PdisableCheckStyle=true \
                -PskipCheckerFramework \
      - name: Upload test report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: java-code-coverage-report
          path: |
              "**/build/test-results/**/*.xml"
              "**/build/reports/tests/**/*.*"
