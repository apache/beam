# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PreCommit Website Stage GCS  

on:
  push:
    tags: ['v*']
    branches: ['master', 'release-*']
    paths: ['website/**','.github/workflows/beam_PreCommit_Website_Stage_GCS.yml']
  pull_request_target:
    branches: ['master', 'release-*']
    paths: ['website/**']
  issue_comment:
    types: [created]
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

# # This allows a subsequently queued workflow run to interrupt previous runs
# concurrency:
#   group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.sha || github.head_ref || github.ref }}-${{ github.event.sender.login }}-${{ github.event.schedule }}'
#   cancel-in-progress: true

#Setting explicit permissions for the action to avoid the default permissions which are `write-all` in case of pull_request_target event
permissions:
  actions: write
  pull-requests: read
  checks: read
  contents: read
  deployments: read
  id-token: none
  issues: read
  discussions: read
  packages: read
  pages: read
  repository-projects: read
  security-events: read
  statuses: read

env:
  gcsbucket: apache-beam-website-pull-requests  
  ghprbPullId:

jobs:
  beam_PreCommit_Website_Stage_GCS:
    timeout-minutes: 120
    if: |
      github.event_name == 'push' || 
      github.event_name == 'pull_request_target' || 
      github.event_name == 'schedule' ||
      github.event.comment.body == 'Run Website_Stage_GCS PreCommit' 
    runs-on: [self-hosted, ubuntu-20.04, main]
    name: beam_PreCommit_Website_Stage_GCS (Run Website_Stage_GCS PreCommit)
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Rerun on comment
        if: github.event.comment.body == 'Run Website_Stage_GCS PreCommit'
        uses: ./.github/actions/rerun-job-action
        with:
          pull_request_url: ${{ github.event.issue.pull_request.url }}
          github_repository: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_job: ${{ github.job }}
          github_current_run_id: ${{ github.run_id }}
      - name: Find Current Pull Request
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open
      - name: Echo PR number
        run: echo "ghprbPullId=${{ steps.findPr.outputs.pr || github.event.issue.number }}" >> $GITHUB_ENV
      - name: Setup self-hosted
        uses: ./.github/actions/setup-self-hosted-action
        with:
          requires-py-39: false
          requires-go: false
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: false
      - name: Authenticate on GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
      - name: Run website_stageWebsite script
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
          gradle-command: :website:stageWebsite
          arguments: -PwebsiteBucket=$gcsbucket
      - name: Add website link to the summary if pr
        if: env.ghprbPullId != null
        run: echo "Website published to http://$gcsbucket.storage.googleapis.com/$ghprbPullId/index.html" >> $GITHUB_STEP_SUMMARY
      - name: Add website link to the summary
        if: env.ghprbPullId == null
        run: |
          USERNAME="$(whoami)"
          echo "Website published to http://$gcsbucket.storage.googleapis.com/$USERNAME-${GITHUB_REF##*/}/index.html" >> $GITHUB_STEP_SUMMARY