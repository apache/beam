# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Workflows Issues Manager

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */12 * * *'

jobs:
  workflows_validation:
    name: Workflows Issues Manager
    permissions: write-all
    # Don't run on forks
    if: github.repository == 'apache/beam'
    runs-on: [self-hosted, ubuntu-20.04]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: Get repo workflows
        uses: actions/github-script@v6
        id: workflows-result
        with:
          script: |
            const { getRepoWorkflows } = require('./scripts/ci/workflows-issues-manager/workflows.js');
            const workflows = await getRepoWorkflows({github, context});
            
            console.log('REPO WORKFLOWS');
            console.table(workflows, ['id', 'name']);
             
            return workflows;

      - name: Identify unstable workflows and create issues
        uses: actions/github-script@v6
        with:
          script: |
            const { splitWorkflows, createIssuesForWorkflows, closeIssuesForWorkflows } = require('./scripts/ci/workflows-issues-manager/index.js');
            
            const workflows = ${{ steps.workflows-result.outputs.result }};

            console.log('WORKFLOWS RUNS');
            console.log('-'.repeat(150));
            const { unstable, stable, permared } = await splitWorkflows({github, context}, workflows);


            console.log('\n\n', 'SPLITTED WORKFLOWS');
            console.log('-'.repeat(150));

            console.log('\n', 'UNSTABLE WORKFLOWS');
            console.table(unstable.map(({workflow}) => workflow), ['id', 'name']);
            console.log('\n', 'STABLE WORKFLOWS');
            console.table(stable.map(({workflow}) => workflow), ['id', 'name']);
            console.log('\n', 'PERMARED WORKFLOWS');
            console.table(permared.map(({workflow}) => workflow), ['id', 'name']);
            
            console.log('\n\n', 'CREATED/CLOSED ISSUES');
            console.log('-'.repeat(150));
            const resultUnstable = await createIssuesForWorkflows({github, context}, unstable);
            const resultPermared = await createIssuesForWorkflows({github, context}, permared);
            const resultStable = await closeIssuesForWorkflows({github, context}, stable);
            
            console.log('\n', 'UNSTABLE RESULT');
            console.table(resultUnstable, ['id', 'name', 'issue_status', 'issue_url']);
            console.log('\n', 'PERMARED RESULT');
            console.table(resultPermared, ['id', 'name', 'issue_status', 'issue_url']);
            console.log('\n', 'STABLE RESULT');
            console.table(resultStable, ['id', 'name', 'issue_status', 'issue_url']);