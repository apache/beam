/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def basePath = '../../job-server'

project.ext {
  // Look for the source code in the parent module
  main_source_dirs = ["$basePath/src/main/java"]
  test_source_dirs = ["$basePath/src/test/java"]
  main_resources_dirs = ["$basePath/src/main/resources"]
  test_resources_dirs = ["$basePath/src/test/resources"]
  archives_base_name = 'beam-runners-spark-3-job-server'
}

// Load the main build script which contains all build logic.
apply from: "$basePath/spark_job_server.gradle"


configurations.runtimeClasspath {
  resolutionStrategy {
    // Downgrade the Scala version of the job-server to match the Scala version of a Spark 3.1.2 cluster to prevent
    // a Scala bug (InvalidClassException when deserializing WrappedArray), see https://github.com/apache/beam/issues/21092
    force "org.scala-lang:scala-library:2.12.10"
  }
}