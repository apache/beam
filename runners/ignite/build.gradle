/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import groovy.json.JsonOutput

plugins { id 'org.apache.beam.module' }
applyJavaNature(automaticModuleName: 'org.apache.beam.runners.ignite')

description = "Apache Beam :: Runners :: Ignite"

evaluationDependsOn(":sdks:java:core")
evaluationDependsOn(":runners:core-java")
evaluationDependsOn(":runners:core-construction-java")

project.ext {
    ignite_version = '2.7.6'
}

configurations {
    needsRunner
    validatesRunner
}

dependencies {
    compile project(path: ":sdks:java:core", configuration: "shadow")
    compile project(":runners:core-java")
    compile "org.apache.ignite:ignite-core:$ignite_version"
    compile "org.apache.ignite:ignite-spring:$ignite_version"
    compile "org.apache.ignite:ignite-indexing:$ignite_version"

    testCompile project(path: ":sdks:java:core", configuration: "shadowTest")
    testCompile project(path: ":runners:core-java", configuration: "testRuntime")
    testCompile project(path: ":runners:core-construction-java", configuration: "testRuntime")
    testCompile library.java.hamcrest_core
    testCompile library.java.junit

    needsRunner project(path: ":sdks:java:core", configuration: "shadowTest")
    needsRunner project(path: ":runners:core-java", configuration: "testRuntime")
    needsRunner project(path: ":runners:core-construction-java", configuration: "testRuntime")
    needsRunner project(path: project.path, configuration: "testRuntime")

    validatesRunner project(path: ":sdks:java:core", configuration: "shadowTest")
    validatesRunner project(path: ":runners:core-java", configuration: "testRuntime")
    validatesRunner project(path: ":runners:core-construction-java", configuration: "testRuntime")
    validatesRunner project(path: project.path, configuration: "testRuntime")
}

task validatesRunnerBatch(type: Test) {
    group = "Verification"
    systemProperty "beamTestPipelineOptions", JsonOutput.toJson(["--runner=TestIgniteRunner"])

    classpath = configurations.validatesRunner
    testClassesDirs = files(project(":sdks:java:core").sourceSets.test.output.classesDirs)
    useJUnit {
        includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'
        excludeCategories "org.apache.beam.sdk.testing.LargeKeys\$Above100MB"
        excludeCategories 'org.apache.beam.sdk.testing.UsesImpulse'
        exclude '**/SplittableDoFnTest.class'
    }

    maxHeapSize = '4g'
}

task validatesRunner {
    group = "Verification"
    description "Validates Ignite Runner"
    dependsOn validatesRunnerBatch
}

task needsRunnerTests(type: Test) {
    group = "Verification"
    description = "Runs tests that require a runner to validate that piplines/transforms work correctly"
    systemProperty "beamTestPipelineOptions", JsonOutput.toJson(["--runner=TestIgniteRunner"])

    classpath = configurations.needsRunner
    testClassesDirs += files(project(":runners:core-construction-java").sourceSets.test.output.classesDirs)
    testClassesDirs += files(project(":runners:core-java").sourceSets.test.output.classesDirs)
    testClassesDirs += files(project(":sdks:java:core").sourceSets.test.output.classesDirs)
    useJUnit {
        includeCategories "org.apache.beam.sdk.testing.NeedsRunner"
        excludeCategories "org.apache.beam.sdk.testing.LargeKeys\$Above100MB"
    }
}

task needsRunner {
    group = "Verification"
    description "Runs lower level tests with the Ignite Runner"
    dependsOn needsRunnerTests
}
