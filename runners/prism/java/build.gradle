/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import groovy.json.JsonOutput

plugins { id 'org.apache.beam.module' }
applyJavaNature( automaticModuleName: 'org.apache.beam.runners.portability')

description = "Apache Beam :: Runners :: Prism"
ext.summary = "A local portable runner."

configurations {
    validatesRunner
}

dependencies {
    compileOnly project(":sdks:java:build-tools")
    implementation project(path: ":sdks:java:core", configuration: "shadow")
    implementation project(path: ":runners:portability:java")
    implementation project(":runners:core-java")
    implementation project(":runners:java-fn-execution")
    implementation project(":runners:java-job-service")

    testImplementation library.java.junit

    validatesRunner project(path: ":sdks:java:core", configuration: "shadowTest")
    validatesRunner project(path: ":runners:core-java", configuration: "testRuntimeMigration")
    validatesRunner project(path: project.path, configuration: "testRuntimeMigration")
}

def JOB_ENDPOINT = "jobEndpoint"
def jobEndpoint = findProperty(JOB_ENDPOINT) ?: "localhost:8073"

def DEFAULT_ENVIRONMENT_TYPE = "defaultEnvironmentType"
def defaultEnvironmentType = findProperty(DEFAULT_ENVIRONMENT_TYPE) ?: "LOOPBACK"

project.evaluationDependsOn(":sdks:java:core")
project.evaluationDependsOn(":runners:core-java")

/**
 * Registers the validatesRunner task to execute tests using the Prism runner.
 * Requires a running Prism service prior to execution. See sdks/go/cmd/prism for details.
 */
tasks.register("validatesRunner", Test) {
    println "Using properties: jobEndpoint: ${jobEndpoint}, defaultEnvironmentType: ${defaultEnvironmentType}"
    dependsOn(":sdks:java:core:classes")
    dependsOn(":sdks:java:core:testClasses")
    dependsOn(":runners:core-java:classes")
    dependsOn(":runners:core-java:testClasses")
    group = "verification"
    def pipelineOptionsArray = [
            "--runner=TestUniversalRunner",
            "--jobEndpoint=${jobEndpoint}",
            "--defaultEnvironmentType=${defaultEnvironmentType}",
    ]
    def pipelineOptions = JsonOutput.toJson(pipelineOptionsArray)

    systemProperty "beamTestPipelineOptions", pipelineOptions
    classpath = configurations.validatesRunner
    testClassesDirs = files(
            project(":sdks:java:core").sourceSets.test.output.classesDirs,
            project(":runners:core-java").sourceSets.test.output.classesDirs,
    )
    useJUnit {
        includeCategories 'org.apache.beam.sdk.testing.ValidatesRunner'
    }
}