description = "Apache Beam :: Runners :: Flink"

def flink_version = "1.3.0"

dependencies {
  compile project(":beam-sdks-parent:beam-sdks-java-parent:beam-sdks-java-core")
  compile project(":beam-runners-parent:beam-runners-core-java")
  compile project(":beam-runners-parent:beam-runners-core-construction-java")
  compile library.java.jackson_annotations
  compile library.java.guava
  compile library.java.findbugs_jsr305
  compile library.java.slf4j_api
  compile library.java.joda_time
  compile library.java.commons_compress
  compile "org.apache.flink:flink-clients_2.10:$flink_version"
  compile "org.apache.flink:flink-core:$flink_version"
  compile "org.apache.flink:flink-metrics-core:$flink_version"
  compile "org.apache.flink:flink-java:$flink_version"
  compile "org.apache.flink:flink-runtime_2.10:$flink_version"
  compile "org.apache.flink:flink-streaming-java_2.10:$flink_version"
  testCompile project(":beam-sdks-parent:beam-sdks-java-parent:beam-sdks-java-core").sourceSets.test.output
  testCompile project(":beam-model-parent:beam-model-fn-execution").sourceSets.test.output
  testCompile project(":beam-runners-parent:beam-runners-core-java").sourceSets.test.output
  testCompile library.java.commons_lang3
  testCompile library.java.hamcrest_all
  testCompile library.java.junit
  testCompile library.java.mockito_all
  testCompile library.java.google_api_services_bigquery
  testCompile library.java.jackson_dataformat_yaml
  testCompile "org.apache.flink:flink-core:$flink_version:tests"
  testCompile "org.apache.flink:flink-runtime_2.10:$flink_version:tests"
  testCompile "org.apache.flink:flink-streaming-java_2.10:$flink_version:tests"
  testCompile "org.apache.flink:flink-test-utils_2.10:$flink_version"
}

task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = "tests"
}

artifacts.archives packageTests
