//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// Protocol Buffers describing the Job API, api for communicating with a runner
// for job submission over GRPC.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.27.3
// source: org/apache/beam/model/job_management/v1/beam_job_api.proto

//go:build protoopaque

package jobmanagement_v1

import (
	pipeline_v1 "github.com/apache/beam/sdks/v2/go/pkg/beam/model/pipeline_v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobMessage_MessageImportance int32

const (
	JobMessage_MESSAGE_IMPORTANCE_UNSPECIFIED JobMessage_MessageImportance = 0
	JobMessage_JOB_MESSAGE_DEBUG              JobMessage_MessageImportance = 1
	JobMessage_JOB_MESSAGE_DETAILED           JobMessage_MessageImportance = 2
	JobMessage_JOB_MESSAGE_BASIC              JobMessage_MessageImportance = 3
	JobMessage_JOB_MESSAGE_WARNING            JobMessage_MessageImportance = 4
	JobMessage_JOB_MESSAGE_ERROR              JobMessage_MessageImportance = 5
)

// Enum value maps for JobMessage_MessageImportance.
var (
	JobMessage_MessageImportance_name = map[int32]string{
		0: "MESSAGE_IMPORTANCE_UNSPECIFIED",
		1: "JOB_MESSAGE_DEBUG",
		2: "JOB_MESSAGE_DETAILED",
		3: "JOB_MESSAGE_BASIC",
		4: "JOB_MESSAGE_WARNING",
		5: "JOB_MESSAGE_ERROR",
	}
	JobMessage_MessageImportance_value = map[string]int32{
		"MESSAGE_IMPORTANCE_UNSPECIFIED": 0,
		"JOB_MESSAGE_DEBUG":              1,
		"JOB_MESSAGE_DETAILED":           2,
		"JOB_MESSAGE_BASIC":              3,
		"JOB_MESSAGE_WARNING":            4,
		"JOB_MESSAGE_ERROR":              5,
	}
)

func (x JobMessage_MessageImportance) Enum() *JobMessage_MessageImportance {
	p := new(JobMessage_MessageImportance)
	*p = x
	return p
}

func (x JobMessage_MessageImportance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobMessage_MessageImportance) Descriptor() protoreflect.EnumDescriptor {
	return file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes[0].Descriptor()
}

func (JobMessage_MessageImportance) Type() protoreflect.EnumType {
	return &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes[0]
}

func (x JobMessage_MessageImportance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type JobState_Enum int32

const (
	// The job state reported by a runner cannot be interpreted by the SDK.
	JobState_UNSPECIFIED JobState_Enum = 0
	// The job has not yet started.
	JobState_STOPPED JobState_Enum = 1
	// The job is currently running.
	JobState_RUNNING JobState_Enum = 2
	// The job has successfully completed. (terminal)
	JobState_DONE JobState_Enum = 3
	// The job has failed. (terminal)
	JobState_FAILED JobState_Enum = 4
	// The job has been explicitly cancelled. (terminal)
	JobState_CANCELLED JobState_Enum = 5
	// The job has been updated. (terminal)
	JobState_UPDATED JobState_Enum = 6
	// The job is draining its data. (optional)
	JobState_DRAINING JobState_Enum = 7
	// The job has completed draining its data. (terminal)
	JobState_DRAINED JobState_Enum = 8
	// The job is starting up.
	JobState_STARTING JobState_Enum = 9
	// The job is cancelling. (optional)
	JobState_CANCELLING JobState_Enum = 10
	// The job is in the process of being updated. (optional)
	JobState_UPDATING JobState_Enum = 11
)

// Enum value maps for JobState_Enum.
var (
	JobState_Enum_name = map[int32]string{
		0:  "UNSPECIFIED",
		1:  "STOPPED",
		2:  "RUNNING",
		3:  "DONE",
		4:  "FAILED",
		5:  "CANCELLED",
		6:  "UPDATED",
		7:  "DRAINING",
		8:  "DRAINED",
		9:  "STARTING",
		10: "CANCELLING",
		11: "UPDATING",
	}
	JobState_Enum_value = map[string]int32{
		"UNSPECIFIED": 0,
		"STOPPED":     1,
		"RUNNING":     2,
		"DONE":        3,
		"FAILED":      4,
		"CANCELLED":   5,
		"UPDATED":     6,
		"DRAINING":    7,
		"DRAINED":     8,
		"STARTING":    9,
		"CANCELLING":  10,
		"UPDATING":    11,
	}
)

func (x JobState_Enum) Enum() *JobState_Enum {
	p := new(JobState_Enum)
	*p = x
	return p
}

func (x JobState_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes[1].Descriptor()
}

func (JobState_Enum) Type() protoreflect.EnumType {
	return &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes[1]
}

func (x JobState_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type PipelineOptionType_Enum int32

const (
	PipelineOptionType_STRING  PipelineOptionType_Enum = 0
	PipelineOptionType_BOOLEAN PipelineOptionType_Enum = 1
	// whole numbers, see https://json-schema.org/understanding-json-schema/reference/numeric.html
	PipelineOptionType_INTEGER PipelineOptionType_Enum = 2
	PipelineOptionType_NUMBER  PipelineOptionType_Enum = 3
	PipelineOptionType_ARRAY   PipelineOptionType_Enum = 4
	PipelineOptionType_OBJECT  PipelineOptionType_Enum = 5
)

// Enum value maps for PipelineOptionType_Enum.
var (
	PipelineOptionType_Enum_name = map[int32]string{
		0: "STRING",
		1: "BOOLEAN",
		2: "INTEGER",
		3: "NUMBER",
		4: "ARRAY",
		5: "OBJECT",
	}
	PipelineOptionType_Enum_value = map[string]int32{
		"STRING":  0,
		"BOOLEAN": 1,
		"INTEGER": 2,
		"NUMBER":  3,
		"ARRAY":   4,
		"OBJECT":  5,
	}
)

func (x PipelineOptionType_Enum) Enum() *PipelineOptionType_Enum {
	p := new(PipelineOptionType_Enum)
	*p = x
	return p
}

func (x PipelineOptionType_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineOptionType_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes[2].Descriptor()
}

func (PipelineOptionType_Enum) Type() protoreflect.EnumType {
	return &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes[2]
}

func (x PipelineOptionType_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Prepare is a synchronous request that returns a preparationId back
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
// Throws error ALREADY_EXISTS if the jobName is reused. Runners are permitted to deduplicate based on the name of the job.
// Throws error UNKNOWN for all other issues
type PrepareJobRequest struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Pipeline        *pipeline_v1.Pipeline  `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	xxx_hidden_PipelineOptions *structpb.Struct       `protobuf:"bytes,2,opt,name=pipeline_options,json=pipelineOptions,proto3" json:"pipeline_options,omitempty"`
	xxx_hidden_JobName         string                 `protobuf:"bytes,3,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PrepareJobRequest) Reset() {
	*x = PrepareJobRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareJobRequest) ProtoMessage() {}

func (x *PrepareJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrepareJobRequest) GetPipeline() *pipeline_v1.Pipeline {
	if x != nil {
		return x.xxx_hidden_Pipeline
	}
	return nil
}

func (x *PrepareJobRequest) GetPipelineOptions() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_PipelineOptions
	}
	return nil
}

func (x *PrepareJobRequest) GetJobName() string {
	if x != nil {
		return x.xxx_hidden_JobName
	}
	return ""
}

func (x *PrepareJobRequest) SetPipeline(v *pipeline_v1.Pipeline) {
	x.xxx_hidden_Pipeline = v
}

func (x *PrepareJobRequest) SetPipelineOptions(v *structpb.Struct) {
	x.xxx_hidden_PipelineOptions = v
}

func (x *PrepareJobRequest) SetJobName(v string) {
	x.xxx_hidden_JobName = v
}

func (x *PrepareJobRequest) HasPipeline() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pipeline != nil
}

func (x *PrepareJobRequest) HasPipelineOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PipelineOptions != nil
}

func (x *PrepareJobRequest) ClearPipeline() {
	x.xxx_hidden_Pipeline = nil
}

func (x *PrepareJobRequest) ClearPipelineOptions() {
	x.xxx_hidden_PipelineOptions = nil
}

type PrepareJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Pipeline        *pipeline_v1.Pipeline
	PipelineOptions *structpb.Struct
	JobName         string
}

func (b0 PrepareJobRequest_builder) Build() *PrepareJobRequest {
	m0 := &PrepareJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Pipeline = b.Pipeline
	x.xxx_hidden_PipelineOptions = b.PipelineOptions
	x.xxx_hidden_JobName = b.JobName
	return m0
}

type PrepareJobResponse struct {
	state                              protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_PreparationId           string                            `protobuf:"bytes,1,opt,name=preparation_id,json=preparationId,proto3" json:"preparation_id,omitempty"`
	xxx_hidden_ArtifactStagingEndpoint *pipeline_v1.ApiServiceDescriptor `protobuf:"bytes,2,opt,name=artifact_staging_endpoint,json=artifactStagingEndpoint,proto3" json:"artifact_staging_endpoint,omitempty"`
	xxx_hidden_StagingSessionToken     string                            `protobuf:"bytes,3,opt,name=staging_session_token,json=stagingSessionToken,proto3" json:"staging_session_token,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *PrepareJobResponse) Reset() {
	*x = PrepareJobResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareJobResponse) ProtoMessage() {}

func (x *PrepareJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PrepareJobResponse) GetPreparationId() string {
	if x != nil {
		return x.xxx_hidden_PreparationId
	}
	return ""
}

func (x *PrepareJobResponse) GetArtifactStagingEndpoint() *pipeline_v1.ApiServiceDescriptor {
	if x != nil {
		return x.xxx_hidden_ArtifactStagingEndpoint
	}
	return nil
}

func (x *PrepareJobResponse) GetStagingSessionToken() string {
	if x != nil {
		return x.xxx_hidden_StagingSessionToken
	}
	return ""
}

func (x *PrepareJobResponse) SetPreparationId(v string) {
	x.xxx_hidden_PreparationId = v
}

func (x *PrepareJobResponse) SetArtifactStagingEndpoint(v *pipeline_v1.ApiServiceDescriptor) {
	x.xxx_hidden_ArtifactStagingEndpoint = v
}

func (x *PrepareJobResponse) SetStagingSessionToken(v string) {
	x.xxx_hidden_StagingSessionToken = v
}

func (x *PrepareJobResponse) HasArtifactStagingEndpoint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ArtifactStagingEndpoint != nil
}

func (x *PrepareJobResponse) ClearArtifactStagingEndpoint() {
	x.xxx_hidden_ArtifactStagingEndpoint = nil
}

type PrepareJobResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// (required) The ID used to associate calls made while preparing the job. preparationId is used
	// to run the job.
	PreparationId string
	// An endpoint which exposes the Beam Artifact Staging API. Artifacts used by the job should be
	// staged to this endpoint, and will be available during job execution.
	ArtifactStagingEndpoint *pipeline_v1.ApiServiceDescriptor
	// (required) Token for the artifact staging. This token also represent an artifact
	// staging session with the artifact staging service.
	StagingSessionToken string
}

func (b0 PrepareJobResponse_builder) Build() *PrepareJobResponse {
	m0 := &PrepareJobResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PreparationId = b.PreparationId
	x.xxx_hidden_ArtifactStagingEndpoint = b.ArtifactStagingEndpoint
	x.xxx_hidden_StagingSessionToken = b.StagingSessionToken
	return m0
}

// Run is a synchronous request that returns a jobId back.
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
// Throws error NOT_FOUND if the preparation ID does not exist
// Throws error UNKNOWN for all other issues
type RunJobRequest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PreparationId  string                 `protobuf:"bytes,1,opt,name=preparation_id,json=preparationId,proto3" json:"preparation_id,omitempty"`
	xxx_hidden_RetrievalToken string                 `protobuf:"bytes,2,opt,name=retrieval_token,json=retrievalToken,proto3" json:"retrieval_token,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *RunJobRequest) Reset() {
	*x = RunJobRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobRequest) ProtoMessage() {}

func (x *RunJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RunJobRequest) GetPreparationId() string {
	if x != nil {
		return x.xxx_hidden_PreparationId
	}
	return ""
}

func (x *RunJobRequest) GetRetrievalToken() string {
	if x != nil {
		return x.xxx_hidden_RetrievalToken
	}
	return ""
}

func (x *RunJobRequest) SetPreparationId(v string) {
	x.xxx_hidden_PreparationId = v
}

func (x *RunJobRequest) SetRetrievalToken(v string) {
	x.xxx_hidden_RetrievalToken = v
}

type RunJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// (required) The ID provided by an earlier call to prepare. Runs the job. All prerequisite tasks
	// must have been completed.
	PreparationId string
	// (optional) If any artifacts have been staged for this job, contains the retrieval_token returned
	// from the CommitManifestResponse.
	RetrievalToken string
}

func (b0 RunJobRequest_builder) Build() *RunJobRequest {
	m0 := &RunJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PreparationId = b.PreparationId
	x.xxx_hidden_RetrievalToken = b.RetrievalToken
	return m0
}

type RunJobResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RunJobResponse) Reset() {
	*x = RunJobResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunJobResponse) ProtoMessage() {}

func (x *RunJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RunJobResponse) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *RunJobResponse) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type RunJobResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 RunJobResponse_builder) Build() *RunJobResponse {
	m0 := &RunJobResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

// Cancel is a synchronus request that returns a job state back
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
// Throws error NOT_FOUND if the jobId is not found
type CancelJobRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelJobRequest) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *CancelJobRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type CancelJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 CancelJobRequest_builder) Build() *CancelJobRequest {
	m0 := &CancelJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

// Valid responses include any terminal state or CANCELLING
type CancelJobResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State JobState_Enum          `protobuf:"varint,1,opt,name=state,proto3,enum=org.apache.beam.model.job_management.v1.JobState_Enum" json:"state,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CancelJobResponse) Reset() {
	*x = CancelJobResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobResponse) ProtoMessage() {}

func (x *CancelJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelJobResponse) GetState() JobState_Enum {
	if x != nil {
		return x.xxx_hidden_State
	}
	return JobState_UNSPECIFIED
}

func (x *CancelJobResponse) SetState(v JobState_Enum) {
	x.xxx_hidden_State = v
}

type CancelJobResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State JobState_Enum
}

func (b0 CancelJobResponse_builder) Build() *CancelJobResponse {
	m0 := &CancelJobResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	return m0
}

// Drain is a request to:
// - stop a pipeline Job from ingesting new data from input sources
// - process remaining data in the pipeline
// - truncate Splittable DoFns
type DrainJobRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DrainJobRequest) Reset() {
	*x = DrainJobRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainJobRequest) ProtoMessage() {}

func (x *DrainJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DrainJobRequest) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *DrainJobRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type DrainJobRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 DrainJobRequest_builder) Build() *DrainJobRequest {
	m0 := &DrainJobRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

// Valid responses include any terminal state or DRAINING
type DrainJobResponse struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State JobState_Enum          `protobuf:"varint,1,opt,name=state,proto3,enum=org.apache.beam.model.job_management.v1.JobState_Enum" json:"state,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DrainJobResponse) Reset() {
	*x = DrainJobResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrainJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrainJobResponse) ProtoMessage() {}

func (x *DrainJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DrainJobResponse) GetState() JobState_Enum {
	if x != nil {
		return x.xxx_hidden_State
	}
	return JobState_UNSPECIFIED
}

func (x *DrainJobResponse) SetState(v JobState_Enum) {
	x.xxx_hidden_State = v
}

type DrainJobResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State JobState_Enum
}

func (b0 DrainJobResponse_builder) Build() *DrainJobResponse {
	m0 := &DrainJobResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	return m0
}

// A subset of info provided by ProvisionApi.ProvisionInfo
type JobInfo struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId           string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	xxx_hidden_JobName         string                 `protobuf:"bytes,2,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	xxx_hidden_PipelineOptions *structpb.Struct       `protobuf:"bytes,3,opt,name=pipeline_options,json=pipelineOptions,proto3" json:"pipeline_options,omitempty"`
	xxx_hidden_State           JobState_Enum          `protobuf:"varint,4,opt,name=state,proto3,enum=org.apache.beam.model.job_management.v1.JobState_Enum" json:"state,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobInfo) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *JobInfo) GetJobName() string {
	if x != nil {
		return x.xxx_hidden_JobName
	}
	return ""
}

func (x *JobInfo) GetPipelineOptions() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_PipelineOptions
	}
	return nil
}

func (x *JobInfo) GetState() JobState_Enum {
	if x != nil {
		return x.xxx_hidden_State
	}
	return JobState_UNSPECIFIED
}

func (x *JobInfo) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

func (x *JobInfo) SetJobName(v string) {
	x.xxx_hidden_JobName = v
}

func (x *JobInfo) SetPipelineOptions(v *structpb.Struct) {
	x.xxx_hidden_PipelineOptions = v
}

func (x *JobInfo) SetState(v JobState_Enum) {
	x.xxx_hidden_State = v
}

func (x *JobInfo) HasPipelineOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PipelineOptions != nil
}

func (x *JobInfo) ClearPipelineOptions() {
	x.xxx_hidden_PipelineOptions = nil
}

type JobInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId           string
	JobName         string
	PipelineOptions *structpb.Struct
	State           JobState_Enum
}

func (b0 JobInfo_builder) Build() *JobInfo {
	m0 := &JobInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	x.xxx_hidden_JobName = b.JobName
	x.xxx_hidden_PipelineOptions = b.PipelineOptions
	x.xxx_hidden_State = b.State
	return m0
}

// GetJobs is a synchronus request that returns a list of invoked jobs back
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
type GetJobsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobsRequest) Reset() {
	*x = GetJobsRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsRequest) ProtoMessage() {}

func (x *GetJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type GetJobsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 GetJobsRequest_builder) Build() *GetJobsRequest {
	m0 := &GetJobsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetJobsResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobInfo *[]*JobInfo            `protobuf:"bytes,1,rep,name=job_info,json=jobInfo,proto3" json:"job_info,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetJobsResponse) Reset() {
	*x = GetJobsResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsResponse) ProtoMessage() {}

func (x *GetJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobsResponse) GetJobInfo() []*JobInfo {
	if x != nil {
		if x.xxx_hidden_JobInfo != nil {
			return *x.xxx_hidden_JobInfo
		}
	}
	return nil
}

func (x *GetJobsResponse) SetJobInfo(v []*JobInfo) {
	x.xxx_hidden_JobInfo = &v
}

type GetJobsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobInfo []*JobInfo
}

func (b0 GetJobsResponse_builder) Build() *GetJobsResponse {
	m0 := &GetJobsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobInfo = &b.JobInfo
	return m0
}

// GetState is a synchronus request that returns a job state back
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
// Throws error NOT_FOUND if the jobId is not found
type GetJobStateRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetJobStateRequest) Reset() {
	*x = GetJobStateRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobStateRequest) ProtoMessage() {}

func (x *GetJobStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobStateRequest) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *GetJobStateRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type GetJobStateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 GetJobStateRequest_builder) Build() *GetJobStateRequest {
	m0 := &GetJobStateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

type JobStateEvent struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State     JobState_Enum          `protobuf:"varint,1,opt,name=state,proto3,enum=org.apache.beam.model.job_management.v1.JobState_Enum" json:"state,omitempty"`
	xxx_hidden_Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *JobStateEvent) Reset() {
	*x = JobStateEvent{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStateEvent) ProtoMessage() {}

func (x *JobStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobStateEvent) GetState() JobState_Enum {
	if x != nil {
		return x.xxx_hidden_State
	}
	return JobState_UNSPECIFIED
}

func (x *JobStateEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *JobStateEvent) SetState(v JobState_Enum) {
	x.xxx_hidden_State = v
}

func (x *JobStateEvent) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *JobStateEvent) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *JobStateEvent) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

type JobStateEvent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State     JobState_Enum
	Timestamp *timestamppb.Timestamp
}

func (b0 JobStateEvent_builder) Build() *JobStateEvent {
	m0 := &JobStateEvent{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	x.xxx_hidden_Timestamp = b.Timestamp
	return m0
}

// GetPipeline is a synchronus request that returns a pipeline back
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
// Throws error NOT_FOUND if the jobId is not found
type GetJobPipelineRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetJobPipelineRequest) Reset() {
	*x = GetJobPipelineRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobPipelineRequest) ProtoMessage() {}

func (x *GetJobPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobPipelineRequest) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *GetJobPipelineRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type GetJobPipelineRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 GetJobPipelineRequest_builder) Build() *GetJobPipelineRequest {
	m0 := &GetJobPipelineRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

type GetJobPipelineResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Pipeline *pipeline_v1.Pipeline  `protobuf:"bytes,1,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetJobPipelineResponse) Reset() {
	*x = GetJobPipelineResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobPipelineResponse) ProtoMessage() {}

func (x *GetJobPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobPipelineResponse) GetPipeline() *pipeline_v1.Pipeline {
	if x != nil {
		return x.xxx_hidden_Pipeline
	}
	return nil
}

func (x *GetJobPipelineResponse) SetPipeline(v *pipeline_v1.Pipeline) {
	x.xxx_hidden_Pipeline = v
}

func (x *GetJobPipelineResponse) HasPipeline() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pipeline != nil
}

func (x *GetJobPipelineResponse) ClearPipeline() {
	x.xxx_hidden_Pipeline = nil
}

type GetJobPipelineResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Pipeline *pipeline_v1.Pipeline
}

func (b0 GetJobPipelineResponse_builder) Build() *GetJobPipelineResponse {
	m0 := &GetJobPipelineResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Pipeline = b.Pipeline
	return m0
}

// GetJobMessages is a streaming api for streaming job messages from the service
// One request will connect you to the job and you'll get a stream of job state
// and job messages back; one is used for logging and the other for detecting
// the job ended.
type JobMessagesRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobMessagesRequest) Reset() {
	*x = JobMessagesRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMessagesRequest) ProtoMessage() {}

func (x *JobMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobMessagesRequest) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *JobMessagesRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type JobMessagesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 JobMessagesRequest_builder) Build() *JobMessagesRequest {
	m0 := &JobMessagesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

type JobMessage struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_MessageId   string                       `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	xxx_hidden_Time        string                       `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	xxx_hidden_Importance  JobMessage_MessageImportance `protobuf:"varint,3,opt,name=importance,proto3,enum=org.apache.beam.model.job_management.v1.JobMessage_MessageImportance" json:"importance,omitempty"`
	xxx_hidden_MessageText string                       `protobuf:"bytes,4,opt,name=message_text,json=messageText,proto3" json:"message_text,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobMessage) Reset() {
	*x = JobMessage{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMessage) ProtoMessage() {}

func (x *JobMessage) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobMessage) GetMessageId() string {
	if x != nil {
		return x.xxx_hidden_MessageId
	}
	return ""
}

func (x *JobMessage) GetTime() string {
	if x != nil {
		return x.xxx_hidden_Time
	}
	return ""
}

func (x *JobMessage) GetImportance() JobMessage_MessageImportance {
	if x != nil {
		return x.xxx_hidden_Importance
	}
	return JobMessage_MESSAGE_IMPORTANCE_UNSPECIFIED
}

func (x *JobMessage) GetMessageText() string {
	if x != nil {
		return x.xxx_hidden_MessageText
	}
	return ""
}

func (x *JobMessage) SetMessageId(v string) {
	x.xxx_hidden_MessageId = v
}

func (x *JobMessage) SetTime(v string) {
	x.xxx_hidden_Time = v
}

func (x *JobMessage) SetImportance(v JobMessage_MessageImportance) {
	x.xxx_hidden_Importance = v
}

func (x *JobMessage) SetMessageText(v string) {
	x.xxx_hidden_MessageText = v
}

type JobMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MessageId   string
	Time        string
	Importance  JobMessage_MessageImportance
	MessageText string
}

func (b0 JobMessage_builder) Build() *JobMessage {
	m0 := &JobMessage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_MessageId = b.MessageId
	x.xxx_hidden_Time = b.Time
	x.xxx_hidden_Importance = b.Importance
	x.xxx_hidden_MessageText = b.MessageText
	return m0
}

type JobMessagesResponse struct {
	state               protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Response isJobMessagesResponse_Response `protobuf_oneof:"response"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *JobMessagesResponse) Reset() {
	*x = JobMessagesResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMessagesResponse) ProtoMessage() {}

func (x *JobMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobMessagesResponse) GetMessageResponse() *JobMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_Response.(*jobMessagesResponse_MessageResponse); ok {
			return x.MessageResponse
		}
	}
	return nil
}

func (x *JobMessagesResponse) GetStateResponse() *JobStateEvent {
	if x != nil {
		if x, ok := x.xxx_hidden_Response.(*jobMessagesResponse_StateResponse); ok {
			return x.StateResponse
		}
	}
	return nil
}

func (x *JobMessagesResponse) SetMessageResponse(v *JobMessage) {
	if v == nil {
		x.xxx_hidden_Response = nil
		return
	}
	x.xxx_hidden_Response = &jobMessagesResponse_MessageResponse{v}
}

func (x *JobMessagesResponse) SetStateResponse(v *JobStateEvent) {
	if v == nil {
		x.xxx_hidden_Response = nil
		return
	}
	x.xxx_hidden_Response = &jobMessagesResponse_StateResponse{v}
}

func (x *JobMessagesResponse) HasResponse() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Response != nil
}

func (x *JobMessagesResponse) HasMessageResponse() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Response.(*jobMessagesResponse_MessageResponse)
	return ok
}

func (x *JobMessagesResponse) HasStateResponse() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Response.(*jobMessagesResponse_StateResponse)
	return ok
}

func (x *JobMessagesResponse) ClearResponse() {
	x.xxx_hidden_Response = nil
}

func (x *JobMessagesResponse) ClearMessageResponse() {
	if _, ok := x.xxx_hidden_Response.(*jobMessagesResponse_MessageResponse); ok {
		x.xxx_hidden_Response = nil
	}
}

func (x *JobMessagesResponse) ClearStateResponse() {
	if _, ok := x.xxx_hidden_Response.(*jobMessagesResponse_StateResponse); ok {
		x.xxx_hidden_Response = nil
	}
}

const JobMessagesResponse_Response_not_set_case case_JobMessagesResponse_Response = 0
const JobMessagesResponse_MessageResponse_case case_JobMessagesResponse_Response = 1
const JobMessagesResponse_StateResponse_case case_JobMessagesResponse_Response = 2

func (x *JobMessagesResponse) WhichResponse() case_JobMessagesResponse_Response {
	if x == nil {
		return JobMessagesResponse_Response_not_set_case
	}
	switch x.xxx_hidden_Response.(type) {
	case *jobMessagesResponse_MessageResponse:
		return JobMessagesResponse_MessageResponse_case
	case *jobMessagesResponse_StateResponse:
		return JobMessagesResponse_StateResponse_case
	default:
		return JobMessagesResponse_Response_not_set_case
	}
}

type JobMessagesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Response:
	MessageResponse *JobMessage
	StateResponse   *JobStateEvent
	// -- end of xxx_hidden_Response
}

func (b0 JobMessagesResponse_builder) Build() *JobMessagesResponse {
	m0 := &JobMessagesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MessageResponse != nil {
		x.xxx_hidden_Response = &jobMessagesResponse_MessageResponse{b.MessageResponse}
	}
	if b.StateResponse != nil {
		x.xxx_hidden_Response = &jobMessagesResponse_StateResponse{b.StateResponse}
	}
	return m0
}

type case_JobMessagesResponse_Response protoreflect.FieldNumber

func (x case_JobMessagesResponse_Response) String() string {
	md := file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[17].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isJobMessagesResponse_Response interface {
	isJobMessagesResponse_Response()
}

type jobMessagesResponse_MessageResponse struct {
	MessageResponse *JobMessage `protobuf:"bytes,1,opt,name=message_response,json=messageResponse,proto3,oneof"`
}

type jobMessagesResponse_StateResponse struct {
	StateResponse *JobStateEvent `protobuf:"bytes,2,opt,name=state_response,json=stateResponse,proto3,oneof"`
}

func (*jobMessagesResponse_MessageResponse) isJobMessagesResponse_Response() {}

func (*jobMessagesResponse_StateResponse) isJobMessagesResponse_Response() {}

// Enumeration of all JobStates
//
// The state transition diagram is:
//
//	STOPPED -> STARTING -> RUNNING -> DONE
//	                               \> FAILED
//	                               \> CANCELLING -> CANCELLED
//	                               \> UPDATING -> UPDATED
//	                               \> DRAINING -> DRAINED
//
// Transitions are optional such that a job may go from STOPPED to RUNNING
// without needing to pass through STARTING.
type JobState struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobState) Reset() {
	*x = JobState{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobState) ProtoMessage() {}

func (x *JobState) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type JobState_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 JobState_builder) Build() *JobState {
	m0 := &JobState{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type GetJobMetricsRequest struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetJobMetricsRequest) Reset() {
	*x = GetJobMetricsRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobMetricsRequest) ProtoMessage() {}

func (x *GetJobMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobMetricsRequest) GetJobId() string {
	if x != nil {
		return x.xxx_hidden_JobId
	}
	return ""
}

func (x *GetJobMetricsRequest) SetJobId(v string) {
	x.xxx_hidden_JobId = v
}

type GetJobMetricsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId string
}

func (b0 GetJobMetricsRequest_builder) Build() *GetJobMetricsRequest {
	m0 := &GetJobMetricsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_JobId = b.JobId
	return m0
}

type GetJobMetricsResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Metrics *MetricResults         `protobuf:"bytes,1,opt,name=metrics,proto3" json:"metrics,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetJobMetricsResponse) Reset() {
	*x = GetJobMetricsResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobMetricsResponse) ProtoMessage() {}

func (x *GetJobMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetJobMetricsResponse) GetMetrics() *MetricResults {
	if x != nil {
		return x.xxx_hidden_Metrics
	}
	return nil
}

func (x *GetJobMetricsResponse) SetMetrics(v *MetricResults) {
	x.xxx_hidden_Metrics = v
}

func (x *GetJobMetricsResponse) HasMetrics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metrics != nil
}

func (x *GetJobMetricsResponse) ClearMetrics() {
	x.xxx_hidden_Metrics = nil
}

type GetJobMetricsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metrics *MetricResults
}

func (b0 GetJobMetricsResponse_builder) Build() *GetJobMetricsResponse {
	m0 := &GetJobMetricsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metrics = b.Metrics
	return m0
}

// All metrics for a given job.  Runners may support one or the other or both.
type MetricResults struct {
	state                protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Attempted *[]*pipeline_v1.MonitoringInfo `protobuf:"bytes,1,rep,name=attempted,proto3" json:"attempted,omitempty"`
	xxx_hidden_Committed *[]*pipeline_v1.MonitoringInfo `protobuf:"bytes,2,rep,name=committed,proto3" json:"committed,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MetricResults) Reset() {
	*x = MetricResults{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricResults) ProtoMessage() {}

func (x *MetricResults) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MetricResults) GetAttempted() []*pipeline_v1.MonitoringInfo {
	if x != nil {
		if x.xxx_hidden_Attempted != nil {
			return *x.xxx_hidden_Attempted
		}
	}
	return nil
}

func (x *MetricResults) GetCommitted() []*pipeline_v1.MonitoringInfo {
	if x != nil {
		if x.xxx_hidden_Committed != nil {
			return *x.xxx_hidden_Committed
		}
	}
	return nil
}

func (x *MetricResults) SetAttempted(v []*pipeline_v1.MonitoringInfo) {
	x.xxx_hidden_Attempted = &v
}

func (x *MetricResults) SetCommitted(v []*pipeline_v1.MonitoringInfo) {
	x.xxx_hidden_Committed = &v
}

type MetricResults_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Attempted []*pipeline_v1.MonitoringInfo
	Committed []*pipeline_v1.MonitoringInfo
}

func (b0 MetricResults_builder) Build() *MetricResults {
	m0 := &MetricResults{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Attempted = &b.Attempted
	x.xxx_hidden_Committed = &b.Committed
	return m0
}

// DescribePipelineOptions provides metadata about the options supported by a runner.
// It will be used by the SDK client to validate the options specified by or
// list available options to the user.
// Throws error GRPC_STATUS_UNAVAILABLE if server is down
type DescribePipelineOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribePipelineOptionsRequest) Reset() {
	*x = DescribePipelineOptionsRequest{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribePipelineOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePipelineOptionsRequest) ProtoMessage() {}

func (x *DescribePipelineOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type DescribePipelineOptionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 DescribePipelineOptionsRequest_builder) Build() *DescribePipelineOptionsRequest {
	m0 := &DescribePipelineOptionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Type for pipeline options.
// Types mirror those of JSON, since that's how pipeline options are serialized.
type PipelineOptionType struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineOptionType) Reset() {
	*x = PipelineOptionType{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineOptionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineOptionType) ProtoMessage() {}

func (x *PipelineOptionType) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type PipelineOptionType_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 PipelineOptionType_builder) Build() *PipelineOptionType {
	m0 := &PipelineOptionType{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

// Metadata for a pipeline option.
type PipelineOptionDescriptor struct {
	state                   protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Name         string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	xxx_hidden_Type         PipelineOptionType_Enum `protobuf:"varint,2,opt,name=type,proto3,enum=org.apache.beam.model.job_management.v1.PipelineOptionType_Enum" json:"type,omitempty"`
	xxx_hidden_Description  string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	xxx_hidden_DefaultValue string                  `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	xxx_hidden_Group        string                  `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PipelineOptionDescriptor) Reset() {
	*x = PipelineOptionDescriptor{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineOptionDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineOptionDescriptor) ProtoMessage() {}

func (x *PipelineOptionDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PipelineOptionDescriptor) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *PipelineOptionDescriptor) GetType() PipelineOptionType_Enum {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return PipelineOptionType_STRING
}

func (x *PipelineOptionDescriptor) GetDescription() string {
	if x != nil {
		return x.xxx_hidden_Description
	}
	return ""
}

func (x *PipelineOptionDescriptor) GetDefaultValue() string {
	if x != nil {
		return x.xxx_hidden_DefaultValue
	}
	return ""
}

func (x *PipelineOptionDescriptor) GetGroup() string {
	if x != nil {
		return x.xxx_hidden_Group
	}
	return ""
}

func (x *PipelineOptionDescriptor) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *PipelineOptionDescriptor) SetType(v PipelineOptionType_Enum) {
	x.xxx_hidden_Type = v
}

func (x *PipelineOptionDescriptor) SetDescription(v string) {
	x.xxx_hidden_Description = v
}

func (x *PipelineOptionDescriptor) SetDefaultValue(v string) {
	x.xxx_hidden_DefaultValue = v
}

func (x *PipelineOptionDescriptor) SetGroup(v string) {
	x.xxx_hidden_Group = v
}

type PipelineOptionDescriptor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// (Required) The option name.
	Name string
	// (Required) Type of option.
	Type PipelineOptionType_Enum
	// (Optional) Description suitable for display / help text.
	Description string
	// (Optional) Default value.
	DefaultValue string
	// (Required) The group this option belongs to.
	Group string
}

func (b0 PipelineOptionDescriptor_builder) Build() *PipelineOptionDescriptor {
	m0 := &PipelineOptionDescriptor{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Description = b.Description
	x.xxx_hidden_DefaultValue = b.DefaultValue
	x.xxx_hidden_Group = b.Group
	return m0
}

type DescribePipelineOptionsResponse struct {
	state              protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Options *[]*PipelineOptionDescriptor `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DescribePipelineOptionsResponse) Reset() {
	*x = DescribePipelineOptionsResponse{}
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribePipelineOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribePipelineOptionsResponse) ProtoMessage() {}

func (x *DescribePipelineOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DescribePipelineOptionsResponse) GetOptions() []*PipelineOptionDescriptor {
	if x != nil {
		if x.xxx_hidden_Options != nil {
			return *x.xxx_hidden_Options
		}
	}
	return nil
}

func (x *DescribePipelineOptionsResponse) SetOptions(v []*PipelineOptionDescriptor) {
	x.xxx_hidden_Options = &v
}

type DescribePipelineOptionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// List of pipeline option descriptors.
	Options []*PipelineOptionDescriptor
}

func (b0 DescribePipelineOptionsResponse_builder) Build() *DescribePipelineOptionsResponse {
	m0 := &DescribePipelineOptionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Options = &b.Options
	return m0
}

var File_org_apache_beam_model_job_management_v1_beam_job_api_proto protoreflect.FileDescriptor

var file_org_apache_beam_model_job_management_v1_beam_job_api_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x65, 0x61,
	0x6d, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x6a,
	0x6f, 0x62, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x37, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x61, 0x63, 0x68,
	0x65, 0x2f, 0x62, 0x65, 0x61, 0x6d, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31,
	0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x65, 0x61, 0x6d, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x65,
	0x61, 0x6d, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x42, 0x0a, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x0f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xe4, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x73, 0x0a,
	0x19, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x69, 0x6e,
	0x67, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65,
	0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x17, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x73, 0x74, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5f, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x0e, 0x52, 0x75, 0x6e, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x22, 0x29, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x28,
	0x0a, 0x0f, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x69,
	0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62,
	0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x2e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61,
	0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x2b, 0x0a, 0x12, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x22, 0xfb, 0x02, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x65, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x22,
	0xaf, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x42,
	0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x4a, 0x4f, 0x42, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f,
	0x42, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x41, 0x53, 0x49, 0x43, 0x10,
	0x03, 0x12, 0x17, 0x0a, 0x13, 0x4a, 0x4f, 0x42, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f,
	0x42, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x05, 0x22, 0xe4, 0x01, 0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x10, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f,
	0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x08, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e,
	0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x44,
	0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x52, 0x41,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x49,
	0x4e, 0x47, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x0b, 0x22, 0x2d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x22, 0x69, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xb1, 0x01, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x4f,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62,
	0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x12,
	0x4f, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e,
	0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x65, 0x0a, 0x12, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54,
	0x45, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x05, 0x22, 0xe1, 0x01, 0x0a, 0x18, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x7e, 0x0a,
	0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62,
	0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xf4, 0x0b,
	0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a,
	0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x76, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65,
	0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x73, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65,
	0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x06, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x12, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x05, 0x44, 0x72,
	0x61, 0x69, 0x6e, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72,
	0x61, 0x69, 0x6e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x61, 0x69, 0x6e, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x3b, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61,
	0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x30, 0x01, 0x12, 0x8f, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a,
	0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f,
	0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x47, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62,
	0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x84, 0x01, 0x0a, 0x26, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61,
	0x63, 0x68, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x6a,
	0x6f, 0x62, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42,
	0x06, 0x4a, 0x6f, 0x62, 0x41, 0x70, 0x69, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x62, 0x65, 0x61, 0x6d, 0x2f,
	0x73, 0x64, 0x6b, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x62,
	0x65, 0x61, 0x6d, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6a, 0x6f, 0x62, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x3b, 0x6a, 0x6f, 0x62, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_org_apache_beam_model_job_management_v1_beam_job_api_proto_goTypes = []any{
	(JobMessage_MessageImportance)(0),        // 0: org.apache.beam.model.job_management.v1.JobMessage.MessageImportance
	(JobState_Enum)(0),                       // 1: org.apache.beam.model.job_management.v1.JobState.Enum
	(PipelineOptionType_Enum)(0),             // 2: org.apache.beam.model.job_management.v1.PipelineOptionType.Enum
	(*PrepareJobRequest)(nil),                // 3: org.apache.beam.model.job_management.v1.PrepareJobRequest
	(*PrepareJobResponse)(nil),               // 4: org.apache.beam.model.job_management.v1.PrepareJobResponse
	(*RunJobRequest)(nil),                    // 5: org.apache.beam.model.job_management.v1.RunJobRequest
	(*RunJobResponse)(nil),                   // 6: org.apache.beam.model.job_management.v1.RunJobResponse
	(*CancelJobRequest)(nil),                 // 7: org.apache.beam.model.job_management.v1.CancelJobRequest
	(*CancelJobResponse)(nil),                // 8: org.apache.beam.model.job_management.v1.CancelJobResponse
	(*DrainJobRequest)(nil),                  // 9: org.apache.beam.model.job_management.v1.DrainJobRequest
	(*DrainJobResponse)(nil),                 // 10: org.apache.beam.model.job_management.v1.DrainJobResponse
	(*JobInfo)(nil),                          // 11: org.apache.beam.model.job_management.v1.JobInfo
	(*GetJobsRequest)(nil),                   // 12: org.apache.beam.model.job_management.v1.GetJobsRequest
	(*GetJobsResponse)(nil),                  // 13: org.apache.beam.model.job_management.v1.GetJobsResponse
	(*GetJobStateRequest)(nil),               // 14: org.apache.beam.model.job_management.v1.GetJobStateRequest
	(*JobStateEvent)(nil),                    // 15: org.apache.beam.model.job_management.v1.JobStateEvent
	(*GetJobPipelineRequest)(nil),            // 16: org.apache.beam.model.job_management.v1.GetJobPipelineRequest
	(*GetJobPipelineResponse)(nil),           // 17: org.apache.beam.model.job_management.v1.GetJobPipelineResponse
	(*JobMessagesRequest)(nil),               // 18: org.apache.beam.model.job_management.v1.JobMessagesRequest
	(*JobMessage)(nil),                       // 19: org.apache.beam.model.job_management.v1.JobMessage
	(*JobMessagesResponse)(nil),              // 20: org.apache.beam.model.job_management.v1.JobMessagesResponse
	(*JobState)(nil),                         // 21: org.apache.beam.model.job_management.v1.JobState
	(*GetJobMetricsRequest)(nil),             // 22: org.apache.beam.model.job_management.v1.GetJobMetricsRequest
	(*GetJobMetricsResponse)(nil),            // 23: org.apache.beam.model.job_management.v1.GetJobMetricsResponse
	(*MetricResults)(nil),                    // 24: org.apache.beam.model.job_management.v1.MetricResults
	(*DescribePipelineOptionsRequest)(nil),   // 25: org.apache.beam.model.job_management.v1.DescribePipelineOptionsRequest
	(*PipelineOptionType)(nil),               // 26: org.apache.beam.model.job_management.v1.PipelineOptionType
	(*PipelineOptionDescriptor)(nil),         // 27: org.apache.beam.model.job_management.v1.PipelineOptionDescriptor
	(*DescribePipelineOptionsResponse)(nil),  // 28: org.apache.beam.model.job_management.v1.DescribePipelineOptionsResponse
	(*pipeline_v1.Pipeline)(nil),             // 29: org.apache.beam.model.pipeline.v1.Pipeline
	(*structpb.Struct)(nil),                  // 30: google.protobuf.Struct
	(*pipeline_v1.ApiServiceDescriptor)(nil), // 31: org.apache.beam.model.pipeline.v1.ApiServiceDescriptor
	(*timestamppb.Timestamp)(nil),            // 32: google.protobuf.Timestamp
	(*pipeline_v1.MonitoringInfo)(nil),       // 33: org.apache.beam.model.pipeline.v1.MonitoringInfo
}
var file_org_apache_beam_model_job_management_v1_beam_job_api_proto_depIdxs = []int32{
	29, // 0: org.apache.beam.model.job_management.v1.PrepareJobRequest.pipeline:type_name -> org.apache.beam.model.pipeline.v1.Pipeline
	30, // 1: org.apache.beam.model.job_management.v1.PrepareJobRequest.pipeline_options:type_name -> google.protobuf.Struct
	31, // 2: org.apache.beam.model.job_management.v1.PrepareJobResponse.artifact_staging_endpoint:type_name -> org.apache.beam.model.pipeline.v1.ApiServiceDescriptor
	1,  // 3: org.apache.beam.model.job_management.v1.CancelJobResponse.state:type_name -> org.apache.beam.model.job_management.v1.JobState.Enum
	1,  // 4: org.apache.beam.model.job_management.v1.DrainJobResponse.state:type_name -> org.apache.beam.model.job_management.v1.JobState.Enum
	30, // 5: org.apache.beam.model.job_management.v1.JobInfo.pipeline_options:type_name -> google.protobuf.Struct
	1,  // 6: org.apache.beam.model.job_management.v1.JobInfo.state:type_name -> org.apache.beam.model.job_management.v1.JobState.Enum
	11, // 7: org.apache.beam.model.job_management.v1.GetJobsResponse.job_info:type_name -> org.apache.beam.model.job_management.v1.JobInfo
	1,  // 8: org.apache.beam.model.job_management.v1.JobStateEvent.state:type_name -> org.apache.beam.model.job_management.v1.JobState.Enum
	32, // 9: org.apache.beam.model.job_management.v1.JobStateEvent.timestamp:type_name -> google.protobuf.Timestamp
	29, // 10: org.apache.beam.model.job_management.v1.GetJobPipelineResponse.pipeline:type_name -> org.apache.beam.model.pipeline.v1.Pipeline
	0,  // 11: org.apache.beam.model.job_management.v1.JobMessage.importance:type_name -> org.apache.beam.model.job_management.v1.JobMessage.MessageImportance
	19, // 12: org.apache.beam.model.job_management.v1.JobMessagesResponse.message_response:type_name -> org.apache.beam.model.job_management.v1.JobMessage
	15, // 13: org.apache.beam.model.job_management.v1.JobMessagesResponse.state_response:type_name -> org.apache.beam.model.job_management.v1.JobStateEvent
	24, // 14: org.apache.beam.model.job_management.v1.GetJobMetricsResponse.metrics:type_name -> org.apache.beam.model.job_management.v1.MetricResults
	33, // 15: org.apache.beam.model.job_management.v1.MetricResults.attempted:type_name -> org.apache.beam.model.pipeline.v1.MonitoringInfo
	33, // 16: org.apache.beam.model.job_management.v1.MetricResults.committed:type_name -> org.apache.beam.model.pipeline.v1.MonitoringInfo
	2,  // 17: org.apache.beam.model.job_management.v1.PipelineOptionDescriptor.type:type_name -> org.apache.beam.model.job_management.v1.PipelineOptionType.Enum
	27, // 18: org.apache.beam.model.job_management.v1.DescribePipelineOptionsResponse.options:type_name -> org.apache.beam.model.job_management.v1.PipelineOptionDescriptor
	3,  // 19: org.apache.beam.model.job_management.v1.JobService.Prepare:input_type -> org.apache.beam.model.job_management.v1.PrepareJobRequest
	5,  // 20: org.apache.beam.model.job_management.v1.JobService.Run:input_type -> org.apache.beam.model.job_management.v1.RunJobRequest
	12, // 21: org.apache.beam.model.job_management.v1.JobService.GetJobs:input_type -> org.apache.beam.model.job_management.v1.GetJobsRequest
	14, // 22: org.apache.beam.model.job_management.v1.JobService.GetState:input_type -> org.apache.beam.model.job_management.v1.GetJobStateRequest
	16, // 23: org.apache.beam.model.job_management.v1.JobService.GetPipeline:input_type -> org.apache.beam.model.job_management.v1.GetJobPipelineRequest
	7,  // 24: org.apache.beam.model.job_management.v1.JobService.Cancel:input_type -> org.apache.beam.model.job_management.v1.CancelJobRequest
	9,  // 25: org.apache.beam.model.job_management.v1.JobService.Drain:input_type -> org.apache.beam.model.job_management.v1.DrainJobRequest
	14, // 26: org.apache.beam.model.job_management.v1.JobService.GetStateStream:input_type -> org.apache.beam.model.job_management.v1.GetJobStateRequest
	18, // 27: org.apache.beam.model.job_management.v1.JobService.GetMessageStream:input_type -> org.apache.beam.model.job_management.v1.JobMessagesRequest
	22, // 28: org.apache.beam.model.job_management.v1.JobService.GetJobMetrics:input_type -> org.apache.beam.model.job_management.v1.GetJobMetricsRequest
	25, // 29: org.apache.beam.model.job_management.v1.JobService.DescribePipelineOptions:input_type -> org.apache.beam.model.job_management.v1.DescribePipelineOptionsRequest
	4,  // 30: org.apache.beam.model.job_management.v1.JobService.Prepare:output_type -> org.apache.beam.model.job_management.v1.PrepareJobResponse
	6,  // 31: org.apache.beam.model.job_management.v1.JobService.Run:output_type -> org.apache.beam.model.job_management.v1.RunJobResponse
	13, // 32: org.apache.beam.model.job_management.v1.JobService.GetJobs:output_type -> org.apache.beam.model.job_management.v1.GetJobsResponse
	15, // 33: org.apache.beam.model.job_management.v1.JobService.GetState:output_type -> org.apache.beam.model.job_management.v1.JobStateEvent
	17, // 34: org.apache.beam.model.job_management.v1.JobService.GetPipeline:output_type -> org.apache.beam.model.job_management.v1.GetJobPipelineResponse
	8,  // 35: org.apache.beam.model.job_management.v1.JobService.Cancel:output_type -> org.apache.beam.model.job_management.v1.CancelJobResponse
	10, // 36: org.apache.beam.model.job_management.v1.JobService.Drain:output_type -> org.apache.beam.model.job_management.v1.DrainJobResponse
	15, // 37: org.apache.beam.model.job_management.v1.JobService.GetStateStream:output_type -> org.apache.beam.model.job_management.v1.JobStateEvent
	20, // 38: org.apache.beam.model.job_management.v1.JobService.GetMessageStream:output_type -> org.apache.beam.model.job_management.v1.JobMessagesResponse
	23, // 39: org.apache.beam.model.job_management.v1.JobService.GetJobMetrics:output_type -> org.apache.beam.model.job_management.v1.GetJobMetricsResponse
	28, // 40: org.apache.beam.model.job_management.v1.JobService.DescribePipelineOptions:output_type -> org.apache.beam.model.job_management.v1.DescribePipelineOptionsResponse
	30, // [30:41] is the sub-list for method output_type
	19, // [19:30] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_org_apache_beam_model_job_management_v1_beam_job_api_proto_init() }
func file_org_apache_beam_model_job_management_v1_beam_job_api_proto_init() {
	if File_org_apache_beam_model_job_management_v1_beam_job_api_proto != nil {
		return
	}
	file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes[17].OneofWrappers = []any{
		(*jobMessagesResponse_MessageResponse)(nil),
		(*jobMessagesResponse_StateResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_org_apache_beam_model_job_management_v1_beam_job_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_org_apache_beam_model_job_management_v1_beam_job_api_proto_goTypes,
		DependencyIndexes: file_org_apache_beam_model_job_management_v1_beam_job_api_proto_depIdxs,
		EnumInfos:         file_org_apache_beam_model_job_management_v1_beam_job_api_proto_enumTypes,
		MessageInfos:      file_org_apache_beam_model_job_management_v1_beam_job_api_proto_msgTypes,
	}.Build()
	File_org_apache_beam_model_job_management_v1_beam_job_api_proto = out.File
	file_org_apache_beam_model_job_management_v1_beam_job_api_proto_rawDesc = nil
	file_org_apache_beam_model_job_management_v1_beam_job_api_proto_goTypes = nil
	file_org_apache_beam_model_job_management_v1_beam_job_api_proto_depIdxs = nil
}
