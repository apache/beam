// Code generated by protoc-gen-go. DO NOT EDIT.
// source: beam_runner_api.proto

package pipeline_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BeamConstants_Constants int32

const (
	// All timestamps in milliseconds since Jan 1, 1970.
	BeamConstants_MIN_TIMESTAMP_MILLIS BeamConstants_Constants = 0
	BeamConstants_MAX_TIMESTAMP_MILLIS BeamConstants_Constants = 1
	// The maximum timestamp for the global window.
	// Triggers use maxTimestamp to set timers' timestamp. Timers fires when
	// the watermark passes their timestamps. So, the timestamp needs to be
	// smaller than the MAX_TIMESTAMP_MILLIS.
	// One standard day is subtracted from MAX_TIMESTAMP_MILLIS to make sure
	// the maxTimestamp is smaller than MAX_TIMESTAMP_MILLIS even after rounding up
	// to seconds or minutes. See also GlobalWindow in the Java SDK.
	BeamConstants_GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS BeamConstants_Constants = 2
)

var BeamConstants_Constants_name = map[int32]string{
	0: "MIN_TIMESTAMP_MILLIS",
	1: "MAX_TIMESTAMP_MILLIS",
	2: "GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS",
}
var BeamConstants_Constants_value = map[string]int32{
	"MIN_TIMESTAMP_MILLIS":               0,
	"MAX_TIMESTAMP_MILLIS":               1,
	"GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS": 2,
}

func (x BeamConstants_Constants) String() string {
	return proto.EnumName(BeamConstants_Constants_name, int32(x))
}
func (BeamConstants_Constants) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{0, 0}
}

type StandardPTransforms_Primitives int32

const (
	// Represents Beam's parallel do operation.
	// Payload: ParDoPayload.
	// TODO(BEAM-3595): Change this to beam:transform:pardo:v1.
	StandardPTransforms_PAR_DO StandardPTransforms_Primitives = 0
	// Represents Beam's flatten operation.
	// Payload: None.
	StandardPTransforms_FLATTEN StandardPTransforms_Primitives = 1
	// Represents Beam's group-by-key operation.
	// Payload: None
	StandardPTransforms_GROUP_BY_KEY StandardPTransforms_Primitives = 2
	// Represents the operation generating a single empty element.
	StandardPTransforms_IMPULSE StandardPTransforms_Primitives = 3
	// Represents the Window.into() operation.
	// Payload: WindowIntoPayload.
	StandardPTransforms_ASSIGN_WINDOWS StandardPTransforms_Primitives = 4
	// Represents the TestStream.
	// Payload: TestStreamPayload
	StandardPTransforms_TEST_STREAM StandardPTransforms_Primitives = 5
	// Represents mapping of main input window onto side input window.
	//
	// Side input window mapping function:
	// Input: KV<nonce, MainInputWindow>
	// Output: KV<nonce, SideInputWindow>
	//
	// For each main input window, the side input window is returned. The
	// nonce is used by a runner to associate each input with its output.
	// The nonce is represented as an opaque set of bytes.
	//
	// Payload: WindowMappingFn from SideInputSpec.
	StandardPTransforms_MAP_WINDOWS StandardPTransforms_Primitives = 6
	// Used to merge windows during a GroupByKey.
	//
	// Window merging function:
	// Input: KV<nonce, iterable<OriginalWindow>>
	// Output: KV<nonce, KV<iterable<UnmergedOriginalWindow>, iterable<KV<MergedWindow, iterable<ConsumedOriginalWindow>>>>
	//
	// For each set of original windows, a list of all unmerged windows is
	// output alongside a map of merged window to set of consumed windows.
	// All original windows must be contained in either the unmerged original
	// window set or one of the consumed original window sets. Each original
	// window can only be part of one output set. The nonce is used by a runner
	// to associate each input with its output. The nonce is represented as an
	// opaque set of bytes.
	//
	// Payload: WindowFn from WindowingStrategy.
	StandardPTransforms_MERGE_WINDOWS StandardPTransforms_Primitives = 7
)

var StandardPTransforms_Primitives_name = map[int32]string{
	0: "PAR_DO",
	1: "FLATTEN",
	2: "GROUP_BY_KEY",
	3: "IMPULSE",
	4: "ASSIGN_WINDOWS",
	5: "TEST_STREAM",
	6: "MAP_WINDOWS",
	7: "MERGE_WINDOWS",
}
var StandardPTransforms_Primitives_value = map[string]int32{
	"PAR_DO":         0,
	"FLATTEN":        1,
	"GROUP_BY_KEY":   2,
	"IMPULSE":        3,
	"ASSIGN_WINDOWS": 4,
	"TEST_STREAM":    5,
	"MAP_WINDOWS":    6,
	"MERGE_WINDOWS":  7,
}

func (x StandardPTransforms_Primitives) String() string {
	return proto.EnumName(StandardPTransforms_Primitives_name, int32(x))
}
func (StandardPTransforms_Primitives) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{4, 0}
}

type StandardPTransforms_DeprecatedPrimitives int32

const (
	// Represents the operation to read a Bounded or Unbounded source.
	// Payload: ReadPayload.
	StandardPTransforms_READ StandardPTransforms_DeprecatedPrimitives = 0
	// Runners should move away from translating `CreatePCollectionView` and treat this as
	// part of the translation for a `ParDo` side input.
	StandardPTransforms_CREATE_VIEW StandardPTransforms_DeprecatedPrimitives = 1
)

var StandardPTransforms_DeprecatedPrimitives_name = map[int32]string{
	0: "READ",
	1: "CREATE_VIEW",
}
var StandardPTransforms_DeprecatedPrimitives_value = map[string]int32{
	"READ":        0,
	"CREATE_VIEW": 1,
}

func (x StandardPTransforms_DeprecatedPrimitives) String() string {
	return proto.EnumName(StandardPTransforms_DeprecatedPrimitives_name, int32(x))
}
func (StandardPTransforms_DeprecatedPrimitives) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{4, 1}
}

type StandardPTransforms_Composites int32

const (
	// Represents the Combine.perKey() operation.
	// If this is produced by an SDK, it is assumed that the SDK understands
	// each of CombineComponents.
	// Payload: CombinePayload
	StandardPTransforms_COMBINE_PER_KEY StandardPTransforms_Composites = 0
	// Represents the Combine.globally() operation.
	// If this is produced by an SDK, it is assumed that the SDK understands
	// each of CombineComponents.
	// Payload: CombinePayload
	StandardPTransforms_COMBINE_GLOBALLY StandardPTransforms_Composites = 1
	// Represents the Reshuffle operation.
	StandardPTransforms_RESHUFFLE StandardPTransforms_Composites = 2
	// Less well-known. Payload: WriteFilesPayload.
	StandardPTransforms_WRITE_FILES StandardPTransforms_Composites = 3
)

var StandardPTransforms_Composites_name = map[int32]string{
	0: "COMBINE_PER_KEY",
	1: "COMBINE_GLOBALLY",
	2: "RESHUFFLE",
	3: "WRITE_FILES",
}
var StandardPTransforms_Composites_value = map[string]int32{
	"COMBINE_PER_KEY":  0,
	"COMBINE_GLOBALLY": 1,
	"RESHUFFLE":        2,
	"WRITE_FILES":      3,
}

func (x StandardPTransforms_Composites) String() string {
	return proto.EnumName(StandardPTransforms_Composites_name, int32(x))
}
func (StandardPTransforms_Composites) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{4, 2}
}

// Payload for all of these: CombinePayload
type StandardPTransforms_CombineComponents int32

const (
	// Represents the Pre-Combine part of a lifted Combine Per Key, as described
	// in the following document:
	// https://s.apache.org/beam-runner-api-combine-model#heading=h.ta0g6ase8z07
	// Payload: CombinePayload
	StandardPTransforms_COMBINE_PER_KEY_PRECOMBINE StandardPTransforms_CombineComponents = 0
	// Represents the Merge Accumulators part of a lifted Combine Per Key, as
	// described in the following document:
	// https://s.apache.org/beam-runner-api-combine-model#heading=h.jco9rvatld5m
	// Payload: CombinePayload
	StandardPTransforms_COMBINE_PER_KEY_MERGE_ACCUMULATORS StandardPTransforms_CombineComponents = 1
	// Represents the Extract Outputs part of a lifted Combine Per Key, as
	// described in the following document:
	// https://s.apache.org/beam-runner-api-combine-model#heading=h.i9i6p8gtl6ku
	// Payload: CombinePayload
	StandardPTransforms_COMBINE_PER_KEY_EXTRACT_OUTPUTS StandardPTransforms_CombineComponents = 2
	// Represents the Combine Grouped Values transform, as described in the
	// following document:
	// https://s.apache.org/beam-runner-api-combine-model#heading=h.aj86ew4v1wk
	// Payload: CombinePayload
	StandardPTransforms_COMBINE_GROUPED_VALUES StandardPTransforms_CombineComponents = 3
)

var StandardPTransforms_CombineComponents_name = map[int32]string{
	0: "COMBINE_PER_KEY_PRECOMBINE",
	1: "COMBINE_PER_KEY_MERGE_ACCUMULATORS",
	2: "COMBINE_PER_KEY_EXTRACT_OUTPUTS",
	3: "COMBINE_GROUPED_VALUES",
}
var StandardPTransforms_CombineComponents_value = map[string]int32{
	"COMBINE_PER_KEY_PRECOMBINE":         0,
	"COMBINE_PER_KEY_MERGE_ACCUMULATORS": 1,
	"COMBINE_PER_KEY_EXTRACT_OUTPUTS":    2,
	"COMBINE_GROUPED_VALUES":             3,
}

func (x StandardPTransforms_CombineComponents) String() string {
	return proto.EnumName(StandardPTransforms_CombineComponents_name, int32(x))
}
func (StandardPTransforms_CombineComponents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{4, 3}
}

// Payload for all of these: ParDoPayload containing the user's SDF
type StandardPTransforms_SplittableParDoComponents int32

const (
	// Pairs the input element with its initial restriction.
	// Input: element; output: KV(element, restriction).
	StandardPTransforms_PAIR_WITH_RESTRICTION StandardPTransforms_SplittableParDoComponents = 0
	// Splits the restriction inside an element/restriction pair.
	// Input: KV(element, restriction); output: KV(element, restriction).
	StandardPTransforms_SPLIT_RESTRICTION StandardPTransforms_SplittableParDoComponents = 1
	// Applies the DoFn to every element/restriction pair in a uniquely keyed
	// collection, in a splittable fashion.
	// Input: KV(bytes, KV(element, restriction)); output: DoFn's output.
	// The first "bytes" is an opaque unique key using the standard bytes coder.
	// Typically a runner would rewrite this into a runner-specific grouping
	// operation supporting state and timers, followed by PROCESS_ELEMENTS,
	// with some runner-specific glue code in between.
	StandardPTransforms_PROCESS_KEYED_ELEMENTS StandardPTransforms_SplittableParDoComponents = 2
	// Like PROCESS_KEYED_ELEMENTS, but without the unique key - just elements
	// and restrictions.
	// Input: KV(element, restriction); output: DoFn's output.
	StandardPTransforms_PROCESS_ELEMENTS StandardPTransforms_SplittableParDoComponents = 3
	// Splits the restriction of each element/restriction pair and returns the
	// resulting splits, with a corresponding floating point size estimations
	// for each.
	// A reasonable value for size is the number of bytes expected to be
	// produced by this (element, restriction) pair.
	// Input: KV(element, restriction)
	// Output: KV(KV(element, restriction), size))
	StandardPTransforms_SPLIT_AND_SIZE_RESTRICTIONS StandardPTransforms_SplittableParDoComponents = 4
	// Like PROCESS_ELEMENTS, but accepts the sized output produced by
	// SPLIT_RESTRICTION_WITH_SIZING.
	// Input: KV(KV(element, restriction), size); output: DoFn's output.
	StandardPTransforms_PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS StandardPTransforms_SplittableParDoComponents = 5
)

var StandardPTransforms_SplittableParDoComponents_name = map[int32]string{
	0: "PAIR_WITH_RESTRICTION",
	1: "SPLIT_RESTRICTION",
	2: "PROCESS_KEYED_ELEMENTS",
	3: "PROCESS_ELEMENTS",
	4: "SPLIT_AND_SIZE_RESTRICTIONS",
	5: "PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS",
}
var StandardPTransforms_SplittableParDoComponents_value = map[string]int32{
	"PAIR_WITH_RESTRICTION":                   0,
	"SPLIT_RESTRICTION":                       1,
	"PROCESS_KEYED_ELEMENTS":                  2,
	"PROCESS_ELEMENTS":                        3,
	"SPLIT_AND_SIZE_RESTRICTIONS":             4,
	"PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS": 5,
}

func (x StandardPTransforms_SplittableParDoComponents) String() string {
	return proto.EnumName(StandardPTransforms_SplittableParDoComponents_name, int32(x))
}
func (StandardPTransforms_SplittableParDoComponents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{4, 4}
}

type StandardSideInputTypes_Enum int32

const (
	StandardSideInputTypes_ITERABLE StandardSideInputTypes_Enum = 0
	StandardSideInputTypes_MULTIMAP StandardSideInputTypes_Enum = 1
)

var StandardSideInputTypes_Enum_name = map[int32]string{
	0: "ITERABLE",
	1: "MULTIMAP",
}
var StandardSideInputTypes_Enum_value = map[string]int32{
	"ITERABLE": 0,
	"MULTIMAP": 1,
}

func (x StandardSideInputTypes_Enum) String() string {
	return proto.EnumName(StandardSideInputTypes_Enum_name, int32(x))
}
func (StandardSideInputTypes_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{5, 0}
}

type Parameter_Type_Enum int32

const (
	Parameter_Type_UNSPECIFIED         Parameter_Type_Enum = 0
	Parameter_Type_WINDOW              Parameter_Type_Enum = 1
	Parameter_Type_PIPELINE_OPTIONS    Parameter_Type_Enum = 2
	Parameter_Type_RESTRICTION_TRACKER Parameter_Type_Enum = 3
)

var Parameter_Type_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "WINDOW",
	2: "PIPELINE_OPTIONS",
	3: "RESTRICTION_TRACKER",
}
var Parameter_Type_Enum_value = map[string]int32{
	"UNSPECIFIED":         0,
	"WINDOW":              1,
	"PIPELINE_OPTIONS":    2,
	"RESTRICTION_TRACKER": 3,
}

func (x Parameter_Type_Enum) String() string {
	return proto.EnumName(Parameter_Type_Enum_name, int32(x))
}
func (Parameter_Type_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{8, 0, 0}
}

type IsBounded_Enum int32

const (
	IsBounded_UNSPECIFIED IsBounded_Enum = 0
	IsBounded_UNBOUNDED   IsBounded_Enum = 1
	IsBounded_BOUNDED     IsBounded_Enum = 2
)

var IsBounded_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "UNBOUNDED",
	2: "BOUNDED",
}
var IsBounded_Enum_value = map[string]int32{
	"UNSPECIFIED": 0,
	"UNBOUNDED":   1,
	"BOUNDED":     2,
}

func (x IsBounded_Enum) String() string {
	return proto.EnumName(IsBounded_Enum_name, int32(x))
}
func (IsBounded_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{16, 0}
}

type StandardCoders_Enum int32

const (
	// Components: None
	StandardCoders_BYTES StandardCoders_Enum = 0
	// Components: None
	StandardCoders_STRING_UTF8 StandardCoders_Enum = 10
	// Components: The key and value coder, in that order.
	StandardCoders_KV StandardCoders_Enum = 1
	// Variable length Encodes a 64-bit integer.
	// Components: None
	StandardCoders_VARINT StandardCoders_Enum = 2
	// Encodes the floating point value as a big-endian 64-bit integer
	// according to the IEEE 754 double format bit layout.
	// Components: None
	StandardCoders_DOUBLE StandardCoders_Enum = 11
	// Encodes an iterable of elements.
	//
	// The encoding for an iterable [e1...eN] of known length N is
	//
	//    fixed32(N)
	//    encode(e1) encode(e2) encode(e3) ... encode(eN)
	//
	// If the length is unknown, it is batched up into groups of size b1..bM
	// and encoded as
	//
	//     fixed32(-1)
	//     varInt64(b1) encode(e1) encode(e2) ... encode(e_b1)
	//     varInt64(b2) encode(e_(b1+1)) encode(e_(b1+2)) ... encode(e_(b1+b2))
	//     ...
	//     varInt64(bM) encode(e_(N-bM+1)) encode(e_(N-bM+2)) ... encode(eN)
	//     varInt64(0)
	//
	// Components: Coder for a single element.
	StandardCoders_ITERABLE StandardCoders_Enum = 3
	// Encodes a timer containing a timestamp and a user specified payload.
	// The encoding is represented as: timestamp payload
	//   timestamp - a big endian 8 byte integer representing millis-since-epoch.
	//     The encoded representation is shifted so that the byte representation of
	//     negative values are lexicographically ordered before the byte representation
	//     of positive values. This is typically done by subtracting -9223372036854775808
	//     from the value and encoding it as a signed big endian integer. Example values:
	//
	//     -9223372036854775808: 00 00 00 00 00 00 00 00
	//                     -255: 7F FF FF FF FF FF FF 01
	//                       -1: 7F FF FF FF FF FF FF FF
	//                        0: 80 00 00 00 00 00 00 00
	//                        1: 80 00 00 00 00 00 00 01
	//                      256: 80 00 00 00 00 00 01 00
	//      9223372036854775807: FF FF FF FF FF FF FF FF
	//   payload - user defined data, uses the component coder
	// Components: Coder for the payload.
	StandardCoders_TIMER StandardCoders_Enum = 4
	// Components: None
	StandardCoders_INTERVAL_WINDOW StandardCoders_Enum = 5
	// Components: The coder to attach a length prefix to
	StandardCoders_LENGTH_PREFIX StandardCoders_Enum = 6
	// Components: None
	StandardCoders_GLOBAL_WINDOW StandardCoders_Enum = 7
	// Encodes an element, the window the value is in, the timestamp of the element, and the pane
	// of the element
	// Components: The element coder and the window coder, in that order
	StandardCoders_WINDOWED_VALUE StandardCoders_Enum = 8
	// Encodes an iterable of elements, some of which may be stored elsewhere.
	//
	// The encoding for a state-backed iterable is the same as that for
	// an iterable, but the final varInt64(0) terminating the set of batches
	// may instead be replaced by
	//
	//     varInt64(-1)
	//     varInt64(len(token))
	//     token
	//
	// where token is an opaque byte string that can be used to fetch the
	// remainder of the iterable (e.g. over the state API).
	//
	// Components: Coder for a single element.
	// Experimental.
	StandardCoders_STATE_BACKED_ITERABLE StandardCoders_Enum = 9
)

var StandardCoders_Enum_name = map[int32]string{
	0:  "BYTES",
	10: "STRING_UTF8",
	1:  "KV",
	2:  "VARINT",
	11: "DOUBLE",
	3:  "ITERABLE",
	4:  "TIMER",
	5:  "INTERVAL_WINDOW",
	6:  "LENGTH_PREFIX",
	7:  "GLOBAL_WINDOW",
	8:  "WINDOWED_VALUE",
	9:  "STATE_BACKED_ITERABLE",
}
var StandardCoders_Enum_value = map[string]int32{
	"BYTES":                 0,
	"STRING_UTF8":           10,
	"KV":                    1,
	"VARINT":                2,
	"DOUBLE":                11,
	"ITERABLE":              3,
	"TIMER":                 4,
	"INTERVAL_WINDOW":       5,
	"LENGTH_PREFIX":         6,
	"GLOBAL_WINDOW":         7,
	"WINDOWED_VALUE":        8,
	"STATE_BACKED_ITERABLE": 9,
}

func (x StandardCoders_Enum) String() string {
	return proto.EnumName(StandardCoders_Enum_name, int32(x))
}
func (StandardCoders_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{23, 0}
}

type Schema_TypeName int32

const (
	Schema_BYTE         Schema_TypeName = 0
	Schema_INT16        Schema_TypeName = 1
	Schema_INT32        Schema_TypeName = 2
	Schema_INT64        Schema_TypeName = 3
	Schema_DECIMAL      Schema_TypeName = 4
	Schema_FLOAT        Schema_TypeName = 5
	Schema_DOUBLE       Schema_TypeName = 6
	Schema_STRING       Schema_TypeName = 7
	Schema_DATETIME     Schema_TypeName = 8
	Schema_BOOLEAN      Schema_TypeName = 9
	Schema_BYTES        Schema_TypeName = 10
	Schema_ARRAY        Schema_TypeName = 11
	Schema_MAP          Schema_TypeName = 13
	Schema_ROW          Schema_TypeName = 14
	Schema_LOGICAL_TYPE Schema_TypeName = 15
)

var Schema_TypeName_name = map[int32]string{
	0:  "BYTE",
	1:  "INT16",
	2:  "INT32",
	3:  "INT64",
	4:  "DECIMAL",
	5:  "FLOAT",
	6:  "DOUBLE",
	7:  "STRING",
	8:  "DATETIME",
	9:  "BOOLEAN",
	10: "BYTES",
	11: "ARRAY",
	13: "MAP",
	14: "ROW",
	15: "LOGICAL_TYPE",
}
var Schema_TypeName_value = map[string]int32{
	"BYTE":         0,
	"INT16":        1,
	"INT32":        2,
	"INT64":        3,
	"DECIMAL":      4,
	"FLOAT":        5,
	"DOUBLE":       6,
	"STRING":       7,
	"DATETIME":     8,
	"BOOLEAN":      9,
	"BYTES":        10,
	"ARRAY":        11,
	"MAP":          13,
	"ROW":          14,
	"LOGICAL_TYPE": 15,
}

func (x Schema_TypeName) String() string {
	return proto.EnumName(Schema_TypeName_name, int32(x))
}
func (Schema_TypeName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{24, 0}
}

type MergeStatus_Enum int32

const (
	MergeStatus_UNSPECIFIED MergeStatus_Enum = 0
	// The WindowFn does not require merging.
	// Examples: global window, FixedWindows, SlidingWindows
	MergeStatus_NON_MERGING MergeStatus_Enum = 1
	// The WindowFn is merging and the PCollection has not had merging
	// performed.
	// Example: Sessions prior to a GroupByKey
	MergeStatus_NEEDS_MERGE MergeStatus_Enum = 2
	// The WindowFn is merging and the PCollection has had merging occur
	// already.
	// Example: Sessions after a GroupByKey
	MergeStatus_ALREADY_MERGED MergeStatus_Enum = 3
)

var MergeStatus_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "NON_MERGING",
	2: "NEEDS_MERGE",
	3: "ALREADY_MERGED",
}
var MergeStatus_Enum_value = map[string]int32{
	"UNSPECIFIED":    0,
	"NON_MERGING":    1,
	"NEEDS_MERGE":    2,
	"ALREADY_MERGED": 3,
}

func (x MergeStatus_Enum) String() string {
	return proto.EnumName(MergeStatus_Enum_name, int32(x))
}
func (MergeStatus_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{26, 0}
}

type AccumulationMode_Enum int32

const (
	AccumulationMode_UNSPECIFIED AccumulationMode_Enum = 0
	// The aggregation is discarded when it is output
	AccumulationMode_DISCARDING AccumulationMode_Enum = 1
	// The aggregation is accumulated across outputs
	AccumulationMode_ACCUMULATING AccumulationMode_Enum = 2
	// The aggregation emits retractions when it is output
	AccumulationMode_RETRACTING AccumulationMode_Enum = 3
)

var AccumulationMode_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "DISCARDING",
	2: "ACCUMULATING",
	3: "RETRACTING",
}
var AccumulationMode_Enum_value = map[string]int32{
	"UNSPECIFIED":  0,
	"DISCARDING":   1,
	"ACCUMULATING": 2,
	"RETRACTING":   3,
}

func (x AccumulationMode_Enum) String() string {
	return proto.EnumName(AccumulationMode_Enum_name, int32(x))
}
func (AccumulationMode_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{27, 0}
}

type ClosingBehavior_Enum int32

const (
	ClosingBehavior_UNSPECIFIED ClosingBehavior_Enum = 0
	// Emit output when a window expires, whether or not there has been
	// any new data since the last output.
	ClosingBehavior_EMIT_ALWAYS ClosingBehavior_Enum = 1
	// Only emit output when new data has arrives since the last output
	ClosingBehavior_EMIT_IF_NONEMPTY ClosingBehavior_Enum = 2
)

var ClosingBehavior_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "EMIT_ALWAYS",
	2: "EMIT_IF_NONEMPTY",
}
var ClosingBehavior_Enum_value = map[string]int32{
	"UNSPECIFIED":      0,
	"EMIT_ALWAYS":      1,
	"EMIT_IF_NONEMPTY": 2,
}

func (x ClosingBehavior_Enum) String() string {
	return proto.EnumName(ClosingBehavior_Enum_name, int32(x))
}
func (ClosingBehavior_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{28, 0}
}

type OnTimeBehavior_Enum int32

const (
	OnTimeBehavior_UNSPECIFIED OnTimeBehavior_Enum = 0
	// Always fire the on-time pane. Even if there is no new data since
	// the previous firing, an element will be produced.
	OnTimeBehavior_FIRE_ALWAYS OnTimeBehavior_Enum = 1
	// Only fire the on-time pane if there is new data since the previous firing.
	OnTimeBehavior_FIRE_IF_NONEMPTY OnTimeBehavior_Enum = 2
)

var OnTimeBehavior_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "FIRE_ALWAYS",
	2: "FIRE_IF_NONEMPTY",
}
var OnTimeBehavior_Enum_value = map[string]int32{
	"UNSPECIFIED":      0,
	"FIRE_ALWAYS":      1,
	"FIRE_IF_NONEMPTY": 2,
}

func (x OnTimeBehavior_Enum) String() string {
	return proto.EnumName(OnTimeBehavior_Enum_name, int32(x))
}
func (OnTimeBehavior_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{29, 0}
}

type OutputTime_Enum int32

const (
	OutputTime_UNSPECIFIED OutputTime_Enum = 0
	// The output has the timestamp of the end of the window.
	OutputTime_END_OF_WINDOW OutputTime_Enum = 1
	// The output has the latest timestamp of the input elements since
	// the last output.
	OutputTime_LATEST_IN_PANE OutputTime_Enum = 2
	// The output has the earliest timestamp of the input elements since
	// the last output.
	OutputTime_EARLIEST_IN_PANE OutputTime_Enum = 3
)

var OutputTime_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "END_OF_WINDOW",
	2: "LATEST_IN_PANE",
	3: "EARLIEST_IN_PANE",
}
var OutputTime_Enum_value = map[string]int32{
	"UNSPECIFIED":      0,
	"END_OF_WINDOW":    1,
	"LATEST_IN_PANE":   2,
	"EARLIEST_IN_PANE": 3,
}

func (x OutputTime_Enum) String() string {
	return proto.EnumName(OutputTime_Enum_name, int32(x))
}
func (OutputTime_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{30, 0}
}

type TimeDomain_Enum int32

const (
	TimeDomain_UNSPECIFIED TimeDomain_Enum = 0
	// Event time is time from the perspective of the data
	TimeDomain_EVENT_TIME TimeDomain_Enum = 1
	// Processing time is time from the perspective of the
	// execution of your pipeline
	TimeDomain_PROCESSING_TIME TimeDomain_Enum = 2
	// Synchronized processing time is the minimum of the
	// processing time of all pending elements.
	//
	// The "processing time" of an element refers to
	// the local processing time at which it was emitted
	TimeDomain_SYNCHRONIZED_PROCESSING_TIME TimeDomain_Enum = 3
)

var TimeDomain_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "EVENT_TIME",
	2: "PROCESSING_TIME",
	3: "SYNCHRONIZED_PROCESSING_TIME",
}
var TimeDomain_Enum_value = map[string]int32{
	"UNSPECIFIED":                  0,
	"EVENT_TIME":                   1,
	"PROCESSING_TIME":              2,
	"SYNCHRONIZED_PROCESSING_TIME": 3,
}

func (x TimeDomain_Enum) String() string {
	return proto.EnumName(TimeDomain_Enum_name, int32(x))
}
func (TimeDomain_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{31, 0}
}

type StandardEnvironments_Environments int32

const (
	StandardEnvironments_DOCKER   StandardEnvironments_Environments = 0
	StandardEnvironments_PROCESS  StandardEnvironments_Environments = 1
	StandardEnvironments_EXTERNAL StandardEnvironments_Environments = 2
)

var StandardEnvironments_Environments_name = map[int32]string{
	0: "DOCKER",
	1: "PROCESS",
	2: "EXTERNAL",
}
var StandardEnvironments_Environments_value = map[string]int32{
	"DOCKER":   0,
	"PROCESS":  1,
	"EXTERNAL": 2,
}

func (x StandardEnvironments_Environments) String() string {
	return proto.EnumName(StandardEnvironments_Environments_name, int32(x))
}
func (StandardEnvironments_Environments) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{36, 0}
}

type DisplayData_Type_Enum int32

const (
	DisplayData_Type_UNSPECIFIED DisplayData_Type_Enum = 0
	DisplayData_Type_STRING      DisplayData_Type_Enum = 1
	DisplayData_Type_INTEGER     DisplayData_Type_Enum = 2
	DisplayData_Type_FLOAT       DisplayData_Type_Enum = 3
	DisplayData_Type_BOOLEAN     DisplayData_Type_Enum = 4
	DisplayData_Type_TIMESTAMP   DisplayData_Type_Enum = 5
	DisplayData_Type_DURATION    DisplayData_Type_Enum = 6
	DisplayData_Type_JAVA_CLASS  DisplayData_Type_Enum = 7
)

var DisplayData_Type_Enum_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "STRING",
	2: "INTEGER",
	3: "FLOAT",
	4: "BOOLEAN",
	5: "TIMESTAMP",
	6: "DURATION",
	7: "JAVA_CLASS",
}
var DisplayData_Type_Enum_value = map[string]int32{
	"UNSPECIFIED": 0,
	"STRING":      1,
	"INTEGER":     2,
	"FLOAT":       3,
	"BOOLEAN":     4,
	"TIMESTAMP":   5,
	"DURATION":    6,
	"JAVA_CLASS":  7,
}

func (x DisplayData_Type_Enum) String() string {
	return proto.EnumName(DisplayData_Type_Enum_name, int32(x))
}
func (DisplayData_Type_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{42, 2, 0}
}

type BeamConstants struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeamConstants) Reset()         { *m = BeamConstants{} }
func (m *BeamConstants) String() string { return proto.CompactTextString(m) }
func (*BeamConstants) ProtoMessage()    {}
func (*BeamConstants) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{0}
}
func (m *BeamConstants) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeamConstants.Unmarshal(m, b)
}
func (m *BeamConstants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeamConstants.Marshal(b, m, deterministic)
}
func (dst *BeamConstants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeamConstants.Merge(dst, src)
}
func (m *BeamConstants) XXX_Size() int {
	return xxx_messageInfo_BeamConstants.Size(m)
}
func (m *BeamConstants) XXX_DiscardUnknown() {
	xxx_messageInfo_BeamConstants.DiscardUnknown(m)
}

var xxx_messageInfo_BeamConstants proto.InternalMessageInfo

// A set of mappings from id to message. This is included as an optional field
// on any proto message that may contain references needing resolution.
type Components struct {
	// (Required) A map from pipeline-scoped id to PTransform.
	Transforms map[string]*PTransform `protobuf:"bytes,1,rep,name=transforms,proto3" json:"transforms,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Required) A map from pipeline-scoped id to PCollection.
	Pcollections map[string]*PCollection `protobuf:"bytes,2,rep,name=pcollections,proto3" json:"pcollections,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Required) A map from pipeline-scoped id to WindowingStrategy.
	WindowingStrategies map[string]*WindowingStrategy `protobuf:"bytes,3,rep,name=windowing_strategies,json=windowingStrategies,proto3" json:"windowing_strategies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Required) A map from pipeline-scoped id to Coder.
	Coders map[string]*Coder `protobuf:"bytes,4,rep,name=coders,proto3" json:"coders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Required) A map from pipeline-scoped id to Environment.
	Environments         map[string]*Environment `protobuf:"bytes,5,rep,name=environments,proto3" json:"environments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Components) Reset()         { *m = Components{} }
func (m *Components) String() string { return proto.CompactTextString(m) }
func (*Components) ProtoMessage()    {}
func (*Components) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{1}
}
func (m *Components) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Components.Unmarshal(m, b)
}
func (m *Components) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Components.Marshal(b, m, deterministic)
}
func (dst *Components) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Components.Merge(dst, src)
}
func (m *Components) XXX_Size() int {
	return xxx_messageInfo_Components.Size(m)
}
func (m *Components) XXX_DiscardUnknown() {
	xxx_messageInfo_Components.DiscardUnknown(m)
}

var xxx_messageInfo_Components proto.InternalMessageInfo

func (m *Components) GetTransforms() map[string]*PTransform {
	if m != nil {
		return m.Transforms
	}
	return nil
}

func (m *Components) GetPcollections() map[string]*PCollection {
	if m != nil {
		return m.Pcollections
	}
	return nil
}

func (m *Components) GetWindowingStrategies() map[string]*WindowingStrategy {
	if m != nil {
		return m.WindowingStrategies
	}
	return nil
}

func (m *Components) GetCoders() map[string]*Coder {
	if m != nil {
		return m.Coders
	}
	return nil
}

func (m *Components) GetEnvironments() map[string]*Environment {
	if m != nil {
		return m.Environments
	}
	return nil
}

// A Pipeline is a hierarchical graph of PTransforms, linked
// by PCollections.
//
// This is represented by a number of by-reference maps to nodes,
// PCollections, SDK environments, UDF, etc., for
// supporting compact reuse and arbitrary graph structure.
//
// All of the keys in the maps here are arbitrary strings that are only
// required to be internally consistent within this proto message.
type Pipeline struct {
	// (Required) The coders, UDFs, graph nodes, etc, that make up
	// this pipeline.
	Components *Components `protobuf:"bytes,1,opt,name=components,proto3" json:"components,omitempty"`
	// (Required) The ids of all PTransforms that are not contained within another PTransform.
	// These must be in shallow topological order, so that traversing them recursively
	// in this order yields a recursively topological traversal.
	RootTransformIds []string `protobuf:"bytes,2,rep,name=root_transform_ids,json=rootTransformIds,proto3" json:"root_transform_ids,omitempty"`
	// (Optional) Static display data for the pipeline. If there is none,
	// it may be omitted.
	DisplayData          *DisplayData `protobuf:"bytes,3,opt,name=display_data,json=displayData,proto3" json:"display_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{2}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (dst *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(dst, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetComponents() *Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *Pipeline) GetRootTransformIds() []string {
	if m != nil {
		return m.RootTransformIds
	}
	return nil
}

func (m *Pipeline) GetDisplayData() *DisplayData {
	if m != nil {
		return m.DisplayData
	}
	return nil
}

// An applied PTransform! This does not contain the graph data, but only the
// fields specific to a graph node that is a Runner API transform
// between PCollections.
type PTransform struct {
	// (Required) A unique name for the application node.
	//
	// Ideally, this should be stable over multiple evolutions of a pipeline
	// for the purposes of logging and associating pipeline state with a node,
	// etc.
	//
	// If it is not stable, then the runner decides what will happen. But, most
	// importantly, it must always be here and be unique, even if it is
	// autogenerated.
	UniqueName string `protobuf:"bytes,5,opt,name=unique_name,json=uniqueName,proto3" json:"unique_name,omitempty"`
	// (Optional) A URN and payload that, together, fully defined the semantics
	// of this transform.
	//
	// If absent, this must be an "anonymous" composite transform.
	//
	// For primitive transform in the Runner API, this is required, and the
	// payloads are well-defined messages. When the URN indicates ParDo it
	// is a ParDoPayload, and so on.
	//
	// TODO: document the standardized URNs and payloads
	// TODO: separate standardized payloads into a separate proto file
	//
	// For some special composite transforms, the payload is also officially
	// defined:
	//
	//  - when the URN is "beam:transforms:combine" it is a CombinePayload
	//
	Spec *FunctionSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// (Optional) if this node is a composite, a list of the ids of
	// transforms that it contains.
	Subtransforms []string `protobuf:"bytes,2,rep,name=subtransforms,proto3" json:"subtransforms,omitempty"`
	// (Required) A map from local names of inputs (unique only with this map, and
	// likely embedded in the transform payload and serialized user code) to
	// PCollection ids.
	//
	// The payload for this transform may clarify the relationship of these
	// inputs. For example:
	//
	//  - for a Flatten transform they are merged
	//  - for a ParDo transform, some may be side inputs
	//
	// All inputs are recorded here so that the topological ordering of
	// the graph is consistent whether or not the payload is understood.
	//
	Inputs map[string]string `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Required) A map from local names of outputs (unique only within this map,
	// and likely embedded in the transform payload and serialized user code)
	// to PCollection ids.
	//
	// The URN or payload for this transform node may clarify the type and
	// relationship of these outputs. For example:
	//
	//  - for a ParDo transform, these are tags on PCollections, which will be
	//    embedded in the DoFn.
	//
	Outputs map[string]string `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Optional) Static display data for this PTransform application. If
	// there is none, or it is not relevant (such as use by the Fn API)
	// then it may be omitted.
	DisplayData          *DisplayData `protobuf:"bytes,6,opt,name=display_data,json=displayData,proto3" json:"display_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PTransform) Reset()         { *m = PTransform{} }
func (m *PTransform) String() string { return proto.CompactTextString(m) }
func (*PTransform) ProtoMessage()    {}
func (*PTransform) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{3}
}
func (m *PTransform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PTransform.Unmarshal(m, b)
}
func (m *PTransform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PTransform.Marshal(b, m, deterministic)
}
func (dst *PTransform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PTransform.Merge(dst, src)
}
func (m *PTransform) XXX_Size() int {
	return xxx_messageInfo_PTransform.Size(m)
}
func (m *PTransform) XXX_DiscardUnknown() {
	xxx_messageInfo_PTransform.DiscardUnknown(m)
}

var xxx_messageInfo_PTransform proto.InternalMessageInfo

func (m *PTransform) GetUniqueName() string {
	if m != nil {
		return m.UniqueName
	}
	return ""
}

func (m *PTransform) GetSpec() *FunctionSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *PTransform) GetSubtransforms() []string {
	if m != nil {
		return m.Subtransforms
	}
	return nil
}

func (m *PTransform) GetInputs() map[string]string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *PTransform) GetOutputs() map[string]string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *PTransform) GetDisplayData() *DisplayData {
	if m != nil {
		return m.DisplayData
	}
	return nil
}

type StandardPTransforms struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardPTransforms) Reset()         { *m = StandardPTransforms{} }
func (m *StandardPTransforms) String() string { return proto.CompactTextString(m) }
func (*StandardPTransforms) ProtoMessage()    {}
func (*StandardPTransforms) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{4}
}
func (m *StandardPTransforms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardPTransforms.Unmarshal(m, b)
}
func (m *StandardPTransforms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardPTransforms.Marshal(b, m, deterministic)
}
func (dst *StandardPTransforms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardPTransforms.Merge(dst, src)
}
func (m *StandardPTransforms) XXX_Size() int {
	return xxx_messageInfo_StandardPTransforms.Size(m)
}
func (m *StandardPTransforms) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardPTransforms.DiscardUnknown(m)
}

var xxx_messageInfo_StandardPTransforms proto.InternalMessageInfo

type StandardSideInputTypes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardSideInputTypes) Reset()         { *m = StandardSideInputTypes{} }
func (m *StandardSideInputTypes) String() string { return proto.CompactTextString(m) }
func (*StandardSideInputTypes) ProtoMessage()    {}
func (*StandardSideInputTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{5}
}
func (m *StandardSideInputTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardSideInputTypes.Unmarshal(m, b)
}
func (m *StandardSideInputTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardSideInputTypes.Marshal(b, m, deterministic)
}
func (dst *StandardSideInputTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardSideInputTypes.Merge(dst, src)
}
func (m *StandardSideInputTypes) XXX_Size() int {
	return xxx_messageInfo_StandardSideInputTypes.Size(m)
}
func (m *StandardSideInputTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardSideInputTypes.DiscardUnknown(m)
}

var xxx_messageInfo_StandardSideInputTypes proto.InternalMessageInfo

// A PCollection!
type PCollection struct {
	// (Required) A unique name for the PCollection.
	//
	// Ideally, this should be stable over multiple evolutions of a pipeline
	// for the purposes of logging and associating pipeline state with a node,
	// etc.
	//
	// If it is not stable, then the runner decides what will happen. But, most
	// importantly, it must always be here, even if it is autogenerated.
	UniqueName string `protobuf:"bytes,1,opt,name=unique_name,json=uniqueName,proto3" json:"unique_name,omitempty"`
	// (Required) The id of the Coder for this PCollection.
	CoderId string `protobuf:"bytes,2,opt,name=coder_id,json=coderId,proto3" json:"coder_id,omitempty"`
	// (Required) Whether this PCollection is bounded or unbounded
	IsBounded IsBounded_Enum `protobuf:"varint,3,opt,name=is_bounded,json=isBounded,proto3,enum=org.apache.beam.model.pipeline.v1.IsBounded_Enum" json:"is_bounded,omitempty"`
	// (Required) The id of the windowing strategy for this PCollection.
	WindowingStrategyId string `protobuf:"bytes,4,opt,name=windowing_strategy_id,json=windowingStrategyId,proto3" json:"windowing_strategy_id,omitempty"`
	// (Optional) Static display data for this PTransform application. If
	// there is none, or it is not relevant (such as use by the Fn API)
	// then it may be omitted.
	DisplayData          *DisplayData `protobuf:"bytes,5,opt,name=display_data,json=displayData,proto3" json:"display_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PCollection) Reset()         { *m = PCollection{} }
func (m *PCollection) String() string { return proto.CompactTextString(m) }
func (*PCollection) ProtoMessage()    {}
func (*PCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{6}
}
func (m *PCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PCollection.Unmarshal(m, b)
}
func (m *PCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PCollection.Marshal(b, m, deterministic)
}
func (dst *PCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PCollection.Merge(dst, src)
}
func (m *PCollection) XXX_Size() int {
	return xxx_messageInfo_PCollection.Size(m)
}
func (m *PCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_PCollection.DiscardUnknown(m)
}

var xxx_messageInfo_PCollection proto.InternalMessageInfo

func (m *PCollection) GetUniqueName() string {
	if m != nil {
		return m.UniqueName
	}
	return ""
}

func (m *PCollection) GetCoderId() string {
	if m != nil {
		return m.CoderId
	}
	return ""
}

func (m *PCollection) GetIsBounded() IsBounded_Enum {
	if m != nil {
		return m.IsBounded
	}
	return IsBounded_UNSPECIFIED
}

func (m *PCollection) GetWindowingStrategyId() string {
	if m != nil {
		return m.WindowingStrategyId
	}
	return ""
}

func (m *PCollection) GetDisplayData() *DisplayData {
	if m != nil {
		return m.DisplayData
	}
	return nil
}

// The payload for the primitive ParDo transform.
type ParDoPayload struct {
	// (Required) The SdkFunctionSpec of the DoFn.
	DoFn *SdkFunctionSpec `protobuf:"bytes,1,opt,name=do_fn,json=doFn,proto3" json:"do_fn,omitempty"`
	// (Required) Additional pieces of context the DoFn may require that
	// are not otherwise represented in the payload.
	// (may force runners to execute the ParDo differently)
	Parameters []*Parameter `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// (Optional) A mapping of local input names to side inputs, describing
	// the expected access pattern.
	SideInputs map[string]*SideInput `protobuf:"bytes,3,rep,name=side_inputs,json=sideInputs,proto3" json:"side_inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Optional) A mapping of local state names to state specifications.
	StateSpecs map[string]*StateSpec `protobuf:"bytes,4,rep,name=state_specs,json=stateSpecs,proto3" json:"state_specs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// (Optional) A mapping of local timer names to timer specifications.
	TimerSpecs map[string]*TimerSpec `protobuf:"bytes,5,rep,name=timer_specs,json=timerSpecs,proto3" json:"timer_specs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Whether the DoFn is splittable
	Splittable bool `protobuf:"varint,6,opt,name=splittable,proto3" json:"splittable,omitempty"`
	// (Required if splittable == true) Id of the restriction coder.
	RestrictionCoderId string `protobuf:"bytes,7,opt,name=restriction_coder_id,json=restrictionCoderId,proto3" json:"restriction_coder_id,omitempty"`
	// (Optional) Only set when this ParDo can request bundle finalization.
	RequestsFinalization bool     `protobuf:"varint,8,opt,name=requests_finalization,json=requestsFinalization,proto3" json:"requests_finalization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParDoPayload) Reset()         { *m = ParDoPayload{} }
func (m *ParDoPayload) String() string { return proto.CompactTextString(m) }
func (*ParDoPayload) ProtoMessage()    {}
func (*ParDoPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{7}
}
func (m *ParDoPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParDoPayload.Unmarshal(m, b)
}
func (m *ParDoPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParDoPayload.Marshal(b, m, deterministic)
}
func (dst *ParDoPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParDoPayload.Merge(dst, src)
}
func (m *ParDoPayload) XXX_Size() int {
	return xxx_messageInfo_ParDoPayload.Size(m)
}
func (m *ParDoPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ParDoPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ParDoPayload proto.InternalMessageInfo

func (m *ParDoPayload) GetDoFn() *SdkFunctionSpec {
	if m != nil {
		return m.DoFn
	}
	return nil
}

func (m *ParDoPayload) GetParameters() []*Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *ParDoPayload) GetSideInputs() map[string]*SideInput {
	if m != nil {
		return m.SideInputs
	}
	return nil
}

func (m *ParDoPayload) GetStateSpecs() map[string]*StateSpec {
	if m != nil {
		return m.StateSpecs
	}
	return nil
}

func (m *ParDoPayload) GetTimerSpecs() map[string]*TimerSpec {
	if m != nil {
		return m.TimerSpecs
	}
	return nil
}

func (m *ParDoPayload) GetSplittable() bool {
	if m != nil {
		return m.Splittable
	}
	return false
}

func (m *ParDoPayload) GetRestrictionCoderId() string {
	if m != nil {
		return m.RestrictionCoderId
	}
	return ""
}

func (m *ParDoPayload) GetRequestsFinalization() bool {
	if m != nil {
		return m.RequestsFinalization
	}
	return false
}

// Parameters that a UDF might require.
//
// The details of how a runner sends these parameters to the SDK harness
// are the subject of the Fn API.
//
// The details of how an SDK harness delivers them to the UDF is entirely
// up to the SDK. (for some SDKs there may be parameters that are not
// represented here if the runner doesn't need to do anything)
//
// Here, the parameters are simply indicators to the runner that they
// need to run the function a particular way.
//
// TODO: the evolution of the Fn API will influence what needs explicit
// representation here
type Parameter struct {
	Type                 Parameter_Type_Enum `protobuf:"varint,1,opt,name=type,proto3,enum=org.apache.beam.model.pipeline.v1.Parameter_Type_Enum" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{8}
}
func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (dst *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(dst, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetType() Parameter_Type_Enum {
	if m != nil {
		return m.Type
	}
	return Parameter_Type_UNSPECIFIED
}

type Parameter_Type struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter_Type) Reset()         { *m = Parameter_Type{} }
func (m *Parameter_Type) String() string { return proto.CompactTextString(m) }
func (*Parameter_Type) ProtoMessage()    {}
func (*Parameter_Type) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{8, 0}
}
func (m *Parameter_Type) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter_Type.Unmarshal(m, b)
}
func (m *Parameter_Type) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter_Type.Marshal(b, m, deterministic)
}
func (dst *Parameter_Type) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter_Type.Merge(dst, src)
}
func (m *Parameter_Type) XXX_Size() int {
	return xxx_messageInfo_Parameter_Type.Size(m)
}
func (m *Parameter_Type) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter_Type.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter_Type proto.InternalMessageInfo

type StateSpec struct {
	// Types that are valid to be assigned to Spec:
	//	*StateSpec_ValueSpec
	//	*StateSpec_BagSpec
	//	*StateSpec_CombiningSpec
	//	*StateSpec_MapSpec
	//	*StateSpec_SetSpec
	Spec                 isStateSpec_Spec `protobuf_oneof:"spec"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StateSpec) Reset()         { *m = StateSpec{} }
func (m *StateSpec) String() string { return proto.CompactTextString(m) }
func (*StateSpec) ProtoMessage()    {}
func (*StateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{9}
}
func (m *StateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateSpec.Unmarshal(m, b)
}
func (m *StateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateSpec.Marshal(b, m, deterministic)
}
func (dst *StateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateSpec.Merge(dst, src)
}
func (m *StateSpec) XXX_Size() int {
	return xxx_messageInfo_StateSpec.Size(m)
}
func (m *StateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_StateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_StateSpec proto.InternalMessageInfo

type isStateSpec_Spec interface {
	isStateSpec_Spec()
}

type StateSpec_ValueSpec struct {
	ValueSpec *ValueStateSpec `protobuf:"bytes,1,opt,name=value_spec,json=valueSpec,proto3,oneof"`
}
type StateSpec_BagSpec struct {
	BagSpec *BagStateSpec `protobuf:"bytes,2,opt,name=bag_spec,json=bagSpec,proto3,oneof"`
}
type StateSpec_CombiningSpec struct {
	CombiningSpec *CombiningStateSpec `protobuf:"bytes,3,opt,name=combining_spec,json=combiningSpec,proto3,oneof"`
}
type StateSpec_MapSpec struct {
	MapSpec *MapStateSpec `protobuf:"bytes,4,opt,name=map_spec,json=mapSpec,proto3,oneof"`
}
type StateSpec_SetSpec struct {
	SetSpec *SetStateSpec `protobuf:"bytes,5,opt,name=set_spec,json=setSpec,proto3,oneof"`
}

func (*StateSpec_ValueSpec) isStateSpec_Spec()     {}
func (*StateSpec_BagSpec) isStateSpec_Spec()       {}
func (*StateSpec_CombiningSpec) isStateSpec_Spec() {}
func (*StateSpec_MapSpec) isStateSpec_Spec()       {}
func (*StateSpec_SetSpec) isStateSpec_Spec()       {}

func (m *StateSpec) GetSpec() isStateSpec_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *StateSpec) GetValueSpec() *ValueStateSpec {
	if x, ok := m.GetSpec().(*StateSpec_ValueSpec); ok {
		return x.ValueSpec
	}
	return nil
}

func (m *StateSpec) GetBagSpec() *BagStateSpec {
	if x, ok := m.GetSpec().(*StateSpec_BagSpec); ok {
		return x.BagSpec
	}
	return nil
}

func (m *StateSpec) GetCombiningSpec() *CombiningStateSpec {
	if x, ok := m.GetSpec().(*StateSpec_CombiningSpec); ok {
		return x.CombiningSpec
	}
	return nil
}

func (m *StateSpec) GetMapSpec() *MapStateSpec {
	if x, ok := m.GetSpec().(*StateSpec_MapSpec); ok {
		return x.MapSpec
	}
	return nil
}

func (m *StateSpec) GetSetSpec() *SetStateSpec {
	if x, ok := m.GetSpec().(*StateSpec_SetSpec); ok {
		return x.SetSpec
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StateSpec) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _StateSpec_OneofMarshaler, _StateSpec_OneofUnmarshaler, _StateSpec_OneofSizer, []interface{}{
		(*StateSpec_ValueSpec)(nil),
		(*StateSpec_BagSpec)(nil),
		(*StateSpec_CombiningSpec)(nil),
		(*StateSpec_MapSpec)(nil),
		(*StateSpec_SetSpec)(nil),
	}
}

func _StateSpec_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*StateSpec)
	// spec
	switch x := m.Spec.(type) {
	case *StateSpec_ValueSpec:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ValueSpec); err != nil {
			return err
		}
	case *StateSpec_BagSpec:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BagSpec); err != nil {
			return err
		}
	case *StateSpec_CombiningSpec:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CombiningSpec); err != nil {
			return err
		}
	case *StateSpec_MapSpec:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MapSpec); err != nil {
			return err
		}
	case *StateSpec_SetSpec:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StateSpec.Spec has unexpected type %T", x)
	}
	return nil
}

func _StateSpec_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*StateSpec)
	switch tag {
	case 1: // spec.value_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValueStateSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &StateSpec_ValueSpec{msg}
		return true, err
	case 2: // spec.bag_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BagStateSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &StateSpec_BagSpec{msg}
		return true, err
	case 3: // spec.combining_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CombiningStateSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &StateSpec_CombiningSpec{msg}
		return true, err
	case 4: // spec.map_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MapStateSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &StateSpec_MapSpec{msg}
		return true, err
	case 5: // spec.set_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetStateSpec)
		err := b.DecodeMessage(msg)
		m.Spec = &StateSpec_SetSpec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StateSpec_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*StateSpec)
	// spec
	switch x := m.Spec.(type) {
	case *StateSpec_ValueSpec:
		s := proto.Size(x.ValueSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StateSpec_BagSpec:
		s := proto.Size(x.BagSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StateSpec_CombiningSpec:
		s := proto.Size(x.CombiningSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StateSpec_MapSpec:
		s := proto.Size(x.MapSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *StateSpec_SetSpec:
		s := proto.Size(x.SetSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ValueStateSpec struct {
	CoderId              string   `protobuf:"bytes,1,opt,name=coder_id,json=coderId,proto3" json:"coder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueStateSpec) Reset()         { *m = ValueStateSpec{} }
func (m *ValueStateSpec) String() string { return proto.CompactTextString(m) }
func (*ValueStateSpec) ProtoMessage()    {}
func (*ValueStateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{10}
}
func (m *ValueStateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueStateSpec.Unmarshal(m, b)
}
func (m *ValueStateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueStateSpec.Marshal(b, m, deterministic)
}
func (dst *ValueStateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueStateSpec.Merge(dst, src)
}
func (m *ValueStateSpec) XXX_Size() int {
	return xxx_messageInfo_ValueStateSpec.Size(m)
}
func (m *ValueStateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueStateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ValueStateSpec proto.InternalMessageInfo

func (m *ValueStateSpec) GetCoderId() string {
	if m != nil {
		return m.CoderId
	}
	return ""
}

type BagStateSpec struct {
	ElementCoderId       string   `protobuf:"bytes,1,opt,name=element_coder_id,json=elementCoderId,proto3" json:"element_coder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BagStateSpec) Reset()         { *m = BagStateSpec{} }
func (m *BagStateSpec) String() string { return proto.CompactTextString(m) }
func (*BagStateSpec) ProtoMessage()    {}
func (*BagStateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{11}
}
func (m *BagStateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BagStateSpec.Unmarshal(m, b)
}
func (m *BagStateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BagStateSpec.Marshal(b, m, deterministic)
}
func (dst *BagStateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BagStateSpec.Merge(dst, src)
}
func (m *BagStateSpec) XXX_Size() int {
	return xxx_messageInfo_BagStateSpec.Size(m)
}
func (m *BagStateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_BagStateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_BagStateSpec proto.InternalMessageInfo

func (m *BagStateSpec) GetElementCoderId() string {
	if m != nil {
		return m.ElementCoderId
	}
	return ""
}

type CombiningStateSpec struct {
	AccumulatorCoderId   string           `protobuf:"bytes,1,opt,name=accumulator_coder_id,json=accumulatorCoderId,proto3" json:"accumulator_coder_id,omitempty"`
	CombineFn            *SdkFunctionSpec `protobuf:"bytes,2,opt,name=combine_fn,json=combineFn,proto3" json:"combine_fn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CombiningStateSpec) Reset()         { *m = CombiningStateSpec{} }
func (m *CombiningStateSpec) String() string { return proto.CompactTextString(m) }
func (*CombiningStateSpec) ProtoMessage()    {}
func (*CombiningStateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{12}
}
func (m *CombiningStateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CombiningStateSpec.Unmarshal(m, b)
}
func (m *CombiningStateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CombiningStateSpec.Marshal(b, m, deterministic)
}
func (dst *CombiningStateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CombiningStateSpec.Merge(dst, src)
}
func (m *CombiningStateSpec) XXX_Size() int {
	return xxx_messageInfo_CombiningStateSpec.Size(m)
}
func (m *CombiningStateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CombiningStateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CombiningStateSpec proto.InternalMessageInfo

func (m *CombiningStateSpec) GetAccumulatorCoderId() string {
	if m != nil {
		return m.AccumulatorCoderId
	}
	return ""
}

func (m *CombiningStateSpec) GetCombineFn() *SdkFunctionSpec {
	if m != nil {
		return m.CombineFn
	}
	return nil
}

type MapStateSpec struct {
	KeyCoderId           string   `protobuf:"bytes,1,opt,name=key_coder_id,json=keyCoderId,proto3" json:"key_coder_id,omitempty"`
	ValueCoderId         string   `protobuf:"bytes,2,opt,name=value_coder_id,json=valueCoderId,proto3" json:"value_coder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MapStateSpec) Reset()         { *m = MapStateSpec{} }
func (m *MapStateSpec) String() string { return proto.CompactTextString(m) }
func (*MapStateSpec) ProtoMessage()    {}
func (*MapStateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{13}
}
func (m *MapStateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MapStateSpec.Unmarshal(m, b)
}
func (m *MapStateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MapStateSpec.Marshal(b, m, deterministic)
}
func (dst *MapStateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MapStateSpec.Merge(dst, src)
}
func (m *MapStateSpec) XXX_Size() int {
	return xxx_messageInfo_MapStateSpec.Size(m)
}
func (m *MapStateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MapStateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MapStateSpec proto.InternalMessageInfo

func (m *MapStateSpec) GetKeyCoderId() string {
	if m != nil {
		return m.KeyCoderId
	}
	return ""
}

func (m *MapStateSpec) GetValueCoderId() string {
	if m != nil {
		return m.ValueCoderId
	}
	return ""
}

type SetStateSpec struct {
	ElementCoderId       string   `protobuf:"bytes,1,opt,name=element_coder_id,json=elementCoderId,proto3" json:"element_coder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetStateSpec) Reset()         { *m = SetStateSpec{} }
func (m *SetStateSpec) String() string { return proto.CompactTextString(m) }
func (*SetStateSpec) ProtoMessage()    {}
func (*SetStateSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{14}
}
func (m *SetStateSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetStateSpec.Unmarshal(m, b)
}
func (m *SetStateSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetStateSpec.Marshal(b, m, deterministic)
}
func (dst *SetStateSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetStateSpec.Merge(dst, src)
}
func (m *SetStateSpec) XXX_Size() int {
	return xxx_messageInfo_SetStateSpec.Size(m)
}
func (m *SetStateSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SetStateSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SetStateSpec proto.InternalMessageInfo

func (m *SetStateSpec) GetElementCoderId() string {
	if m != nil {
		return m.ElementCoderId
	}
	return ""
}

type TimerSpec struct {
	TimeDomain           TimeDomain_Enum `protobuf:"varint,1,opt,name=time_domain,json=timeDomain,proto3,enum=org.apache.beam.model.pipeline.v1.TimeDomain_Enum" json:"time_domain,omitempty"`
	TimerCoderId         string          `protobuf:"bytes,2,opt,name=timer_coder_id,json=timerCoderId,proto3" json:"timer_coder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TimerSpec) Reset()         { *m = TimerSpec{} }
func (m *TimerSpec) String() string { return proto.CompactTextString(m) }
func (*TimerSpec) ProtoMessage()    {}
func (*TimerSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{15}
}
func (m *TimerSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimerSpec.Unmarshal(m, b)
}
func (m *TimerSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimerSpec.Marshal(b, m, deterministic)
}
func (dst *TimerSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimerSpec.Merge(dst, src)
}
func (m *TimerSpec) XXX_Size() int {
	return xxx_messageInfo_TimerSpec.Size(m)
}
func (m *TimerSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TimerSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TimerSpec proto.InternalMessageInfo

func (m *TimerSpec) GetTimeDomain() TimeDomain_Enum {
	if m != nil {
		return m.TimeDomain
	}
	return TimeDomain_UNSPECIFIED
}

func (m *TimerSpec) GetTimerCoderId() string {
	if m != nil {
		return m.TimerCoderId
	}
	return ""
}

type IsBounded struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsBounded) Reset()         { *m = IsBounded{} }
func (m *IsBounded) String() string { return proto.CompactTextString(m) }
func (*IsBounded) ProtoMessage()    {}
func (*IsBounded) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{16}
}
func (m *IsBounded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsBounded.Unmarshal(m, b)
}
func (m *IsBounded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsBounded.Marshal(b, m, deterministic)
}
func (dst *IsBounded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsBounded.Merge(dst, src)
}
func (m *IsBounded) XXX_Size() int {
	return xxx_messageInfo_IsBounded.Size(m)
}
func (m *IsBounded) XXX_DiscardUnknown() {
	xxx_messageInfo_IsBounded.DiscardUnknown(m)
}

var xxx_messageInfo_IsBounded proto.InternalMessageInfo

// The payload for the primitive Read transform.
type ReadPayload struct {
	// (Required) The SdkFunctionSpec of the source for this Read.
	Source *SdkFunctionSpec `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// (Required) Whether the source is bounded or unbounded
	IsBounded            IsBounded_Enum `protobuf:"varint,2,opt,name=is_bounded,json=isBounded,proto3,enum=org.apache.beam.model.pipeline.v1.IsBounded_Enum" json:"is_bounded,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReadPayload) Reset()         { *m = ReadPayload{} }
func (m *ReadPayload) String() string { return proto.CompactTextString(m) }
func (*ReadPayload) ProtoMessage()    {}
func (*ReadPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{17}
}
func (m *ReadPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPayload.Unmarshal(m, b)
}
func (m *ReadPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPayload.Marshal(b, m, deterministic)
}
func (dst *ReadPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPayload.Merge(dst, src)
}
func (m *ReadPayload) XXX_Size() int {
	return xxx_messageInfo_ReadPayload.Size(m)
}
func (m *ReadPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPayload proto.InternalMessageInfo

func (m *ReadPayload) GetSource() *SdkFunctionSpec {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ReadPayload) GetIsBounded() IsBounded_Enum {
	if m != nil {
		return m.IsBounded
	}
	return IsBounded_UNSPECIFIED
}

// The payload for the WindowInto transform.
type WindowIntoPayload struct {
	// (Required) The SdkFunctionSpec of the WindowFn.
	WindowFn             *SdkFunctionSpec `protobuf:"bytes,1,opt,name=window_fn,json=windowFn,proto3" json:"window_fn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WindowIntoPayload) Reset()         { *m = WindowIntoPayload{} }
func (m *WindowIntoPayload) String() string { return proto.CompactTextString(m) }
func (*WindowIntoPayload) ProtoMessage()    {}
func (*WindowIntoPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{18}
}
func (m *WindowIntoPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowIntoPayload.Unmarshal(m, b)
}
func (m *WindowIntoPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowIntoPayload.Marshal(b, m, deterministic)
}
func (dst *WindowIntoPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowIntoPayload.Merge(dst, src)
}
func (m *WindowIntoPayload) XXX_Size() int {
	return xxx_messageInfo_WindowIntoPayload.Size(m)
}
func (m *WindowIntoPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowIntoPayload.DiscardUnknown(m)
}

var xxx_messageInfo_WindowIntoPayload proto.InternalMessageInfo

func (m *WindowIntoPayload) GetWindowFn() *SdkFunctionSpec {
	if m != nil {
		return m.WindowFn
	}
	return nil
}

// The payload for the special-but-not-primitive Combine transform.
type CombinePayload struct {
	// (Required) The SdkFunctionSpec of the CombineFn.
	CombineFn *SdkFunctionSpec `protobuf:"bytes,1,opt,name=combine_fn,json=combineFn,proto3" json:"combine_fn,omitempty"`
	// (Required) A reference to the Coder to use for accumulators of the CombineFn
	AccumulatorCoderId   string   `protobuf:"bytes,2,opt,name=accumulator_coder_id,json=accumulatorCoderId,proto3" json:"accumulator_coder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CombinePayload) Reset()         { *m = CombinePayload{} }
func (m *CombinePayload) String() string { return proto.CompactTextString(m) }
func (*CombinePayload) ProtoMessage()    {}
func (*CombinePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{19}
}
func (m *CombinePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CombinePayload.Unmarshal(m, b)
}
func (m *CombinePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CombinePayload.Marshal(b, m, deterministic)
}
func (dst *CombinePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CombinePayload.Merge(dst, src)
}
func (m *CombinePayload) XXX_Size() int {
	return xxx_messageInfo_CombinePayload.Size(m)
}
func (m *CombinePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_CombinePayload.DiscardUnknown(m)
}

var xxx_messageInfo_CombinePayload proto.InternalMessageInfo

func (m *CombinePayload) GetCombineFn() *SdkFunctionSpec {
	if m != nil {
		return m.CombineFn
	}
	return nil
}

func (m *CombinePayload) GetAccumulatorCoderId() string {
	if m != nil {
		return m.AccumulatorCoderId
	}
	return ""
}

// The payload for the test-only primitive TestStream
type TestStreamPayload struct {
	// (Required) the coder for elements in the TestStream events
	CoderId              string                     `protobuf:"bytes,1,opt,name=coder_id,json=coderId,proto3" json:"coder_id,omitempty"`
	Events               []*TestStreamPayload_Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TestStreamPayload) Reset()         { *m = TestStreamPayload{} }
func (m *TestStreamPayload) String() string { return proto.CompactTextString(m) }
func (*TestStreamPayload) ProtoMessage()    {}
func (*TestStreamPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{20}
}
func (m *TestStreamPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestStreamPayload.Unmarshal(m, b)
}
func (m *TestStreamPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestStreamPayload.Marshal(b, m, deterministic)
}
func (dst *TestStreamPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestStreamPayload.Merge(dst, src)
}
func (m *TestStreamPayload) XXX_Size() int {
	return xxx_messageInfo_TestStreamPayload.Size(m)
}
func (m *TestStreamPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_TestStreamPayload.DiscardUnknown(m)
}

var xxx_messageInfo_TestStreamPayload proto.InternalMessageInfo

func (m *TestStreamPayload) GetCoderId() string {
	if m != nil {
		return m.CoderId
	}
	return ""
}

func (m *TestStreamPayload) GetEvents() []*TestStreamPayload_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type TestStreamPayload_Event struct {
	// Types that are valid to be assigned to Event:
	//	*TestStreamPayload_Event_WatermarkEvent
	//	*TestStreamPayload_Event_ProcessingTimeEvent
	//	*TestStreamPayload_Event_ElementEvent
	Event                isTestStreamPayload_Event_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TestStreamPayload_Event) Reset()         { *m = TestStreamPayload_Event{} }
func (m *TestStreamPayload_Event) String() string { return proto.CompactTextString(m) }
func (*TestStreamPayload_Event) ProtoMessage()    {}
func (*TestStreamPayload_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{20, 0}
}
func (m *TestStreamPayload_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestStreamPayload_Event.Unmarshal(m, b)
}
func (m *TestStreamPayload_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestStreamPayload_Event.Marshal(b, m, deterministic)
}
func (dst *TestStreamPayload_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestStreamPayload_Event.Merge(dst, src)
}
func (m *TestStreamPayload_Event) XXX_Size() int {
	return xxx_messageInfo_TestStreamPayload_Event.Size(m)
}
func (m *TestStreamPayload_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_TestStreamPayload_Event.DiscardUnknown(m)
}

var xxx_messageInfo_TestStreamPayload_Event proto.InternalMessageInfo

type isTestStreamPayload_Event_Event interface {
	isTestStreamPayload_Event_Event()
}

type TestStreamPayload_Event_WatermarkEvent struct {
	WatermarkEvent *TestStreamPayload_Event_AdvanceWatermark `protobuf:"bytes,1,opt,name=watermark_event,json=watermarkEvent,proto3,oneof"`
}
type TestStreamPayload_Event_ProcessingTimeEvent struct {
	ProcessingTimeEvent *TestStreamPayload_Event_AdvanceProcessingTime `protobuf:"bytes,2,opt,name=processing_time_event,json=processingTimeEvent,proto3,oneof"`
}
type TestStreamPayload_Event_ElementEvent struct {
	ElementEvent *TestStreamPayload_Event_AddElements `protobuf:"bytes,3,opt,name=element_event,json=elementEvent,proto3,oneof"`
}

func (*TestStreamPayload_Event_WatermarkEvent) isTestStreamPayload_Event_Event()      {}
func (*TestStreamPayload_Event_ProcessingTimeEvent) isTestStreamPayload_Event_Event() {}
func (*TestStreamPayload_Event_ElementEvent) isTestStreamPayload_Event_Event()        {}

func (m *TestStreamPayload_Event) GetEvent() isTestStreamPayload_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *TestStreamPayload_Event) GetWatermarkEvent() *TestStreamPayload_Event_AdvanceWatermark {
	if x, ok := m.GetEvent().(*TestStreamPayload_Event_WatermarkEvent); ok {
		return x.WatermarkEvent
	}
	return nil
}

func (m *TestStreamPayload_Event) GetProcessingTimeEvent() *TestStreamPayload_Event_AdvanceProcessingTime {
	if x, ok := m.GetEvent().(*TestStreamPayload_Event_ProcessingTimeEvent); ok {
		return x.ProcessingTimeEvent
	}
	return nil
}

func (m *TestStreamPayload_Event) GetElementEvent() *TestStreamPayload_Event_AddElements {
	if x, ok := m.GetEvent().(*TestStreamPayload_Event_ElementEvent); ok {
		return x.ElementEvent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TestStreamPayload_Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TestStreamPayload_Event_OneofMarshaler, _TestStreamPayload_Event_OneofUnmarshaler, _TestStreamPayload_Event_OneofSizer, []interface{}{
		(*TestStreamPayload_Event_WatermarkEvent)(nil),
		(*TestStreamPayload_Event_ProcessingTimeEvent)(nil),
		(*TestStreamPayload_Event_ElementEvent)(nil),
	}
}

func _TestStreamPayload_Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TestStreamPayload_Event)
	// event
	switch x := m.Event.(type) {
	case *TestStreamPayload_Event_WatermarkEvent:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WatermarkEvent); err != nil {
			return err
		}
	case *TestStreamPayload_Event_ProcessingTimeEvent:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ProcessingTimeEvent); err != nil {
			return err
		}
	case *TestStreamPayload_Event_ElementEvent:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ElementEvent); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TestStreamPayload_Event.Event has unexpected type %T", x)
	}
	return nil
}

func _TestStreamPayload_Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TestStreamPayload_Event)
	switch tag {
	case 1: // event.watermark_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestStreamPayload_Event_AdvanceWatermark)
		err := b.DecodeMessage(msg)
		m.Event = &TestStreamPayload_Event_WatermarkEvent{msg}
		return true, err
	case 2: // event.processing_time_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestStreamPayload_Event_AdvanceProcessingTime)
		err := b.DecodeMessage(msg)
		m.Event = &TestStreamPayload_Event_ProcessingTimeEvent{msg}
		return true, err
	case 3: // event.element_event
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TestStreamPayload_Event_AddElements)
		err := b.DecodeMessage(msg)
		m.Event = &TestStreamPayload_Event_ElementEvent{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TestStreamPayload_Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TestStreamPayload_Event)
	// event
	switch x := m.Event.(type) {
	case *TestStreamPayload_Event_WatermarkEvent:
		s := proto.Size(x.WatermarkEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TestStreamPayload_Event_ProcessingTimeEvent:
		s := proto.Size(x.ProcessingTimeEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TestStreamPayload_Event_ElementEvent:
		s := proto.Size(x.ElementEvent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TestStreamPayload_Event_AdvanceWatermark struct {
	NewWatermark         int64    `protobuf:"varint,1,opt,name=new_watermark,json=newWatermark,proto3" json:"new_watermark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestStreamPayload_Event_AdvanceWatermark) Reset() {
	*m = TestStreamPayload_Event_AdvanceWatermark{}
}
func (m *TestStreamPayload_Event_AdvanceWatermark) String() string { return proto.CompactTextString(m) }
func (*TestStreamPayload_Event_AdvanceWatermark) ProtoMessage()    {}
func (*TestStreamPayload_Event_AdvanceWatermark) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{20, 0, 0}
}
func (m *TestStreamPayload_Event_AdvanceWatermark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestStreamPayload_Event_AdvanceWatermark.Unmarshal(m, b)
}
func (m *TestStreamPayload_Event_AdvanceWatermark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestStreamPayload_Event_AdvanceWatermark.Marshal(b, m, deterministic)
}
func (dst *TestStreamPayload_Event_AdvanceWatermark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestStreamPayload_Event_AdvanceWatermark.Merge(dst, src)
}
func (m *TestStreamPayload_Event_AdvanceWatermark) XXX_Size() int {
	return xxx_messageInfo_TestStreamPayload_Event_AdvanceWatermark.Size(m)
}
func (m *TestStreamPayload_Event_AdvanceWatermark) XXX_DiscardUnknown() {
	xxx_messageInfo_TestStreamPayload_Event_AdvanceWatermark.DiscardUnknown(m)
}

var xxx_messageInfo_TestStreamPayload_Event_AdvanceWatermark proto.InternalMessageInfo

func (m *TestStreamPayload_Event_AdvanceWatermark) GetNewWatermark() int64 {
	if m != nil {
		return m.NewWatermark
	}
	return 0
}

type TestStreamPayload_Event_AdvanceProcessingTime struct {
	AdvanceDuration      int64    `protobuf:"varint,1,opt,name=advance_duration,json=advanceDuration,proto3" json:"advance_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestStreamPayload_Event_AdvanceProcessingTime) Reset() {
	*m = TestStreamPayload_Event_AdvanceProcessingTime{}
}
func (m *TestStreamPayload_Event_AdvanceProcessingTime) String() string {
	return proto.CompactTextString(m)
}
func (*TestStreamPayload_Event_AdvanceProcessingTime) ProtoMessage() {}
func (*TestStreamPayload_Event_AdvanceProcessingTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{20, 0, 1}
}
func (m *TestStreamPayload_Event_AdvanceProcessingTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestStreamPayload_Event_AdvanceProcessingTime.Unmarshal(m, b)
}
func (m *TestStreamPayload_Event_AdvanceProcessingTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestStreamPayload_Event_AdvanceProcessingTime.Marshal(b, m, deterministic)
}
func (dst *TestStreamPayload_Event_AdvanceProcessingTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestStreamPayload_Event_AdvanceProcessingTime.Merge(dst, src)
}
func (m *TestStreamPayload_Event_AdvanceProcessingTime) XXX_Size() int {
	return xxx_messageInfo_TestStreamPayload_Event_AdvanceProcessingTime.Size(m)
}
func (m *TestStreamPayload_Event_AdvanceProcessingTime) XXX_DiscardUnknown() {
	xxx_messageInfo_TestStreamPayload_Event_AdvanceProcessingTime.DiscardUnknown(m)
}

var xxx_messageInfo_TestStreamPayload_Event_AdvanceProcessingTime proto.InternalMessageInfo

func (m *TestStreamPayload_Event_AdvanceProcessingTime) GetAdvanceDuration() int64 {
	if m != nil {
		return m.AdvanceDuration
	}
	return 0
}

type TestStreamPayload_Event_AddElements struct {
	Elements             []*TestStreamPayload_TimestampedElement `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TestStreamPayload_Event_AddElements) Reset()         { *m = TestStreamPayload_Event_AddElements{} }
func (m *TestStreamPayload_Event_AddElements) String() string { return proto.CompactTextString(m) }
func (*TestStreamPayload_Event_AddElements) ProtoMessage()    {}
func (*TestStreamPayload_Event_AddElements) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{20, 0, 2}
}
func (m *TestStreamPayload_Event_AddElements) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestStreamPayload_Event_AddElements.Unmarshal(m, b)
}
func (m *TestStreamPayload_Event_AddElements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestStreamPayload_Event_AddElements.Marshal(b, m, deterministic)
}
func (dst *TestStreamPayload_Event_AddElements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestStreamPayload_Event_AddElements.Merge(dst, src)
}
func (m *TestStreamPayload_Event_AddElements) XXX_Size() int {
	return xxx_messageInfo_TestStreamPayload_Event_AddElements.Size(m)
}
func (m *TestStreamPayload_Event_AddElements) XXX_DiscardUnknown() {
	xxx_messageInfo_TestStreamPayload_Event_AddElements.DiscardUnknown(m)
}

var xxx_messageInfo_TestStreamPayload_Event_AddElements proto.InternalMessageInfo

func (m *TestStreamPayload_Event_AddElements) GetElements() []*TestStreamPayload_TimestampedElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

type TestStreamPayload_TimestampedElement struct {
	EncodedElement       []byte   `protobuf:"bytes,1,opt,name=encoded_element,json=encodedElement,proto3" json:"encoded_element,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestStreamPayload_TimestampedElement) Reset()         { *m = TestStreamPayload_TimestampedElement{} }
func (m *TestStreamPayload_TimestampedElement) String() string { return proto.CompactTextString(m) }
func (*TestStreamPayload_TimestampedElement) ProtoMessage()    {}
func (*TestStreamPayload_TimestampedElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{20, 1}
}
func (m *TestStreamPayload_TimestampedElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestStreamPayload_TimestampedElement.Unmarshal(m, b)
}
func (m *TestStreamPayload_TimestampedElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestStreamPayload_TimestampedElement.Marshal(b, m, deterministic)
}
func (dst *TestStreamPayload_TimestampedElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestStreamPayload_TimestampedElement.Merge(dst, src)
}
func (m *TestStreamPayload_TimestampedElement) XXX_Size() int {
	return xxx_messageInfo_TestStreamPayload_TimestampedElement.Size(m)
}
func (m *TestStreamPayload_TimestampedElement) XXX_DiscardUnknown() {
	xxx_messageInfo_TestStreamPayload_TimestampedElement.DiscardUnknown(m)
}

var xxx_messageInfo_TestStreamPayload_TimestampedElement proto.InternalMessageInfo

func (m *TestStreamPayload_TimestampedElement) GetEncodedElement() []byte {
	if m != nil {
		return m.EncodedElement
	}
	return nil
}

func (m *TestStreamPayload_TimestampedElement) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// The payload for the special-but-not-primitive WriteFiles transform.
type WriteFilesPayload struct {
	// (Required) The SdkFunctionSpec of the FileBasedSink.
	Sink *SdkFunctionSpec `protobuf:"bytes,1,opt,name=sink,proto3" json:"sink,omitempty"`
	// (Required) The format function.
	FormatFunction           *SdkFunctionSpec      `protobuf:"bytes,2,opt,name=format_function,json=formatFunction,proto3" json:"format_function,omitempty"`
	WindowedWrites           bool                  `protobuf:"varint,3,opt,name=windowed_writes,json=windowedWrites,proto3" json:"windowed_writes,omitempty"`
	RunnerDeterminedSharding bool                  `protobuf:"varint,4,opt,name=runner_determined_sharding,json=runnerDeterminedSharding,proto3" json:"runner_determined_sharding,omitempty"`
	SideInputs               map[string]*SideInput `protobuf:"bytes,5,rep,name=side_inputs,json=sideInputs,proto3" json:"side_inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral     struct{}              `json:"-"`
	XXX_unrecognized         []byte                `json:"-"`
	XXX_sizecache            int32                 `json:"-"`
}

func (m *WriteFilesPayload) Reset()         { *m = WriteFilesPayload{} }
func (m *WriteFilesPayload) String() string { return proto.CompactTextString(m) }
func (*WriteFilesPayload) ProtoMessage()    {}
func (*WriteFilesPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{21}
}
func (m *WriteFilesPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteFilesPayload.Unmarshal(m, b)
}
func (m *WriteFilesPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteFilesPayload.Marshal(b, m, deterministic)
}
func (dst *WriteFilesPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteFilesPayload.Merge(dst, src)
}
func (m *WriteFilesPayload) XXX_Size() int {
	return xxx_messageInfo_WriteFilesPayload.Size(m)
}
func (m *WriteFilesPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteFilesPayload.DiscardUnknown(m)
}

var xxx_messageInfo_WriteFilesPayload proto.InternalMessageInfo

func (m *WriteFilesPayload) GetSink() *SdkFunctionSpec {
	if m != nil {
		return m.Sink
	}
	return nil
}

func (m *WriteFilesPayload) GetFormatFunction() *SdkFunctionSpec {
	if m != nil {
		return m.FormatFunction
	}
	return nil
}

func (m *WriteFilesPayload) GetWindowedWrites() bool {
	if m != nil {
		return m.WindowedWrites
	}
	return false
}

func (m *WriteFilesPayload) GetRunnerDeterminedSharding() bool {
	if m != nil {
		return m.RunnerDeterminedSharding
	}
	return false
}

func (m *WriteFilesPayload) GetSideInputs() map[string]*SideInput {
	if m != nil {
		return m.SideInputs
	}
	return nil
}

// A coder, the binary format for serialization and deserialization of data in
// a pipeline.
type Coder struct {
	// (Required) A specification for the coder, as a URN plus parameters. This
	// may be a cross-language agreed-upon format, or it may be a "custom coder"
	// that can only be used by a particular SDK. It does not include component
	// coders, as it is beneficial for these to be comprehensible to a runner
	// regardless of whether the binary format is agreed-upon.
	Spec *FunctionSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
	// this is a list of the components. In order for encodings to be identical,
	// the SdkFunctionSpec and all components must be identical, recursively.
	ComponentCoderIds    []string `protobuf:"bytes,2,rep,name=component_coder_ids,json=componentCoderIds,proto3" json:"component_coder_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coder) Reset()         { *m = Coder{} }
func (m *Coder) String() string { return proto.CompactTextString(m) }
func (*Coder) ProtoMessage()    {}
func (*Coder) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{22}
}
func (m *Coder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coder.Unmarshal(m, b)
}
func (m *Coder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coder.Marshal(b, m, deterministic)
}
func (dst *Coder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coder.Merge(dst, src)
}
func (m *Coder) XXX_Size() int {
	return xxx_messageInfo_Coder.Size(m)
}
func (m *Coder) XXX_DiscardUnknown() {
	xxx_messageInfo_Coder.DiscardUnknown(m)
}

var xxx_messageInfo_Coder proto.InternalMessageInfo

func (m *Coder) GetSpec() *FunctionSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Coder) GetComponentCoderIds() []string {
	if m != nil {
		return m.ComponentCoderIds
	}
	return nil
}

type StandardCoders struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardCoders) Reset()         { *m = StandardCoders{} }
func (m *StandardCoders) String() string { return proto.CompactTextString(m) }
func (*StandardCoders) ProtoMessage()    {}
func (*StandardCoders) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{23}
}
func (m *StandardCoders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardCoders.Unmarshal(m, b)
}
func (m *StandardCoders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardCoders.Marshal(b, m, deterministic)
}
func (dst *StandardCoders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardCoders.Merge(dst, src)
}
func (m *StandardCoders) XXX_Size() int {
	return xxx_messageInfo_StandardCoders.Size(m)
}
func (m *StandardCoders) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardCoders.DiscardUnknown(m)
}

var xxx_messageInfo_StandardCoders proto.InternalMessageInfo

// Experimental: A representation of a Beam Schema.
type Schema struct {
	Fields               []*Schema_Field `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Id                   string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{24}
}
func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (dst *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(dst, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetFields() []*Schema_Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Schema) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Schema_LogicalType struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Args                 string            `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	BaseType             *Schema_FieldType `protobuf:"bytes,3,opt,name=base_type,json=baseType,proto3" json:"base_type,omitempty"`
	SerializedClass      []byte            `protobuf:"bytes,4,opt,name=serialized_class,json=serializedClass,proto3" json:"serialized_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Schema_LogicalType) Reset()         { *m = Schema_LogicalType{} }
func (m *Schema_LogicalType) String() string { return proto.CompactTextString(m) }
func (*Schema_LogicalType) ProtoMessage()    {}
func (*Schema_LogicalType) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{24, 0}
}
func (m *Schema_LogicalType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_LogicalType.Unmarshal(m, b)
}
func (m *Schema_LogicalType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_LogicalType.Marshal(b, m, deterministic)
}
func (dst *Schema_LogicalType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_LogicalType.Merge(dst, src)
}
func (m *Schema_LogicalType) XXX_Size() int {
	return xxx_messageInfo_Schema_LogicalType.Size(m)
}
func (m *Schema_LogicalType) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_LogicalType.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_LogicalType proto.InternalMessageInfo

func (m *Schema_LogicalType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Schema_LogicalType) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *Schema_LogicalType) GetBaseType() *Schema_FieldType {
	if m != nil {
		return m.BaseType
	}
	return nil
}

func (m *Schema_LogicalType) GetSerializedClass() []byte {
	if m != nil {
		return m.SerializedClass
	}
	return nil
}

type Schema_MapType struct {
	KeyType              *Schema_FieldType `protobuf:"bytes,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	ValueType            *Schema_FieldType `protobuf:"bytes,2,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Schema_MapType) Reset()         { *m = Schema_MapType{} }
func (m *Schema_MapType) String() string { return proto.CompactTextString(m) }
func (*Schema_MapType) ProtoMessage()    {}
func (*Schema_MapType) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{24, 1}
}
func (m *Schema_MapType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_MapType.Unmarshal(m, b)
}
func (m *Schema_MapType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_MapType.Marshal(b, m, deterministic)
}
func (dst *Schema_MapType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_MapType.Merge(dst, src)
}
func (m *Schema_MapType) XXX_Size() int {
	return xxx_messageInfo_Schema_MapType.Size(m)
}
func (m *Schema_MapType) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_MapType.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_MapType proto.InternalMessageInfo

func (m *Schema_MapType) GetKeyType() *Schema_FieldType {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (m *Schema_MapType) GetValueType() *Schema_FieldType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

type Schema_FieldType struct {
	TypeName Schema_TypeName `protobuf:"varint,1,opt,name=type_name,json=typeName,proto3,enum=org.apache.beam.model.pipeline.v1.Schema_TypeName" json:"type_name,omitempty"`
	Nullable bool            `protobuf:"varint,2,opt,name=nullable,proto3" json:"nullable,omitempty"`
	// Types that are valid to be assigned to TypeInfo:
	//	*Schema_FieldType_CollectionElementType
	//	*Schema_FieldType_MapType
	//	*Schema_FieldType_RowSchema
	//	*Schema_FieldType_LogicalType
	TypeInfo             isSchema_FieldType_TypeInfo `protobuf_oneof:"type_info"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Schema_FieldType) Reset()         { *m = Schema_FieldType{} }
func (m *Schema_FieldType) String() string { return proto.CompactTextString(m) }
func (*Schema_FieldType) ProtoMessage()    {}
func (*Schema_FieldType) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{24, 2}
}
func (m *Schema_FieldType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_FieldType.Unmarshal(m, b)
}
func (m *Schema_FieldType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_FieldType.Marshal(b, m, deterministic)
}
func (dst *Schema_FieldType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_FieldType.Merge(dst, src)
}
func (m *Schema_FieldType) XXX_Size() int {
	return xxx_messageInfo_Schema_FieldType.Size(m)
}
func (m *Schema_FieldType) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_FieldType.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_FieldType proto.InternalMessageInfo

type isSchema_FieldType_TypeInfo interface {
	isSchema_FieldType_TypeInfo()
}

type Schema_FieldType_CollectionElementType struct {
	CollectionElementType *Schema_FieldType `protobuf:"bytes,3,opt,name=collection_element_type,json=collectionElementType,proto3,oneof"`
}
type Schema_FieldType_MapType struct {
	MapType *Schema_MapType `protobuf:"bytes,4,opt,name=map_type,json=mapType,proto3,oneof"`
}
type Schema_FieldType_RowSchema struct {
	RowSchema *Schema `protobuf:"bytes,5,opt,name=row_schema,json=rowSchema,proto3,oneof"`
}
type Schema_FieldType_LogicalType struct {
	LogicalType *Schema_LogicalType `protobuf:"bytes,6,opt,name=logical_type,json=logicalType,proto3,oneof"`
}

func (*Schema_FieldType_CollectionElementType) isSchema_FieldType_TypeInfo() {}
func (*Schema_FieldType_MapType) isSchema_FieldType_TypeInfo()               {}
func (*Schema_FieldType_RowSchema) isSchema_FieldType_TypeInfo()             {}
func (*Schema_FieldType_LogicalType) isSchema_FieldType_TypeInfo()           {}

func (m *Schema_FieldType) GetTypeInfo() isSchema_FieldType_TypeInfo {
	if m != nil {
		return m.TypeInfo
	}
	return nil
}

func (m *Schema_FieldType) GetTypeName() Schema_TypeName {
	if m != nil {
		return m.TypeName
	}
	return Schema_BYTE
}

func (m *Schema_FieldType) GetNullable() bool {
	if m != nil {
		return m.Nullable
	}
	return false
}

func (m *Schema_FieldType) GetCollectionElementType() *Schema_FieldType {
	if x, ok := m.GetTypeInfo().(*Schema_FieldType_CollectionElementType); ok {
		return x.CollectionElementType
	}
	return nil
}

func (m *Schema_FieldType) GetMapType() *Schema_MapType {
	if x, ok := m.GetTypeInfo().(*Schema_FieldType_MapType); ok {
		return x.MapType
	}
	return nil
}

func (m *Schema_FieldType) GetRowSchema() *Schema {
	if x, ok := m.GetTypeInfo().(*Schema_FieldType_RowSchema); ok {
		return x.RowSchema
	}
	return nil
}

func (m *Schema_FieldType) GetLogicalType() *Schema_LogicalType {
	if x, ok := m.GetTypeInfo().(*Schema_FieldType_LogicalType); ok {
		return x.LogicalType
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Schema_FieldType) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Schema_FieldType_OneofMarshaler, _Schema_FieldType_OneofUnmarshaler, _Schema_FieldType_OneofSizer, []interface{}{
		(*Schema_FieldType_CollectionElementType)(nil),
		(*Schema_FieldType_MapType)(nil),
		(*Schema_FieldType_RowSchema)(nil),
		(*Schema_FieldType_LogicalType)(nil),
	}
}

func _Schema_FieldType_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Schema_FieldType)
	// type_info
	switch x := m.TypeInfo.(type) {
	case *Schema_FieldType_CollectionElementType:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CollectionElementType); err != nil {
			return err
		}
	case *Schema_FieldType_MapType:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MapType); err != nil {
			return err
		}
	case *Schema_FieldType_RowSchema:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RowSchema); err != nil {
			return err
		}
	case *Schema_FieldType_LogicalType:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LogicalType); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Schema_FieldType.TypeInfo has unexpected type %T", x)
	}
	return nil
}

func _Schema_FieldType_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Schema_FieldType)
	switch tag {
	case 3: // type_info.collection_element_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema_FieldType)
		err := b.DecodeMessage(msg)
		m.TypeInfo = &Schema_FieldType_CollectionElementType{msg}
		return true, err
	case 4: // type_info.map_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema_MapType)
		err := b.DecodeMessage(msg)
		m.TypeInfo = &Schema_FieldType_MapType{msg}
		return true, err
	case 5: // type_info.row_schema
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema)
		err := b.DecodeMessage(msg)
		m.TypeInfo = &Schema_FieldType_RowSchema{msg}
		return true, err
	case 6: // type_info.logical_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Schema_LogicalType)
		err := b.DecodeMessage(msg)
		m.TypeInfo = &Schema_FieldType_LogicalType{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Schema_FieldType_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Schema_FieldType)
	// type_info
	switch x := m.TypeInfo.(type) {
	case *Schema_FieldType_CollectionElementType:
		s := proto.Size(x.CollectionElementType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Schema_FieldType_MapType:
		s := proto.Size(x.MapType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Schema_FieldType_RowSchema:
		s := proto.Size(x.RowSchema)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Schema_FieldType_LogicalType:
		s := proto.Size(x.LogicalType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Schema_Field struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type                 *Schema_FieldType `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Id                   int32             `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	EncodingPosition     int32             `protobuf:"varint,5,opt,name=encoding_position,json=encodingPosition,proto3" json:"encoding_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Schema_Field) Reset()         { *m = Schema_Field{} }
func (m *Schema_Field) String() string { return proto.CompactTextString(m) }
func (*Schema_Field) ProtoMessage()    {}
func (*Schema_Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{24, 3}
}
func (m *Schema_Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema_Field.Unmarshal(m, b)
}
func (m *Schema_Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema_Field.Marshal(b, m, deterministic)
}
func (dst *Schema_Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema_Field.Merge(dst, src)
}
func (m *Schema_Field) XXX_Size() int {
	return xxx_messageInfo_Schema_Field.Size(m)
}
func (m *Schema_Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Schema_Field proto.InternalMessageInfo

func (m *Schema_Field) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Schema_Field) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Schema_Field) GetType() *Schema_FieldType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Schema_Field) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Schema_Field) GetEncodingPosition() int32 {
	if m != nil {
		return m.EncodingPosition
	}
	return 0
}

// A windowing strategy describes the window function, triggering, allowed
// lateness, and accumulation mode for a PCollection.
//
// TODO: consider inlining field on PCollection
type WindowingStrategy struct {
	// (Required) The SdkFunctionSpec of the UDF that assigns windows,
	// merges windows, and shifts timestamps before they are
	// combined according to the OutputTime.
	WindowFn *SdkFunctionSpec `protobuf:"bytes,1,opt,name=window_fn,json=windowFn,proto3" json:"window_fn,omitempty"`
	// (Required) Whether or not the window fn is merging.
	//
	// This knowledge is required for many optimizations.
	MergeStatus MergeStatus_Enum `protobuf:"varint,2,opt,name=merge_status,json=mergeStatus,proto3,enum=org.apache.beam.model.pipeline.v1.MergeStatus_Enum" json:"merge_status,omitempty"`
	// (Required) The coder for the windows of this PCollection.
	WindowCoderId string `protobuf:"bytes,3,opt,name=window_coder_id,json=windowCoderId,proto3" json:"window_coder_id,omitempty"`
	// (Required) The trigger to use when grouping this PCollection.
	Trigger *Trigger `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// (Required) The accumulation mode indicates whether new panes are a full
	// replacement for prior panes or whether they are deltas to be combined
	// with other panes (the combine should correspond to whatever the upstream
	// grouping transform is).
	AccumulationMode AccumulationMode_Enum `protobuf:"varint,5,opt,name=accumulation_mode,json=accumulationMode,proto3,enum=org.apache.beam.model.pipeline.v1.AccumulationMode_Enum" json:"accumulation_mode,omitempty"`
	// (Required) The OutputTime specifies, for a grouping transform, how to
	// compute the aggregate timestamp. The window_fn will first possibly shift
	// it later, then the OutputTime takes the max, min, or ignores it and takes
	// the end of window.
	//
	// This is actually only for input to grouping transforms, but since they
	// may be introduced in runner-specific ways, it is carried along with the
	// windowing strategy.
	OutputTime OutputTime_Enum `protobuf:"varint,6,opt,name=output_time,json=outputTime,proto3,enum=org.apache.beam.model.pipeline.v1.OutputTime_Enum" json:"output_time,omitempty"`
	// (Required) Indicate when output should be omitted upon window expiration.
	ClosingBehavior ClosingBehavior_Enum `protobuf:"varint,7,opt,name=closing_behavior,json=closingBehavior,proto3,enum=org.apache.beam.model.pipeline.v1.ClosingBehavior_Enum" json:"closing_behavior,omitempty"`
	// (Required) The duration, in milliseconds, beyond the end of a window at
	// which the window becomes droppable.
	AllowedLateness int64 `protobuf:"varint,8,opt,name=allowed_lateness,json=allowedLateness,proto3" json:"allowed_lateness,omitempty"`
	// (Required) Indicate whether empty on-time panes should be omitted.
	OnTimeBehavior OnTimeBehavior_Enum `protobuf:"varint,9,opt,name=OnTimeBehavior,proto3,enum=org.apache.beam.model.pipeline.v1.OnTimeBehavior_Enum" json:"OnTimeBehavior,omitempty"`
	// (Required) Whether or not the window fn assigns inputs to exactly one window
	//
	// This knowledge is required for some optimizations
	AssignsToOneWindow   bool     `protobuf:"varint,10,opt,name=assigns_to_one_window,json=assignsToOneWindow,proto3" json:"assigns_to_one_window,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WindowingStrategy) Reset()         { *m = WindowingStrategy{} }
func (m *WindowingStrategy) String() string { return proto.CompactTextString(m) }
func (*WindowingStrategy) ProtoMessage()    {}
func (*WindowingStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{25}
}
func (m *WindowingStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WindowingStrategy.Unmarshal(m, b)
}
func (m *WindowingStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WindowingStrategy.Marshal(b, m, deterministic)
}
func (dst *WindowingStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WindowingStrategy.Merge(dst, src)
}
func (m *WindowingStrategy) XXX_Size() int {
	return xxx_messageInfo_WindowingStrategy.Size(m)
}
func (m *WindowingStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_WindowingStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_WindowingStrategy proto.InternalMessageInfo

func (m *WindowingStrategy) GetWindowFn() *SdkFunctionSpec {
	if m != nil {
		return m.WindowFn
	}
	return nil
}

func (m *WindowingStrategy) GetMergeStatus() MergeStatus_Enum {
	if m != nil {
		return m.MergeStatus
	}
	return MergeStatus_UNSPECIFIED
}

func (m *WindowingStrategy) GetWindowCoderId() string {
	if m != nil {
		return m.WindowCoderId
	}
	return ""
}

func (m *WindowingStrategy) GetTrigger() *Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *WindowingStrategy) GetAccumulationMode() AccumulationMode_Enum {
	if m != nil {
		return m.AccumulationMode
	}
	return AccumulationMode_UNSPECIFIED
}

func (m *WindowingStrategy) GetOutputTime() OutputTime_Enum {
	if m != nil {
		return m.OutputTime
	}
	return OutputTime_UNSPECIFIED
}

func (m *WindowingStrategy) GetClosingBehavior() ClosingBehavior_Enum {
	if m != nil {
		return m.ClosingBehavior
	}
	return ClosingBehavior_UNSPECIFIED
}

func (m *WindowingStrategy) GetAllowedLateness() int64 {
	if m != nil {
		return m.AllowedLateness
	}
	return 0
}

func (m *WindowingStrategy) GetOnTimeBehavior() OnTimeBehavior_Enum {
	if m != nil {
		return m.OnTimeBehavior
	}
	return OnTimeBehavior_UNSPECIFIED
}

func (m *WindowingStrategy) GetAssignsToOneWindow() bool {
	if m != nil {
		return m.AssignsToOneWindow
	}
	return false
}

// Whether or not a PCollection's WindowFn is non-merging, merging, or
// merging-but-already-merged, in which case a subsequent GroupByKey is almost
// always going to do something the user does not want
type MergeStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MergeStatus) Reset()         { *m = MergeStatus{} }
func (m *MergeStatus) String() string { return proto.CompactTextString(m) }
func (*MergeStatus) ProtoMessage()    {}
func (*MergeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{26}
}
func (m *MergeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MergeStatus.Unmarshal(m, b)
}
func (m *MergeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MergeStatus.Marshal(b, m, deterministic)
}
func (dst *MergeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MergeStatus.Merge(dst, src)
}
func (m *MergeStatus) XXX_Size() int {
	return xxx_messageInfo_MergeStatus.Size(m)
}
func (m *MergeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MergeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MergeStatus proto.InternalMessageInfo

// Whether or not subsequent outputs of aggregations should be entire
// replacement values or just the aggregation of inputs received since
// the prior output.
type AccumulationMode struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccumulationMode) Reset()         { *m = AccumulationMode{} }
func (m *AccumulationMode) String() string { return proto.CompactTextString(m) }
func (*AccumulationMode) ProtoMessage()    {}
func (*AccumulationMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{27}
}
func (m *AccumulationMode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccumulationMode.Unmarshal(m, b)
}
func (m *AccumulationMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccumulationMode.Marshal(b, m, deterministic)
}
func (dst *AccumulationMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccumulationMode.Merge(dst, src)
}
func (m *AccumulationMode) XXX_Size() int {
	return xxx_messageInfo_AccumulationMode.Size(m)
}
func (m *AccumulationMode) XXX_DiscardUnknown() {
	xxx_messageInfo_AccumulationMode.DiscardUnknown(m)
}

var xxx_messageInfo_AccumulationMode proto.InternalMessageInfo

// Controls whether or not an aggregating transform should output data
// when a window expires.
type ClosingBehavior struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClosingBehavior) Reset()         { *m = ClosingBehavior{} }
func (m *ClosingBehavior) String() string { return proto.CompactTextString(m) }
func (*ClosingBehavior) ProtoMessage()    {}
func (*ClosingBehavior) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{28}
}
func (m *ClosingBehavior) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosingBehavior.Unmarshal(m, b)
}
func (m *ClosingBehavior) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosingBehavior.Marshal(b, m, deterministic)
}
func (dst *ClosingBehavior) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosingBehavior.Merge(dst, src)
}
func (m *ClosingBehavior) XXX_Size() int {
	return xxx_messageInfo_ClosingBehavior.Size(m)
}
func (m *ClosingBehavior) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosingBehavior.DiscardUnknown(m)
}

var xxx_messageInfo_ClosingBehavior proto.InternalMessageInfo

// Controls whether or not an aggregating transform should output data
// when an on-time pane is empty.
type OnTimeBehavior struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnTimeBehavior) Reset()         { *m = OnTimeBehavior{} }
func (m *OnTimeBehavior) String() string { return proto.CompactTextString(m) }
func (*OnTimeBehavior) ProtoMessage()    {}
func (*OnTimeBehavior) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{29}
}
func (m *OnTimeBehavior) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnTimeBehavior.Unmarshal(m, b)
}
func (m *OnTimeBehavior) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnTimeBehavior.Marshal(b, m, deterministic)
}
func (dst *OnTimeBehavior) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnTimeBehavior.Merge(dst, src)
}
func (m *OnTimeBehavior) XXX_Size() int {
	return xxx_messageInfo_OnTimeBehavior.Size(m)
}
func (m *OnTimeBehavior) XXX_DiscardUnknown() {
	xxx_messageInfo_OnTimeBehavior.DiscardUnknown(m)
}

var xxx_messageInfo_OnTimeBehavior proto.InternalMessageInfo

// When a number of windowed, timestamped inputs are aggregated, the timestamp
// for the resulting output.
type OutputTime struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputTime) Reset()         { *m = OutputTime{} }
func (m *OutputTime) String() string { return proto.CompactTextString(m) }
func (*OutputTime) ProtoMessage()    {}
func (*OutputTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{30}
}
func (m *OutputTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputTime.Unmarshal(m, b)
}
func (m *OutputTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputTime.Marshal(b, m, deterministic)
}
func (dst *OutputTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputTime.Merge(dst, src)
}
func (m *OutputTime) XXX_Size() int {
	return xxx_messageInfo_OutputTime.Size(m)
}
func (m *OutputTime) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputTime.DiscardUnknown(m)
}

var xxx_messageInfo_OutputTime proto.InternalMessageInfo

// The different time domains in the Beam model.
type TimeDomain struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeDomain) Reset()         { *m = TimeDomain{} }
func (m *TimeDomain) String() string { return proto.CompactTextString(m) }
func (*TimeDomain) ProtoMessage()    {}
func (*TimeDomain) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{31}
}
func (m *TimeDomain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeDomain.Unmarshal(m, b)
}
func (m *TimeDomain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeDomain.Marshal(b, m, deterministic)
}
func (dst *TimeDomain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeDomain.Merge(dst, src)
}
func (m *TimeDomain) XXX_Size() int {
	return xxx_messageInfo_TimeDomain.Size(m)
}
func (m *TimeDomain) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeDomain.DiscardUnknown(m)
}

var xxx_messageInfo_TimeDomain proto.InternalMessageInfo

// A small DSL for expressing when to emit new aggregations
// from a GroupByKey or CombinePerKey
//
// A trigger is described in terms of when it is _ready_ to permit output.
type Trigger struct {
	// The full disjoint union of possible triggers.
	//
	// Types that are valid to be assigned to Trigger:
	//	*Trigger_AfterAll_
	//	*Trigger_AfterAny_
	//	*Trigger_AfterEach_
	//	*Trigger_AfterEndOfWindow_
	//	*Trigger_AfterProcessingTime_
	//	*Trigger_AfterSynchronizedProcessingTime_
	//	*Trigger_Always_
	//	*Trigger_Default_
	//	*Trigger_ElementCount_
	//	*Trigger_Never_
	//	*Trigger_OrFinally_
	//	*Trigger_Repeat_
	Trigger              isTrigger_Trigger `protobuf_oneof:"trigger"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32}
}
func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (dst *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(dst, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

type isTrigger_Trigger interface {
	isTrigger_Trigger()
}

type Trigger_AfterAll_ struct {
	AfterAll *Trigger_AfterAll `protobuf:"bytes,1,opt,name=after_all,json=afterAll,proto3,oneof"`
}
type Trigger_AfterAny_ struct {
	AfterAny *Trigger_AfterAny `protobuf:"bytes,2,opt,name=after_any,json=afterAny,proto3,oneof"`
}
type Trigger_AfterEach_ struct {
	AfterEach *Trigger_AfterEach `protobuf:"bytes,3,opt,name=after_each,json=afterEach,proto3,oneof"`
}
type Trigger_AfterEndOfWindow_ struct {
	AfterEndOfWindow *Trigger_AfterEndOfWindow `protobuf:"bytes,4,opt,name=after_end_of_window,json=afterEndOfWindow,proto3,oneof"`
}
type Trigger_AfterProcessingTime_ struct {
	AfterProcessingTime *Trigger_AfterProcessingTime `protobuf:"bytes,5,opt,name=after_processing_time,json=afterProcessingTime,proto3,oneof"`
}
type Trigger_AfterSynchronizedProcessingTime_ struct {
	AfterSynchronizedProcessingTime *Trigger_AfterSynchronizedProcessingTime `protobuf:"bytes,6,opt,name=after_synchronized_processing_time,json=afterSynchronizedProcessingTime,proto3,oneof"`
}
type Trigger_Always_ struct {
	Always *Trigger_Always `protobuf:"bytes,12,opt,name=always,proto3,oneof"`
}
type Trigger_Default_ struct {
	Default *Trigger_Default `protobuf:"bytes,7,opt,name=default,proto3,oneof"`
}
type Trigger_ElementCount_ struct {
	ElementCount *Trigger_ElementCount `protobuf:"bytes,8,opt,name=element_count,json=elementCount,proto3,oneof"`
}
type Trigger_Never_ struct {
	Never *Trigger_Never `protobuf:"bytes,9,opt,name=never,proto3,oneof"`
}
type Trigger_OrFinally_ struct {
	OrFinally *Trigger_OrFinally `protobuf:"bytes,10,opt,name=or_finally,json=orFinally,proto3,oneof"`
}
type Trigger_Repeat_ struct {
	Repeat *Trigger_Repeat `protobuf:"bytes,11,opt,name=repeat,proto3,oneof"`
}

func (*Trigger_AfterAll_) isTrigger_Trigger()                        {}
func (*Trigger_AfterAny_) isTrigger_Trigger()                        {}
func (*Trigger_AfterEach_) isTrigger_Trigger()                       {}
func (*Trigger_AfterEndOfWindow_) isTrigger_Trigger()                {}
func (*Trigger_AfterProcessingTime_) isTrigger_Trigger()             {}
func (*Trigger_AfterSynchronizedProcessingTime_) isTrigger_Trigger() {}
func (*Trigger_Always_) isTrigger_Trigger()                          {}
func (*Trigger_Default_) isTrigger_Trigger()                         {}
func (*Trigger_ElementCount_) isTrigger_Trigger()                    {}
func (*Trigger_Never_) isTrigger_Trigger()                           {}
func (*Trigger_OrFinally_) isTrigger_Trigger()                       {}
func (*Trigger_Repeat_) isTrigger_Trigger()                          {}

func (m *Trigger) GetTrigger() isTrigger_Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *Trigger) GetAfterAll() *Trigger_AfterAll {
	if x, ok := m.GetTrigger().(*Trigger_AfterAll_); ok {
		return x.AfterAll
	}
	return nil
}

func (m *Trigger) GetAfterAny() *Trigger_AfterAny {
	if x, ok := m.GetTrigger().(*Trigger_AfterAny_); ok {
		return x.AfterAny
	}
	return nil
}

func (m *Trigger) GetAfterEach() *Trigger_AfterEach {
	if x, ok := m.GetTrigger().(*Trigger_AfterEach_); ok {
		return x.AfterEach
	}
	return nil
}

func (m *Trigger) GetAfterEndOfWindow() *Trigger_AfterEndOfWindow {
	if x, ok := m.GetTrigger().(*Trigger_AfterEndOfWindow_); ok {
		return x.AfterEndOfWindow
	}
	return nil
}

func (m *Trigger) GetAfterProcessingTime() *Trigger_AfterProcessingTime {
	if x, ok := m.GetTrigger().(*Trigger_AfterProcessingTime_); ok {
		return x.AfterProcessingTime
	}
	return nil
}

func (m *Trigger) GetAfterSynchronizedProcessingTime() *Trigger_AfterSynchronizedProcessingTime {
	if x, ok := m.GetTrigger().(*Trigger_AfterSynchronizedProcessingTime_); ok {
		return x.AfterSynchronizedProcessingTime
	}
	return nil
}

func (m *Trigger) GetAlways() *Trigger_Always {
	if x, ok := m.GetTrigger().(*Trigger_Always_); ok {
		return x.Always
	}
	return nil
}

func (m *Trigger) GetDefault() *Trigger_Default {
	if x, ok := m.GetTrigger().(*Trigger_Default_); ok {
		return x.Default
	}
	return nil
}

func (m *Trigger) GetElementCount() *Trigger_ElementCount {
	if x, ok := m.GetTrigger().(*Trigger_ElementCount_); ok {
		return x.ElementCount
	}
	return nil
}

func (m *Trigger) GetNever() *Trigger_Never {
	if x, ok := m.GetTrigger().(*Trigger_Never_); ok {
		return x.Never
	}
	return nil
}

func (m *Trigger) GetOrFinally() *Trigger_OrFinally {
	if x, ok := m.GetTrigger().(*Trigger_OrFinally_); ok {
		return x.OrFinally
	}
	return nil
}

func (m *Trigger) GetRepeat() *Trigger_Repeat {
	if x, ok := m.GetTrigger().(*Trigger_Repeat_); ok {
		return x.Repeat
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Trigger) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Trigger_OneofMarshaler, _Trigger_OneofUnmarshaler, _Trigger_OneofSizer, []interface{}{
		(*Trigger_AfterAll_)(nil),
		(*Trigger_AfterAny_)(nil),
		(*Trigger_AfterEach_)(nil),
		(*Trigger_AfterEndOfWindow_)(nil),
		(*Trigger_AfterProcessingTime_)(nil),
		(*Trigger_AfterSynchronizedProcessingTime_)(nil),
		(*Trigger_Always_)(nil),
		(*Trigger_Default_)(nil),
		(*Trigger_ElementCount_)(nil),
		(*Trigger_Never_)(nil),
		(*Trigger_OrFinally_)(nil),
		(*Trigger_Repeat_)(nil),
	}
}

func _Trigger_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_AfterAll_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AfterAll); err != nil {
			return err
		}
	case *Trigger_AfterAny_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AfterAny); err != nil {
			return err
		}
	case *Trigger_AfterEach_:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AfterEach); err != nil {
			return err
		}
	case *Trigger_AfterEndOfWindow_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AfterEndOfWindow); err != nil {
			return err
		}
	case *Trigger_AfterProcessingTime_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AfterProcessingTime); err != nil {
			return err
		}
	case *Trigger_AfterSynchronizedProcessingTime_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AfterSynchronizedProcessingTime); err != nil {
			return err
		}
	case *Trigger_Always_:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Always); err != nil {
			return err
		}
	case *Trigger_Default_:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Default); err != nil {
			return err
		}
	case *Trigger_ElementCount_:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ElementCount); err != nil {
			return err
		}
	case *Trigger_Never_:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Never); err != nil {
			return err
		}
	case *Trigger_OrFinally_:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OrFinally); err != nil {
			return err
		}
	case *Trigger_Repeat_:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Repeat); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Trigger.Trigger has unexpected type %T", x)
	}
	return nil
}

func _Trigger_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Trigger)
	switch tag {
	case 1: // trigger.after_all
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_AfterAll)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_AfterAll_{msg}
		return true, err
	case 2: // trigger.after_any
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_AfterAny)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_AfterAny_{msg}
		return true, err
	case 3: // trigger.after_each
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_AfterEach)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_AfterEach_{msg}
		return true, err
	case 4: // trigger.after_end_of_window
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_AfterEndOfWindow)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_AfterEndOfWindow_{msg}
		return true, err
	case 5: // trigger.after_processing_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_AfterProcessingTime)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_AfterProcessingTime_{msg}
		return true, err
	case 6: // trigger.after_synchronized_processing_time
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_AfterSynchronizedProcessingTime)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_AfterSynchronizedProcessingTime_{msg}
		return true, err
	case 12: // trigger.always
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_Always)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_Always_{msg}
		return true, err
	case 7: // trigger.default
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_Default)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_Default_{msg}
		return true, err
	case 8: // trigger.element_count
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_ElementCount)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_ElementCount_{msg}
		return true, err
	case 9: // trigger.never
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_Never)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_Never_{msg}
		return true, err
	case 10: // trigger.or_finally
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_OrFinally)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_OrFinally_{msg}
		return true, err
	case 11: // trigger.repeat
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Trigger_Repeat)
		err := b.DecodeMessage(msg)
		m.Trigger = &Trigger_Repeat_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Trigger_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Trigger)
	// trigger
	switch x := m.Trigger.(type) {
	case *Trigger_AfterAll_:
		s := proto.Size(x.AfterAll)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_AfterAny_:
		s := proto.Size(x.AfterAny)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_AfterEach_:
		s := proto.Size(x.AfterEach)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_AfterEndOfWindow_:
		s := proto.Size(x.AfterEndOfWindow)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_AfterProcessingTime_:
		s := proto.Size(x.AfterProcessingTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_AfterSynchronizedProcessingTime_:
		s := proto.Size(x.AfterSynchronizedProcessingTime)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_Always_:
		s := proto.Size(x.Always)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_Default_:
		s := proto.Size(x.Default)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_ElementCount_:
		s := proto.Size(x.ElementCount)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_Never_:
		s := proto.Size(x.Never)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_OrFinally_:
		s := proto.Size(x.OrFinally)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trigger_Repeat_:
		s := proto.Size(x.Repeat)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Ready when all subtriggers are ready.
type Trigger_AfterAll struct {
	Subtriggers          []*Trigger `protobuf:"bytes,1,rep,name=subtriggers,proto3" json:"subtriggers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Trigger_AfterAll) Reset()         { *m = Trigger_AfterAll{} }
func (m *Trigger_AfterAll) String() string { return proto.CompactTextString(m) }
func (*Trigger_AfterAll) ProtoMessage()    {}
func (*Trigger_AfterAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 0}
}
func (m *Trigger_AfterAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_AfterAll.Unmarshal(m, b)
}
func (m *Trigger_AfterAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_AfterAll.Marshal(b, m, deterministic)
}
func (dst *Trigger_AfterAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_AfterAll.Merge(dst, src)
}
func (m *Trigger_AfterAll) XXX_Size() int {
	return xxx_messageInfo_Trigger_AfterAll.Size(m)
}
func (m *Trigger_AfterAll) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_AfterAll.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_AfterAll proto.InternalMessageInfo

func (m *Trigger_AfterAll) GetSubtriggers() []*Trigger {
	if m != nil {
		return m.Subtriggers
	}
	return nil
}

// Ready when any subtrigger is ready.
type Trigger_AfterAny struct {
	Subtriggers          []*Trigger `protobuf:"bytes,1,rep,name=subtriggers,proto3" json:"subtriggers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Trigger_AfterAny) Reset()         { *m = Trigger_AfterAny{} }
func (m *Trigger_AfterAny) String() string { return proto.CompactTextString(m) }
func (*Trigger_AfterAny) ProtoMessage()    {}
func (*Trigger_AfterAny) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 1}
}
func (m *Trigger_AfterAny) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_AfterAny.Unmarshal(m, b)
}
func (m *Trigger_AfterAny) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_AfterAny.Marshal(b, m, deterministic)
}
func (dst *Trigger_AfterAny) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_AfterAny.Merge(dst, src)
}
func (m *Trigger_AfterAny) XXX_Size() int {
	return xxx_messageInfo_Trigger_AfterAny.Size(m)
}
func (m *Trigger_AfterAny) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_AfterAny.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_AfterAny proto.InternalMessageInfo

func (m *Trigger_AfterAny) GetSubtriggers() []*Trigger {
	if m != nil {
		return m.Subtriggers
	}
	return nil
}

// Starting with the first subtrigger, ready when the _current_ subtrigger
// is ready. After output, advances the current trigger by one.
type Trigger_AfterEach struct {
	Subtriggers          []*Trigger `protobuf:"bytes,1,rep,name=subtriggers,proto3" json:"subtriggers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Trigger_AfterEach) Reset()         { *m = Trigger_AfterEach{} }
func (m *Trigger_AfterEach) String() string { return proto.CompactTextString(m) }
func (*Trigger_AfterEach) ProtoMessage()    {}
func (*Trigger_AfterEach) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 2}
}
func (m *Trigger_AfterEach) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_AfterEach.Unmarshal(m, b)
}
func (m *Trigger_AfterEach) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_AfterEach.Marshal(b, m, deterministic)
}
func (dst *Trigger_AfterEach) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_AfterEach.Merge(dst, src)
}
func (m *Trigger_AfterEach) XXX_Size() int {
	return xxx_messageInfo_Trigger_AfterEach.Size(m)
}
func (m *Trigger_AfterEach) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_AfterEach.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_AfterEach proto.InternalMessageInfo

func (m *Trigger_AfterEach) GetSubtriggers() []*Trigger {
	if m != nil {
		return m.Subtriggers
	}
	return nil
}

// Ready after the input watermark is past the end of the window.
//
// May have implicitly-repeated subtriggers for early and late firings.
// When the end of the window is reached, the trigger transitions between
// the subtriggers.
type Trigger_AfterEndOfWindow struct {
	// (Optional) A trigger governing output prior to the end of the window.
	EarlyFirings *Trigger `protobuf:"bytes,1,opt,name=early_firings,json=earlyFirings,proto3" json:"early_firings,omitempty"`
	// (Optional) A trigger governing output after the end of the window.
	LateFirings          *Trigger `protobuf:"bytes,2,opt,name=late_firings,json=lateFirings,proto3" json:"late_firings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_AfterEndOfWindow) Reset()         { *m = Trigger_AfterEndOfWindow{} }
func (m *Trigger_AfterEndOfWindow) String() string { return proto.CompactTextString(m) }
func (*Trigger_AfterEndOfWindow) ProtoMessage()    {}
func (*Trigger_AfterEndOfWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 3}
}
func (m *Trigger_AfterEndOfWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_AfterEndOfWindow.Unmarshal(m, b)
}
func (m *Trigger_AfterEndOfWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_AfterEndOfWindow.Marshal(b, m, deterministic)
}
func (dst *Trigger_AfterEndOfWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_AfterEndOfWindow.Merge(dst, src)
}
func (m *Trigger_AfterEndOfWindow) XXX_Size() int {
	return xxx_messageInfo_Trigger_AfterEndOfWindow.Size(m)
}
func (m *Trigger_AfterEndOfWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_AfterEndOfWindow.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_AfterEndOfWindow proto.InternalMessageInfo

func (m *Trigger_AfterEndOfWindow) GetEarlyFirings() *Trigger {
	if m != nil {
		return m.EarlyFirings
	}
	return nil
}

func (m *Trigger_AfterEndOfWindow) GetLateFirings() *Trigger {
	if m != nil {
		return m.LateFirings
	}
	return nil
}

// After input arrives, ready when the specified delay has passed.
type Trigger_AfterProcessingTime struct {
	// (Required) The transforms to apply to an arriving element's timestamp,
	// in order
	TimestampTransforms  []*TimestampTransform `protobuf:"bytes,1,rep,name=timestamp_transforms,json=timestampTransforms,proto3" json:"timestamp_transforms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Trigger_AfterProcessingTime) Reset()         { *m = Trigger_AfterProcessingTime{} }
func (m *Trigger_AfterProcessingTime) String() string { return proto.CompactTextString(m) }
func (*Trigger_AfterProcessingTime) ProtoMessage()    {}
func (*Trigger_AfterProcessingTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 4}
}
func (m *Trigger_AfterProcessingTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_AfterProcessingTime.Unmarshal(m, b)
}
func (m *Trigger_AfterProcessingTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_AfterProcessingTime.Marshal(b, m, deterministic)
}
func (dst *Trigger_AfterProcessingTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_AfterProcessingTime.Merge(dst, src)
}
func (m *Trigger_AfterProcessingTime) XXX_Size() int {
	return xxx_messageInfo_Trigger_AfterProcessingTime.Size(m)
}
func (m *Trigger_AfterProcessingTime) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_AfterProcessingTime.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_AfterProcessingTime proto.InternalMessageInfo

func (m *Trigger_AfterProcessingTime) GetTimestampTransforms() []*TimestampTransform {
	if m != nil {
		return m.TimestampTransforms
	}
	return nil
}

// Ready whenever upstream processing time has all caught up with
// the arrival time of an input element
type Trigger_AfterSynchronizedProcessingTime struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_AfterSynchronizedProcessingTime) Reset() {
	*m = Trigger_AfterSynchronizedProcessingTime{}
}
func (m *Trigger_AfterSynchronizedProcessingTime) String() string { return proto.CompactTextString(m) }
func (*Trigger_AfterSynchronizedProcessingTime) ProtoMessage()    {}
func (*Trigger_AfterSynchronizedProcessingTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 5}
}
func (m *Trigger_AfterSynchronizedProcessingTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_AfterSynchronizedProcessingTime.Unmarshal(m, b)
}
func (m *Trigger_AfterSynchronizedProcessingTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_AfterSynchronizedProcessingTime.Marshal(b, m, deterministic)
}
func (dst *Trigger_AfterSynchronizedProcessingTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_AfterSynchronizedProcessingTime.Merge(dst, src)
}
func (m *Trigger_AfterSynchronizedProcessingTime) XXX_Size() int {
	return xxx_messageInfo_Trigger_AfterSynchronizedProcessingTime.Size(m)
}
func (m *Trigger_AfterSynchronizedProcessingTime) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_AfterSynchronizedProcessingTime.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_AfterSynchronizedProcessingTime proto.InternalMessageInfo

// The default trigger. Equivalent to Repeat { AfterEndOfWindow } but
// specially denoted to indicate the user did not alter the triggering.
type Trigger_Default struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_Default) Reset()         { *m = Trigger_Default{} }
func (m *Trigger_Default) String() string { return proto.CompactTextString(m) }
func (*Trigger_Default) ProtoMessage()    {}
func (*Trigger_Default) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 6}
}
func (m *Trigger_Default) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Default.Unmarshal(m, b)
}
func (m *Trigger_Default) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Default.Marshal(b, m, deterministic)
}
func (dst *Trigger_Default) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Default.Merge(dst, src)
}
func (m *Trigger_Default) XXX_Size() int {
	return xxx_messageInfo_Trigger_Default.Size(m)
}
func (m *Trigger_Default) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Default.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Default proto.InternalMessageInfo

// Ready whenever the requisite number of input elements have arrived
type Trigger_ElementCount struct {
	ElementCount         int32    `protobuf:"varint,1,opt,name=element_count,json=elementCount,proto3" json:"element_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_ElementCount) Reset()         { *m = Trigger_ElementCount{} }
func (m *Trigger_ElementCount) String() string { return proto.CompactTextString(m) }
func (*Trigger_ElementCount) ProtoMessage()    {}
func (*Trigger_ElementCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 7}
}
func (m *Trigger_ElementCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_ElementCount.Unmarshal(m, b)
}
func (m *Trigger_ElementCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_ElementCount.Marshal(b, m, deterministic)
}
func (dst *Trigger_ElementCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_ElementCount.Merge(dst, src)
}
func (m *Trigger_ElementCount) XXX_Size() int {
	return xxx_messageInfo_Trigger_ElementCount.Size(m)
}
func (m *Trigger_ElementCount) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_ElementCount.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_ElementCount proto.InternalMessageInfo

func (m *Trigger_ElementCount) GetElementCount() int32 {
	if m != nil {
		return m.ElementCount
	}
	return 0
}

// Never ready. There will only be an ON_TIME output and a final
// output at window expiration.
type Trigger_Never struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_Never) Reset()         { *m = Trigger_Never{} }
func (m *Trigger_Never) String() string { return proto.CompactTextString(m) }
func (*Trigger_Never) ProtoMessage()    {}
func (*Trigger_Never) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 8}
}
func (m *Trigger_Never) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Never.Unmarshal(m, b)
}
func (m *Trigger_Never) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Never.Marshal(b, m, deterministic)
}
func (dst *Trigger_Never) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Never.Merge(dst, src)
}
func (m *Trigger_Never) XXX_Size() int {
	return xxx_messageInfo_Trigger_Never.Size(m)
}
func (m *Trigger_Never) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Never.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Never proto.InternalMessageInfo

// Always ready. This can also be expressed as ElementCount(1) but
// is more explicit.
type Trigger_Always struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_Always) Reset()         { *m = Trigger_Always{} }
func (m *Trigger_Always) String() string { return proto.CompactTextString(m) }
func (*Trigger_Always) ProtoMessage()    {}
func (*Trigger_Always) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 9}
}
func (m *Trigger_Always) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Always.Unmarshal(m, b)
}
func (m *Trigger_Always) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Always.Marshal(b, m, deterministic)
}
func (dst *Trigger_Always) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Always.Merge(dst, src)
}
func (m *Trigger_Always) XXX_Size() int {
	return xxx_messageInfo_Trigger_Always.Size(m)
}
func (m *Trigger_Always) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Always.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Always proto.InternalMessageInfo

// Ready whenever either of its subtriggers are ready, but finishes output
// when the finally subtrigger fires.
type Trigger_OrFinally struct {
	// (Required) Trigger governing main output; may fire repeatedly.
	Main *Trigger `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	// (Required) Trigger governing termination of output.
	Finally              *Trigger `protobuf:"bytes,2,opt,name=finally,proto3" json:"finally,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_OrFinally) Reset()         { *m = Trigger_OrFinally{} }
func (m *Trigger_OrFinally) String() string { return proto.CompactTextString(m) }
func (*Trigger_OrFinally) ProtoMessage()    {}
func (*Trigger_OrFinally) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 10}
}
func (m *Trigger_OrFinally) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_OrFinally.Unmarshal(m, b)
}
func (m *Trigger_OrFinally) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_OrFinally.Marshal(b, m, deterministic)
}
func (dst *Trigger_OrFinally) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_OrFinally.Merge(dst, src)
}
func (m *Trigger_OrFinally) XXX_Size() int {
	return xxx_messageInfo_Trigger_OrFinally.Size(m)
}
func (m *Trigger_OrFinally) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_OrFinally.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_OrFinally proto.InternalMessageInfo

func (m *Trigger_OrFinally) GetMain() *Trigger {
	if m != nil {
		return m.Main
	}
	return nil
}

func (m *Trigger_OrFinally) GetFinally() *Trigger {
	if m != nil {
		return m.Finally
	}
	return nil
}

// Ready whenever the subtrigger is ready; resets state when the subtrigger
// completes.
type Trigger_Repeat struct {
	// (Require) Trigger that is run repeatedly.
	Subtrigger           *Trigger `protobuf:"bytes,1,opt,name=subtrigger,proto3" json:"subtrigger,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_Repeat) Reset()         { *m = Trigger_Repeat{} }
func (m *Trigger_Repeat) String() string { return proto.CompactTextString(m) }
func (*Trigger_Repeat) ProtoMessage()    {}
func (*Trigger_Repeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{32, 11}
}
func (m *Trigger_Repeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Repeat.Unmarshal(m, b)
}
func (m *Trigger_Repeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Repeat.Marshal(b, m, deterministic)
}
func (dst *Trigger_Repeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Repeat.Merge(dst, src)
}
func (m *Trigger_Repeat) XXX_Size() int {
	return xxx_messageInfo_Trigger_Repeat.Size(m)
}
func (m *Trigger_Repeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Repeat.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Repeat proto.InternalMessageInfo

func (m *Trigger_Repeat) GetSubtrigger() *Trigger {
	if m != nil {
		return m.Subtrigger
	}
	return nil
}

// A specification for a transformation on a timestamp.
//
// Primarily used by AfterProcessingTime triggers to transform
// the arrival time of input to a target time for firing.
type TimestampTransform struct {
	// Types that are valid to be assigned to TimestampTransform:
	//	*TimestampTransform_Delay_
	//	*TimestampTransform_AlignTo_
	TimestampTransform   isTimestampTransform_TimestampTransform `protobuf_oneof:"timestamp_transform"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *TimestampTransform) Reset()         { *m = TimestampTransform{} }
func (m *TimestampTransform) String() string { return proto.CompactTextString(m) }
func (*TimestampTransform) ProtoMessage()    {}
func (*TimestampTransform) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{33}
}
func (m *TimestampTransform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampTransform.Unmarshal(m, b)
}
func (m *TimestampTransform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampTransform.Marshal(b, m, deterministic)
}
func (dst *TimestampTransform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampTransform.Merge(dst, src)
}
func (m *TimestampTransform) XXX_Size() int {
	return xxx_messageInfo_TimestampTransform.Size(m)
}
func (m *TimestampTransform) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampTransform.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampTransform proto.InternalMessageInfo

type isTimestampTransform_TimestampTransform interface {
	isTimestampTransform_TimestampTransform()
}

type TimestampTransform_Delay_ struct {
	Delay *TimestampTransform_Delay `protobuf:"bytes,1,opt,name=delay,proto3,oneof"`
}
type TimestampTransform_AlignTo_ struct {
	AlignTo *TimestampTransform_AlignTo `protobuf:"bytes,2,opt,name=align_to,json=alignTo,proto3,oneof"`
}

func (*TimestampTransform_Delay_) isTimestampTransform_TimestampTransform()   {}
func (*TimestampTransform_AlignTo_) isTimestampTransform_TimestampTransform() {}

func (m *TimestampTransform) GetTimestampTransform() isTimestampTransform_TimestampTransform {
	if m != nil {
		return m.TimestampTransform
	}
	return nil
}

func (m *TimestampTransform) GetDelay() *TimestampTransform_Delay {
	if x, ok := m.GetTimestampTransform().(*TimestampTransform_Delay_); ok {
		return x.Delay
	}
	return nil
}

func (m *TimestampTransform) GetAlignTo() *TimestampTransform_AlignTo {
	if x, ok := m.GetTimestampTransform().(*TimestampTransform_AlignTo_); ok {
		return x.AlignTo
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TimestampTransform) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TimestampTransform_OneofMarshaler, _TimestampTransform_OneofUnmarshaler, _TimestampTransform_OneofSizer, []interface{}{
		(*TimestampTransform_Delay_)(nil),
		(*TimestampTransform_AlignTo_)(nil),
	}
}

func _TimestampTransform_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TimestampTransform)
	// timestamp_transform
	switch x := m.TimestampTransform.(type) {
	case *TimestampTransform_Delay_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delay); err != nil {
			return err
		}
	case *TimestampTransform_AlignTo_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AlignTo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TimestampTransform.TimestampTransform has unexpected type %T", x)
	}
	return nil
}

func _TimestampTransform_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TimestampTransform)
	switch tag {
	case 1: // timestamp_transform.delay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TimestampTransform_Delay)
		err := b.DecodeMessage(msg)
		m.TimestampTransform = &TimestampTransform_Delay_{msg}
		return true, err
	case 2: // timestamp_transform.align_to
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TimestampTransform_AlignTo)
		err := b.DecodeMessage(msg)
		m.TimestampTransform = &TimestampTransform_AlignTo_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TimestampTransform_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TimestampTransform)
	// timestamp_transform
	switch x := m.TimestampTransform.(type) {
	case *TimestampTransform_Delay_:
		s := proto.Size(x.Delay)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TimestampTransform_AlignTo_:
		s := proto.Size(x.AlignTo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TimestampTransform_Delay struct {
	// (Required) The delay, in milliseconds.
	DelayMillis          int64    `protobuf:"varint,1,opt,name=delay_millis,json=delayMillis,proto3" json:"delay_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimestampTransform_Delay) Reset()         { *m = TimestampTransform_Delay{} }
func (m *TimestampTransform_Delay) String() string { return proto.CompactTextString(m) }
func (*TimestampTransform_Delay) ProtoMessage()    {}
func (*TimestampTransform_Delay) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{33, 0}
}
func (m *TimestampTransform_Delay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampTransform_Delay.Unmarshal(m, b)
}
func (m *TimestampTransform_Delay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampTransform_Delay.Marshal(b, m, deterministic)
}
func (dst *TimestampTransform_Delay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampTransform_Delay.Merge(dst, src)
}
func (m *TimestampTransform_Delay) XXX_Size() int {
	return xxx_messageInfo_TimestampTransform_Delay.Size(m)
}
func (m *TimestampTransform_Delay) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampTransform_Delay.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampTransform_Delay proto.InternalMessageInfo

func (m *TimestampTransform_Delay) GetDelayMillis() int64 {
	if m != nil {
		return m.DelayMillis
	}
	return 0
}

type TimestampTransform_AlignTo struct {
	// (Required) A duration to which delays should be quantized
	// in milliseconds.
	Period int64 `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	// (Required) An offset from 0 for the quantization specified by
	// alignment_size, in milliseconds
	Offset               int64    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimestampTransform_AlignTo) Reset()         { *m = TimestampTransform_AlignTo{} }
func (m *TimestampTransform_AlignTo) String() string { return proto.CompactTextString(m) }
func (*TimestampTransform_AlignTo) ProtoMessage()    {}
func (*TimestampTransform_AlignTo) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{33, 1}
}
func (m *TimestampTransform_AlignTo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampTransform_AlignTo.Unmarshal(m, b)
}
func (m *TimestampTransform_AlignTo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampTransform_AlignTo.Marshal(b, m, deterministic)
}
func (dst *TimestampTransform_AlignTo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampTransform_AlignTo.Merge(dst, src)
}
func (m *TimestampTransform_AlignTo) XXX_Size() int {
	return xxx_messageInfo_TimestampTransform_AlignTo.Size(m)
}
func (m *TimestampTransform_AlignTo) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampTransform_AlignTo.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampTransform_AlignTo proto.InternalMessageInfo

func (m *TimestampTransform_AlignTo) GetPeriod() int64 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *TimestampTransform_AlignTo) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// A specification for how to "side input" a PCollection.
type SideInput struct {
	// (Required) URN of the access pattern required by the `view_fn` to present
	// the desired SDK-specific interface to a UDF.
	//
	// This access pattern defines the SDK harness <-> Runner Harness RPC
	// interface for accessing a side input.
	//
	// The only access pattern intended for Beam, because of its superior
	// performance possibilities, is "beam:sideinput:multimap" (or some such
	// URN)
	AccessPattern *FunctionSpec `protobuf:"bytes,1,opt,name=access_pattern,json=accessPattern,proto3" json:"access_pattern,omitempty"`
	// (Required) The SdkFunctionSpec of the UDF that adapts a particular
	// access_pattern to a user-facing view type.
	//
	// For example, View.asSingleton() may include a `view_fn` that adapts a
	// specially-designed multimap to a single value per window.
	ViewFn *SdkFunctionSpec `protobuf:"bytes,2,opt,name=view_fn,json=viewFn,proto3" json:"view_fn,omitempty"`
	// (Required) The SdkFunctionSpec of the UDF that maps a main input window
	// to a side input window.
	//
	// For example, when the main input is in fixed windows of one hour, this
	// can specify that the side input should be accessed according to the day
	// in which that hour falls.
	WindowMappingFn      *SdkFunctionSpec `protobuf:"bytes,3,opt,name=window_mapping_fn,json=windowMappingFn,proto3" json:"window_mapping_fn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SideInput) Reset()         { *m = SideInput{} }
func (m *SideInput) String() string { return proto.CompactTextString(m) }
func (*SideInput) ProtoMessage()    {}
func (*SideInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{34}
}
func (m *SideInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SideInput.Unmarshal(m, b)
}
func (m *SideInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SideInput.Marshal(b, m, deterministic)
}
func (dst *SideInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SideInput.Merge(dst, src)
}
func (m *SideInput) XXX_Size() int {
	return xxx_messageInfo_SideInput.Size(m)
}
func (m *SideInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SideInput.DiscardUnknown(m)
}

var xxx_messageInfo_SideInput proto.InternalMessageInfo

func (m *SideInput) GetAccessPattern() *FunctionSpec {
	if m != nil {
		return m.AccessPattern
	}
	return nil
}

func (m *SideInput) GetViewFn() *SdkFunctionSpec {
	if m != nil {
		return m.ViewFn
	}
	return nil
}

func (m *SideInput) GetWindowMappingFn() *SdkFunctionSpec {
	if m != nil {
		return m.WindowMappingFn
	}
	return nil
}

// An environment for executing UDFs. By default, an SDK container URL, but
// can also be a process forked by a command, or an externally managed process.
type Environment struct {
	// (Required) The URN of the payload
	Urn string `protobuf:"bytes,2,opt,name=urn,proto3" json:"urn,omitempty"`
	// (Optional) The data specifying any parameters to the URN. If
	// the URN does not require any arguments, this may be omitted.
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Environment) Reset()         { *m = Environment{} }
func (m *Environment) String() string { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()    {}
func (*Environment) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{35}
}
func (m *Environment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Environment.Unmarshal(m, b)
}
func (m *Environment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Environment.Marshal(b, m, deterministic)
}
func (dst *Environment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Environment.Merge(dst, src)
}
func (m *Environment) XXX_Size() int {
	return xxx_messageInfo_Environment.Size(m)
}
func (m *Environment) XXX_DiscardUnknown() {
	xxx_messageInfo_Environment.DiscardUnknown(m)
}

var xxx_messageInfo_Environment proto.InternalMessageInfo

func (m *Environment) GetUrn() string {
	if m != nil {
		return m.Urn
	}
	return ""
}

func (m *Environment) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type StandardEnvironments struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardEnvironments) Reset()         { *m = StandardEnvironments{} }
func (m *StandardEnvironments) String() string { return proto.CompactTextString(m) }
func (*StandardEnvironments) ProtoMessage()    {}
func (*StandardEnvironments) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{36}
}
func (m *StandardEnvironments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardEnvironments.Unmarshal(m, b)
}
func (m *StandardEnvironments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardEnvironments.Marshal(b, m, deterministic)
}
func (dst *StandardEnvironments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardEnvironments.Merge(dst, src)
}
func (m *StandardEnvironments) XXX_Size() int {
	return xxx_messageInfo_StandardEnvironments.Size(m)
}
func (m *StandardEnvironments) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardEnvironments.DiscardUnknown(m)
}

var xxx_messageInfo_StandardEnvironments proto.InternalMessageInfo

// The payload of a Docker image
type DockerPayload struct {
	ContainerImage       string   `protobuf:"bytes,1,opt,name=container_image,json=containerImage,proto3" json:"container_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerPayload) Reset()         { *m = DockerPayload{} }
func (m *DockerPayload) String() string { return proto.CompactTextString(m) }
func (*DockerPayload) ProtoMessage()    {}
func (*DockerPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{37}
}
func (m *DockerPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerPayload.Unmarshal(m, b)
}
func (m *DockerPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerPayload.Marshal(b, m, deterministic)
}
func (dst *DockerPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerPayload.Merge(dst, src)
}
func (m *DockerPayload) XXX_Size() int {
	return xxx_messageInfo_DockerPayload.Size(m)
}
func (m *DockerPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerPayload.DiscardUnknown(m)
}

var xxx_messageInfo_DockerPayload proto.InternalMessageInfo

func (m *DockerPayload) GetContainerImage() string {
	if m != nil {
		return m.ContainerImage
	}
	return ""
}

type ProcessPayload struct {
	Os                   string            `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Arch                 string            `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`
	Command              string            `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Env                  map[string]string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProcessPayload) Reset()         { *m = ProcessPayload{} }
func (m *ProcessPayload) String() string { return proto.CompactTextString(m) }
func (*ProcessPayload) ProtoMessage()    {}
func (*ProcessPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{38}
}
func (m *ProcessPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessPayload.Unmarshal(m, b)
}
func (m *ProcessPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessPayload.Marshal(b, m, deterministic)
}
func (dst *ProcessPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessPayload.Merge(dst, src)
}
func (m *ProcessPayload) XXX_Size() int {
	return xxx_messageInfo_ProcessPayload.Size(m)
}
func (m *ProcessPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessPayload proto.InternalMessageInfo

func (m *ProcessPayload) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *ProcessPayload) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *ProcessPayload) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *ProcessPayload) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

type ExternalPayload struct {
	Endpoint             *ApiServiceDescriptor `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Params               map[string]string     `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ExternalPayload) Reset()         { *m = ExternalPayload{} }
func (m *ExternalPayload) String() string { return proto.CompactTextString(m) }
func (*ExternalPayload) ProtoMessage()    {}
func (*ExternalPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{39}
}
func (m *ExternalPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalPayload.Unmarshal(m, b)
}
func (m *ExternalPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalPayload.Marshal(b, m, deterministic)
}
func (dst *ExternalPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalPayload.Merge(dst, src)
}
func (m *ExternalPayload) XXX_Size() int {
	return xxx_messageInfo_ExternalPayload.Size(m)
}
func (m *ExternalPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalPayload proto.InternalMessageInfo

func (m *ExternalPayload) GetEndpoint() *ApiServiceDescriptor {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *ExternalPayload) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

// A specification of a user defined function.
//
type SdkFunctionSpec struct {
	// (Required) A full specification of this function.
	Spec *FunctionSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// (Required) Reference to an execution environment capable of
	// invoking this function.
	EnvironmentId        string   `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SdkFunctionSpec) Reset()         { *m = SdkFunctionSpec{} }
func (m *SdkFunctionSpec) String() string { return proto.CompactTextString(m) }
func (*SdkFunctionSpec) ProtoMessage()    {}
func (*SdkFunctionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{40}
}
func (m *SdkFunctionSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdkFunctionSpec.Unmarshal(m, b)
}
func (m *SdkFunctionSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdkFunctionSpec.Marshal(b, m, deterministic)
}
func (dst *SdkFunctionSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdkFunctionSpec.Merge(dst, src)
}
func (m *SdkFunctionSpec) XXX_Size() int {
	return xxx_messageInfo_SdkFunctionSpec.Size(m)
}
func (m *SdkFunctionSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SdkFunctionSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SdkFunctionSpec proto.InternalMessageInfo

func (m *SdkFunctionSpec) GetSpec() *FunctionSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *SdkFunctionSpec) GetEnvironmentId() string {
	if m != nil {
		return m.EnvironmentId
	}
	return ""
}

// A URN along with a parameter object whose schema is determined by the
// URN.
//
// This structure is reused in two distinct, but compatible, ways:
//
// 1. This can be a specification of the function over PCollections
//    that a PTransform computes.
// 2. This can be a specification of a user-defined function, possibly
//    SDK-specific. (external to this message must be adequate context
//    to indicate the environment in which the UDF can be understood).
//
// Though not explicit in this proto, there are two possibilities
// for the relationship of a runner to this specification that
// one should bear in mind:
//
// 1. The runner understands the URN. For example, it might be
//    a well-known URN like "beam:transform:Top" or
//    "beam:windowfn:FixedWindows" with
//    an agreed-upon payload (e.g. a number or duration,
//    respectively).
// 2. The runner does not understand the URN. It might be an
//    SDK specific URN such as "beam:dofn:javasdk:1.0"
//    that indicates to the SDK what the payload is,
//    such as a serialized Java DoFn from a particular
//    version of the Beam Java SDK. The payload will often
//    then be an opaque message such as bytes in a
//    language-specific serialization format.
type FunctionSpec struct {
	// (Required) A URN that describes the accompanying payload.
	// For any URN that is not recognized (by whomever is inspecting
	// it) the parameter payload should be treated as opaque and
	// passed as-is.
	Urn string `protobuf:"bytes,1,opt,name=urn,proto3" json:"urn,omitempty"`
	// (Optional) The data specifying any parameters to the URN. If
	// the URN does not require any arguments, this may be omitted.
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FunctionSpec) Reset()         { *m = FunctionSpec{} }
func (m *FunctionSpec) String() string { return proto.CompactTextString(m) }
func (*FunctionSpec) ProtoMessage()    {}
func (*FunctionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{41}
}
func (m *FunctionSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionSpec.Unmarshal(m, b)
}
func (m *FunctionSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionSpec.Marshal(b, m, deterministic)
}
func (dst *FunctionSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionSpec.Merge(dst, src)
}
func (m *FunctionSpec) XXX_Size() int {
	return xxx_messageInfo_FunctionSpec.Size(m)
}
func (m *FunctionSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionSpec.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionSpec proto.InternalMessageInfo

func (m *FunctionSpec) GetUrn() string {
	if m != nil {
		return m.Urn
	}
	return ""
}

func (m *FunctionSpec) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// TODO: transfer javadoc here
type DisplayData struct {
	// (Required) The list of display data.
	Items                []*DisplayData_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DisplayData) Reset()         { *m = DisplayData{} }
func (m *DisplayData) String() string { return proto.CompactTextString(m) }
func (*DisplayData) ProtoMessage()    {}
func (*DisplayData) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{42}
}
func (m *DisplayData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayData.Unmarshal(m, b)
}
func (m *DisplayData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayData.Marshal(b, m, deterministic)
}
func (dst *DisplayData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayData.Merge(dst, src)
}
func (m *DisplayData) XXX_Size() int {
	return xxx_messageInfo_DisplayData.Size(m)
}
func (m *DisplayData) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayData.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayData proto.InternalMessageInfo

func (m *DisplayData) GetItems() []*DisplayData_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

// A complete identifier for a DisplayData.Item
type DisplayData_Identifier struct {
	// (Required) The transform originating this display data.
	TransformId string `protobuf:"bytes,1,opt,name=transform_id,json=transformId,proto3" json:"transform_id,omitempty"`
	// (Optional) The URN indicating the type of the originating transform,
	// if there is one.
	TransformUrn         string   `protobuf:"bytes,2,opt,name=transform_urn,json=transformUrn,proto3" json:"transform_urn,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayData_Identifier) Reset()         { *m = DisplayData_Identifier{} }
func (m *DisplayData_Identifier) String() string { return proto.CompactTextString(m) }
func (*DisplayData_Identifier) ProtoMessage()    {}
func (*DisplayData_Identifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{42, 0}
}
func (m *DisplayData_Identifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayData_Identifier.Unmarshal(m, b)
}
func (m *DisplayData_Identifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayData_Identifier.Marshal(b, m, deterministic)
}
func (dst *DisplayData_Identifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayData_Identifier.Merge(dst, src)
}
func (m *DisplayData_Identifier) XXX_Size() int {
	return xxx_messageInfo_DisplayData_Identifier.Size(m)
}
func (m *DisplayData_Identifier) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayData_Identifier.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayData_Identifier proto.InternalMessageInfo

func (m *DisplayData_Identifier) GetTransformId() string {
	if m != nil {
		return m.TransformId
	}
	return ""
}

func (m *DisplayData_Identifier) GetTransformUrn() string {
	if m != nil {
		return m.TransformUrn
	}
	return ""
}

func (m *DisplayData_Identifier) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// A single item of display data.
type DisplayData_Item struct {
	// (Required)
	Id *DisplayData_Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// (Required)
	Type DisplayData_Type_Enum `protobuf:"varint,2,opt,name=type,proto3,enum=org.apache.beam.model.pipeline.v1.DisplayData_Type_Enum" json:"type,omitempty"`
	// (Required)
	Value *any.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// (Optional)
	ShortValue *any.Any `protobuf:"bytes,4,opt,name=short_value,json=shortValue,proto3" json:"short_value,omitempty"`
	// (Optional)
	Label string `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	// (Optional)
	LinkUrl              string   `protobuf:"bytes,6,opt,name=link_url,json=linkUrl,proto3" json:"link_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayData_Item) Reset()         { *m = DisplayData_Item{} }
func (m *DisplayData_Item) String() string { return proto.CompactTextString(m) }
func (*DisplayData_Item) ProtoMessage()    {}
func (*DisplayData_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{42, 1}
}
func (m *DisplayData_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayData_Item.Unmarshal(m, b)
}
func (m *DisplayData_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayData_Item.Marshal(b, m, deterministic)
}
func (dst *DisplayData_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayData_Item.Merge(dst, src)
}
func (m *DisplayData_Item) XXX_Size() int {
	return xxx_messageInfo_DisplayData_Item.Size(m)
}
func (m *DisplayData_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayData_Item.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayData_Item proto.InternalMessageInfo

func (m *DisplayData_Item) GetId() *DisplayData_Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *DisplayData_Item) GetType() DisplayData_Type_Enum {
	if m != nil {
		return m.Type
	}
	return DisplayData_Type_UNSPECIFIED
}

func (m *DisplayData_Item) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DisplayData_Item) GetShortValue() *any.Any {
	if m != nil {
		return m.ShortValue
	}
	return nil
}

func (m *DisplayData_Item) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *DisplayData_Item) GetLinkUrl() string {
	if m != nil {
		return m.LinkUrl
	}
	return ""
}

type DisplayData_Type struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayData_Type) Reset()         { *m = DisplayData_Type{} }
func (m *DisplayData_Type) String() string { return proto.CompactTextString(m) }
func (*DisplayData_Type) ProtoMessage()    {}
func (*DisplayData_Type) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{42, 2}
}
func (m *DisplayData_Type) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayData_Type.Unmarshal(m, b)
}
func (m *DisplayData_Type) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayData_Type.Marshal(b, m, deterministic)
}
func (dst *DisplayData_Type) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayData_Type.Merge(dst, src)
}
func (m *DisplayData_Type) XXX_Size() int {
	return xxx_messageInfo_DisplayData_Type.Size(m)
}
func (m *DisplayData_Type) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayData_Type.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayData_Type proto.InternalMessageInfo

// A disjoint union of all the things that may contain references
// that require Components to resolve.
type MessageWithComponents struct {
	// (Optional) The by-reference components of the root message,
	// enabling a standalone message.
	//
	// If this is absent, it is expected that there are no
	// references.
	Components *Components `protobuf:"bytes,1,opt,name=components,proto3" json:"components,omitempty"`
	// (Required) The root message that may contain pointers
	// that should be resolved by looking inside components.
	//
	// Types that are valid to be assigned to Root:
	//	*MessageWithComponents_Coder
	//	*MessageWithComponents_CombinePayload
	//	*MessageWithComponents_SdkFunctionSpec
	//	*MessageWithComponents_ParDoPayload
	//	*MessageWithComponents_Ptransform
	//	*MessageWithComponents_Pcollection
	//	*MessageWithComponents_ReadPayload
	//	*MessageWithComponents_SideInput
	//	*MessageWithComponents_WindowIntoPayload
	//	*MessageWithComponents_WindowingStrategy
	//	*MessageWithComponents_FunctionSpec
	Root                 isMessageWithComponents_Root `protobuf_oneof:"root"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *MessageWithComponents) Reset()         { *m = MessageWithComponents{} }
func (m *MessageWithComponents) String() string { return proto.CompactTextString(m) }
func (*MessageWithComponents) ProtoMessage()    {}
func (*MessageWithComponents) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{43}
}
func (m *MessageWithComponents) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWithComponents.Unmarshal(m, b)
}
func (m *MessageWithComponents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWithComponents.Marshal(b, m, deterministic)
}
func (dst *MessageWithComponents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWithComponents.Merge(dst, src)
}
func (m *MessageWithComponents) XXX_Size() int {
	return xxx_messageInfo_MessageWithComponents.Size(m)
}
func (m *MessageWithComponents) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWithComponents.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWithComponents proto.InternalMessageInfo

type isMessageWithComponents_Root interface {
	isMessageWithComponents_Root()
}

type MessageWithComponents_Coder struct {
	Coder *Coder `protobuf:"bytes,2,opt,name=coder,proto3,oneof"`
}
type MessageWithComponents_CombinePayload struct {
	CombinePayload *CombinePayload `protobuf:"bytes,3,opt,name=combine_payload,json=combinePayload,proto3,oneof"`
}
type MessageWithComponents_SdkFunctionSpec struct {
	SdkFunctionSpec *SdkFunctionSpec `protobuf:"bytes,4,opt,name=sdk_function_spec,json=sdkFunctionSpec,proto3,oneof"`
}
type MessageWithComponents_ParDoPayload struct {
	ParDoPayload *ParDoPayload `protobuf:"bytes,6,opt,name=par_do_payload,json=parDoPayload,proto3,oneof"`
}
type MessageWithComponents_Ptransform struct {
	Ptransform *PTransform `protobuf:"bytes,7,opt,name=ptransform,proto3,oneof"`
}
type MessageWithComponents_Pcollection struct {
	Pcollection *PCollection `protobuf:"bytes,8,opt,name=pcollection,proto3,oneof"`
}
type MessageWithComponents_ReadPayload struct {
	ReadPayload *ReadPayload `protobuf:"bytes,9,opt,name=read_payload,json=readPayload,proto3,oneof"`
}
type MessageWithComponents_SideInput struct {
	SideInput *SideInput `protobuf:"bytes,11,opt,name=side_input,json=sideInput,proto3,oneof"`
}
type MessageWithComponents_WindowIntoPayload struct {
	WindowIntoPayload *WindowIntoPayload `protobuf:"bytes,12,opt,name=window_into_payload,json=windowIntoPayload,proto3,oneof"`
}
type MessageWithComponents_WindowingStrategy struct {
	WindowingStrategy *WindowingStrategy `protobuf:"bytes,13,opt,name=windowing_strategy,json=windowingStrategy,proto3,oneof"`
}
type MessageWithComponents_FunctionSpec struct {
	FunctionSpec *FunctionSpec `protobuf:"bytes,14,opt,name=function_spec,json=functionSpec,proto3,oneof"`
}

func (*MessageWithComponents_Coder) isMessageWithComponents_Root()             {}
func (*MessageWithComponents_CombinePayload) isMessageWithComponents_Root()    {}
func (*MessageWithComponents_SdkFunctionSpec) isMessageWithComponents_Root()   {}
func (*MessageWithComponents_ParDoPayload) isMessageWithComponents_Root()      {}
func (*MessageWithComponents_Ptransform) isMessageWithComponents_Root()        {}
func (*MessageWithComponents_Pcollection) isMessageWithComponents_Root()       {}
func (*MessageWithComponents_ReadPayload) isMessageWithComponents_Root()       {}
func (*MessageWithComponents_SideInput) isMessageWithComponents_Root()         {}
func (*MessageWithComponents_WindowIntoPayload) isMessageWithComponents_Root() {}
func (*MessageWithComponents_WindowingStrategy) isMessageWithComponents_Root() {}
func (*MessageWithComponents_FunctionSpec) isMessageWithComponents_Root()      {}

func (m *MessageWithComponents) GetRoot() isMessageWithComponents_Root {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *MessageWithComponents) GetComponents() *Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *MessageWithComponents) GetCoder() *Coder {
	if x, ok := m.GetRoot().(*MessageWithComponents_Coder); ok {
		return x.Coder
	}
	return nil
}

func (m *MessageWithComponents) GetCombinePayload() *CombinePayload {
	if x, ok := m.GetRoot().(*MessageWithComponents_CombinePayload); ok {
		return x.CombinePayload
	}
	return nil
}

func (m *MessageWithComponents) GetSdkFunctionSpec() *SdkFunctionSpec {
	if x, ok := m.GetRoot().(*MessageWithComponents_SdkFunctionSpec); ok {
		return x.SdkFunctionSpec
	}
	return nil
}

func (m *MessageWithComponents) GetParDoPayload() *ParDoPayload {
	if x, ok := m.GetRoot().(*MessageWithComponents_ParDoPayload); ok {
		return x.ParDoPayload
	}
	return nil
}

func (m *MessageWithComponents) GetPtransform() *PTransform {
	if x, ok := m.GetRoot().(*MessageWithComponents_Ptransform); ok {
		return x.Ptransform
	}
	return nil
}

func (m *MessageWithComponents) GetPcollection() *PCollection {
	if x, ok := m.GetRoot().(*MessageWithComponents_Pcollection); ok {
		return x.Pcollection
	}
	return nil
}

func (m *MessageWithComponents) GetReadPayload() *ReadPayload {
	if x, ok := m.GetRoot().(*MessageWithComponents_ReadPayload); ok {
		return x.ReadPayload
	}
	return nil
}

func (m *MessageWithComponents) GetSideInput() *SideInput {
	if x, ok := m.GetRoot().(*MessageWithComponents_SideInput); ok {
		return x.SideInput
	}
	return nil
}

func (m *MessageWithComponents) GetWindowIntoPayload() *WindowIntoPayload {
	if x, ok := m.GetRoot().(*MessageWithComponents_WindowIntoPayload); ok {
		return x.WindowIntoPayload
	}
	return nil
}

func (m *MessageWithComponents) GetWindowingStrategy() *WindowingStrategy {
	if x, ok := m.GetRoot().(*MessageWithComponents_WindowingStrategy); ok {
		return x.WindowingStrategy
	}
	return nil
}

func (m *MessageWithComponents) GetFunctionSpec() *FunctionSpec {
	if x, ok := m.GetRoot().(*MessageWithComponents_FunctionSpec); ok {
		return x.FunctionSpec
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MessageWithComponents) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MessageWithComponents_OneofMarshaler, _MessageWithComponents_OneofUnmarshaler, _MessageWithComponents_OneofSizer, []interface{}{
		(*MessageWithComponents_Coder)(nil),
		(*MessageWithComponents_CombinePayload)(nil),
		(*MessageWithComponents_SdkFunctionSpec)(nil),
		(*MessageWithComponents_ParDoPayload)(nil),
		(*MessageWithComponents_Ptransform)(nil),
		(*MessageWithComponents_Pcollection)(nil),
		(*MessageWithComponents_ReadPayload)(nil),
		(*MessageWithComponents_SideInput)(nil),
		(*MessageWithComponents_WindowIntoPayload)(nil),
		(*MessageWithComponents_WindowingStrategy)(nil),
		(*MessageWithComponents_FunctionSpec)(nil),
	}
}

func _MessageWithComponents_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MessageWithComponents)
	// root
	switch x := m.Root.(type) {
	case *MessageWithComponents_Coder:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Coder); err != nil {
			return err
		}
	case *MessageWithComponents_CombinePayload:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CombinePayload); err != nil {
			return err
		}
	case *MessageWithComponents_SdkFunctionSpec:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SdkFunctionSpec); err != nil {
			return err
		}
	case *MessageWithComponents_ParDoPayload:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ParDoPayload); err != nil {
			return err
		}
	case *MessageWithComponents_Ptransform:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ptransform); err != nil {
			return err
		}
	case *MessageWithComponents_Pcollection:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pcollection); err != nil {
			return err
		}
	case *MessageWithComponents_ReadPayload:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReadPayload); err != nil {
			return err
		}
	case *MessageWithComponents_SideInput:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SideInput); err != nil {
			return err
		}
	case *MessageWithComponents_WindowIntoPayload:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WindowIntoPayload); err != nil {
			return err
		}
	case *MessageWithComponents_WindowingStrategy:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WindowingStrategy); err != nil {
			return err
		}
	case *MessageWithComponents_FunctionSpec:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FunctionSpec); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MessageWithComponents.Root has unexpected type %T", x)
	}
	return nil
}

func _MessageWithComponents_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MessageWithComponents)
	switch tag {
	case 2: // root.coder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Coder)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_Coder{msg}
		return true, err
	case 3: // root.combine_payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CombinePayload)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_CombinePayload{msg}
		return true, err
	case 4: // root.sdk_function_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SdkFunctionSpec)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_SdkFunctionSpec{msg}
		return true, err
	case 6: // root.par_do_payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ParDoPayload)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_ParDoPayload{msg}
		return true, err
	case 7: // root.ptransform
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PTransform)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_Ptransform{msg}
		return true, err
	case 8: // root.pcollection
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PCollection)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_Pcollection{msg}
		return true, err
	case 9: // root.read_payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReadPayload)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_ReadPayload{msg}
		return true, err
	case 11: // root.side_input
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SideInput)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_SideInput{msg}
		return true, err
	case 12: // root.window_into_payload
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WindowIntoPayload)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_WindowIntoPayload{msg}
		return true, err
	case 13: // root.windowing_strategy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WindowingStrategy)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_WindowingStrategy{msg}
		return true, err
	case 14: // root.function_spec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FunctionSpec)
		err := b.DecodeMessage(msg)
		m.Root = &MessageWithComponents_FunctionSpec{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MessageWithComponents_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MessageWithComponents)
	// root
	switch x := m.Root.(type) {
	case *MessageWithComponents_Coder:
		s := proto.Size(x.Coder)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_CombinePayload:
		s := proto.Size(x.CombinePayload)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_SdkFunctionSpec:
		s := proto.Size(x.SdkFunctionSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_ParDoPayload:
		s := proto.Size(x.ParDoPayload)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_Ptransform:
		s := proto.Size(x.Ptransform)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_Pcollection:
		s := proto.Size(x.Pcollection)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_ReadPayload:
		s := proto.Size(x.ReadPayload)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_SideInput:
		s := proto.Size(x.SideInput)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_WindowIntoPayload:
		s := proto.Size(x.WindowIntoPayload)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_WindowingStrategy:
		s := proto.Size(x.WindowingStrategy)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MessageWithComponents_FunctionSpec:
		s := proto.Size(x.FunctionSpec)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The payload for an executable stage. This will eventually be passed to an SDK in the form of a
// ProcessBundleDescriptor.
type ExecutableStagePayload struct {
	// (Required) Environment in which this stage executes.
	//
	// We use an environment rather than environment id
	// because ExecutableStages use environments directly. This may change in the future.
	Environment *Environment `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
	// (Required) Input PCollection id. This must be present as a value in the inputs of any
	// PTransform the ExecutableStagePayload is the payload of.
	Input string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	// The side inputs required for this executable stage. Each side input of each PTransform within
	// this ExecutableStagePayload must be represented within this field.
	SideInputs []*ExecutableStagePayload_SideInputId `protobuf:"bytes,3,rep,name=side_inputs,json=sideInputs,proto3" json:"side_inputs,omitempty"`
	// PTransform ids contained within this executable stage. This must contain at least one
	// PTransform id.
	Transforms []string `protobuf:"bytes,4,rep,name=transforms,proto3" json:"transforms,omitempty"`
	// Output PCollection ids. This must be equal to the values of the outputs of any
	// PTransform the ExecutableStagePayload is the payload of.
	Outputs []string `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// (Required) The components for the Executable Stage. This must contain all of the Transforms
	// in transforms, and the closure of all of the components they recognize.
	Components *Components `protobuf:"bytes,6,opt,name=components,proto3" json:"components,omitempty"`
	// The user states required for this executable stage. Each user state of each PTransform within
	// this ExecutableStagePayload must be represented within this field.
	UserStates []*ExecutableStagePayload_UserStateId `protobuf:"bytes,7,rep,name=user_states,json=userStates,proto3" json:"user_states,omitempty"`
	// The timers required for this executable stage. Each timer of each PTransform within
	// this ExecutableStagePayload must be represented within this field.
	Timers               []*ExecutableStagePayload_TimerId `protobuf:"bytes,8,rep,name=timers,proto3" json:"timers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ExecutableStagePayload) Reset()         { *m = ExecutableStagePayload{} }
func (m *ExecutableStagePayload) String() string { return proto.CompactTextString(m) }
func (*ExecutableStagePayload) ProtoMessage()    {}
func (*ExecutableStagePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{44}
}
func (m *ExecutableStagePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutableStagePayload.Unmarshal(m, b)
}
func (m *ExecutableStagePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutableStagePayload.Marshal(b, m, deterministic)
}
func (dst *ExecutableStagePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutableStagePayload.Merge(dst, src)
}
func (m *ExecutableStagePayload) XXX_Size() int {
	return xxx_messageInfo_ExecutableStagePayload.Size(m)
}
func (m *ExecutableStagePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutableStagePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutableStagePayload proto.InternalMessageInfo

func (m *ExecutableStagePayload) GetEnvironment() *Environment {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *ExecutableStagePayload) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *ExecutableStagePayload) GetSideInputs() []*ExecutableStagePayload_SideInputId {
	if m != nil {
		return m.SideInputs
	}
	return nil
}

func (m *ExecutableStagePayload) GetTransforms() []string {
	if m != nil {
		return m.Transforms
	}
	return nil
}

func (m *ExecutableStagePayload) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *ExecutableStagePayload) GetComponents() *Components {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *ExecutableStagePayload) GetUserStates() []*ExecutableStagePayload_UserStateId {
	if m != nil {
		return m.UserStates
	}
	return nil
}

func (m *ExecutableStagePayload) GetTimers() []*ExecutableStagePayload_TimerId {
	if m != nil {
		return m.Timers
	}
	return nil
}

// A reference to a side input. Side inputs are uniquely identified by PTransform id and
// local name.
type ExecutableStagePayload_SideInputId struct {
	// (Required) The id of the PTransform that references this side input.
	TransformId string `protobuf:"bytes,1,opt,name=transform_id,json=transformId,proto3" json:"transform_id,omitempty"`
	// (Required) The local name of this side input from the PTransform that references it.
	LocalName            string   `protobuf:"bytes,2,opt,name=local_name,json=localName,proto3" json:"local_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutableStagePayload_SideInputId) Reset()         { *m = ExecutableStagePayload_SideInputId{} }
func (m *ExecutableStagePayload_SideInputId) String() string { return proto.CompactTextString(m) }
func (*ExecutableStagePayload_SideInputId) ProtoMessage()    {}
func (*ExecutableStagePayload_SideInputId) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{44, 0}
}
func (m *ExecutableStagePayload_SideInputId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutableStagePayload_SideInputId.Unmarshal(m, b)
}
func (m *ExecutableStagePayload_SideInputId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutableStagePayload_SideInputId.Marshal(b, m, deterministic)
}
func (dst *ExecutableStagePayload_SideInputId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutableStagePayload_SideInputId.Merge(dst, src)
}
func (m *ExecutableStagePayload_SideInputId) XXX_Size() int {
	return xxx_messageInfo_ExecutableStagePayload_SideInputId.Size(m)
}
func (m *ExecutableStagePayload_SideInputId) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutableStagePayload_SideInputId.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutableStagePayload_SideInputId proto.InternalMessageInfo

func (m *ExecutableStagePayload_SideInputId) GetTransformId() string {
	if m != nil {
		return m.TransformId
	}
	return ""
}

func (m *ExecutableStagePayload_SideInputId) GetLocalName() string {
	if m != nil {
		return m.LocalName
	}
	return ""
}

// A reference to user state. User states are uniquely identified by PTransform id and
// local name.
type ExecutableStagePayload_UserStateId struct {
	// (Required) The id of the PTransform that references this user state.
	TransformId string `protobuf:"bytes,1,opt,name=transform_id,json=transformId,proto3" json:"transform_id,omitempty"`
	// (Required) The local name of this user state for the PTransform that references it.
	LocalName            string   `protobuf:"bytes,2,opt,name=local_name,json=localName,proto3" json:"local_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutableStagePayload_UserStateId) Reset()         { *m = ExecutableStagePayload_UserStateId{} }
func (m *ExecutableStagePayload_UserStateId) String() string { return proto.CompactTextString(m) }
func (*ExecutableStagePayload_UserStateId) ProtoMessage()    {}
func (*ExecutableStagePayload_UserStateId) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{44, 1}
}
func (m *ExecutableStagePayload_UserStateId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutableStagePayload_UserStateId.Unmarshal(m, b)
}
func (m *ExecutableStagePayload_UserStateId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutableStagePayload_UserStateId.Marshal(b, m, deterministic)
}
func (dst *ExecutableStagePayload_UserStateId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutableStagePayload_UserStateId.Merge(dst, src)
}
func (m *ExecutableStagePayload_UserStateId) XXX_Size() int {
	return xxx_messageInfo_ExecutableStagePayload_UserStateId.Size(m)
}
func (m *ExecutableStagePayload_UserStateId) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutableStagePayload_UserStateId.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutableStagePayload_UserStateId proto.InternalMessageInfo

func (m *ExecutableStagePayload_UserStateId) GetTransformId() string {
	if m != nil {
		return m.TransformId
	}
	return ""
}

func (m *ExecutableStagePayload_UserStateId) GetLocalName() string {
	if m != nil {
		return m.LocalName
	}
	return ""
}

// A reference to a timer. Timers are uniquely identified by PTransform id and
// local name.
type ExecutableStagePayload_TimerId struct {
	// (Required) The id of the PTransform that references this timer.
	TransformId string `protobuf:"bytes,1,opt,name=transform_id,json=transformId,proto3" json:"transform_id,omitempty"`
	// (Required) The local name of this timer for the PTransform that references it.
	LocalName            string   `protobuf:"bytes,2,opt,name=local_name,json=localName,proto3" json:"local_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutableStagePayload_TimerId) Reset()         { *m = ExecutableStagePayload_TimerId{} }
func (m *ExecutableStagePayload_TimerId) String() string { return proto.CompactTextString(m) }
func (*ExecutableStagePayload_TimerId) ProtoMessage()    {}
func (*ExecutableStagePayload_TimerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_beam_runner_api_38625b9043608c5d, []int{44, 2}
}
func (m *ExecutableStagePayload_TimerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutableStagePayload_TimerId.Unmarshal(m, b)
}
func (m *ExecutableStagePayload_TimerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutableStagePayload_TimerId.Marshal(b, m, deterministic)
}
func (dst *ExecutableStagePayload_TimerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutableStagePayload_TimerId.Merge(dst, src)
}
func (m *ExecutableStagePayload_TimerId) XXX_Size() int {
	return xxx_messageInfo_ExecutableStagePayload_TimerId.Size(m)
}
func (m *ExecutableStagePayload_TimerId) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutableStagePayload_TimerId.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutableStagePayload_TimerId proto.InternalMessageInfo

func (m *ExecutableStagePayload_TimerId) GetTransformId() string {
	if m != nil {
		return m.TransformId
	}
	return ""
}

func (m *ExecutableStagePayload_TimerId) GetLocalName() string {
	if m != nil {
		return m.LocalName
	}
	return ""
}

var E_BeamUrn = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         185324356,
	Name:          "org.apache.beam.model.pipeline.v1.beam_urn",
	Tag:           "bytes,185324356,opt,name=beam_urn,json=beamUrn",
	Filename:      "beam_runner_api.proto",
}

var E_BeamConstant = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         185324357,
	Name:          "org.apache.beam.model.pipeline.v1.beam_constant",
	Tag:           "bytes,185324357,opt,name=beam_constant,json=beamConstant",
	Filename:      "beam_runner_api.proto",
}

func init() {
	proto.RegisterType((*BeamConstants)(nil), "org.apache.beam.model.pipeline.v1.BeamConstants")
	proto.RegisterType((*Components)(nil), "org.apache.beam.model.pipeline.v1.Components")
	proto.RegisterMapType((map[string]*Coder)(nil), "org.apache.beam.model.pipeline.v1.Components.CodersEntry")
	proto.RegisterMapType((map[string]*Environment)(nil), "org.apache.beam.model.pipeline.v1.Components.EnvironmentsEntry")
	proto.RegisterMapType((map[string]*PCollection)(nil), "org.apache.beam.model.pipeline.v1.Components.PcollectionsEntry")
	proto.RegisterMapType((map[string]*PTransform)(nil), "org.apache.beam.model.pipeline.v1.Components.TransformsEntry")
	proto.RegisterMapType((map[string]*WindowingStrategy)(nil), "org.apache.beam.model.pipeline.v1.Components.WindowingStrategiesEntry")
	proto.RegisterType((*Pipeline)(nil), "org.apache.beam.model.pipeline.v1.Pipeline")
	proto.RegisterType((*PTransform)(nil), "org.apache.beam.model.pipeline.v1.PTransform")
	proto.RegisterMapType((map[string]string)(nil), "org.apache.beam.model.pipeline.v1.PTransform.InputsEntry")
	proto.RegisterMapType((map[string]string)(nil), "org.apache.beam.model.pipeline.v1.PTransform.OutputsEntry")
	proto.RegisterType((*StandardPTransforms)(nil), "org.apache.beam.model.pipeline.v1.StandardPTransforms")
	proto.RegisterType((*StandardSideInputTypes)(nil), "org.apache.beam.model.pipeline.v1.StandardSideInputTypes")
	proto.RegisterType((*PCollection)(nil), "org.apache.beam.model.pipeline.v1.PCollection")
	proto.RegisterType((*ParDoPayload)(nil), "org.apache.beam.model.pipeline.v1.ParDoPayload")
	proto.RegisterMapType((map[string]*SideInput)(nil), "org.apache.beam.model.pipeline.v1.ParDoPayload.SideInputsEntry")
	proto.RegisterMapType((map[string]*StateSpec)(nil), "org.apache.beam.model.pipeline.v1.ParDoPayload.StateSpecsEntry")
	proto.RegisterMapType((map[string]*TimerSpec)(nil), "org.apache.beam.model.pipeline.v1.ParDoPayload.TimerSpecsEntry")
	proto.RegisterType((*Parameter)(nil), "org.apache.beam.model.pipeline.v1.Parameter")
	proto.RegisterType((*Parameter_Type)(nil), "org.apache.beam.model.pipeline.v1.Parameter.Type")
	proto.RegisterType((*StateSpec)(nil), "org.apache.beam.model.pipeline.v1.StateSpec")
	proto.RegisterType((*ValueStateSpec)(nil), "org.apache.beam.model.pipeline.v1.ValueStateSpec")
	proto.RegisterType((*BagStateSpec)(nil), "org.apache.beam.model.pipeline.v1.BagStateSpec")
	proto.RegisterType((*CombiningStateSpec)(nil), "org.apache.beam.model.pipeline.v1.CombiningStateSpec")
	proto.RegisterType((*MapStateSpec)(nil), "org.apache.beam.model.pipeline.v1.MapStateSpec")
	proto.RegisterType((*SetStateSpec)(nil), "org.apache.beam.model.pipeline.v1.SetStateSpec")
	proto.RegisterType((*TimerSpec)(nil), "org.apache.beam.model.pipeline.v1.TimerSpec")
	proto.RegisterType((*IsBounded)(nil), "org.apache.beam.model.pipeline.v1.IsBounded")
	proto.RegisterType((*ReadPayload)(nil), "org.apache.beam.model.pipeline.v1.ReadPayload")
	proto.RegisterType((*WindowIntoPayload)(nil), "org.apache.beam.model.pipeline.v1.WindowIntoPayload")
	proto.RegisterType((*CombinePayload)(nil), "org.apache.beam.model.pipeline.v1.CombinePayload")
	proto.RegisterType((*TestStreamPayload)(nil), "org.apache.beam.model.pipeline.v1.TestStreamPayload")
	proto.RegisterType((*TestStreamPayload_Event)(nil), "org.apache.beam.model.pipeline.v1.TestStreamPayload.Event")
	proto.RegisterType((*TestStreamPayload_Event_AdvanceWatermark)(nil), "org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark")
	proto.RegisterType((*TestStreamPayload_Event_AdvanceProcessingTime)(nil), "org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime")
	proto.RegisterType((*TestStreamPayload_Event_AddElements)(nil), "org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements")
	proto.RegisterType((*TestStreamPayload_TimestampedElement)(nil), "org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement")
	proto.RegisterType((*WriteFilesPayload)(nil), "org.apache.beam.model.pipeline.v1.WriteFilesPayload")
	proto.RegisterMapType((map[string]*SideInput)(nil), "org.apache.beam.model.pipeline.v1.WriteFilesPayload.SideInputsEntry")
	proto.RegisterType((*Coder)(nil), "org.apache.beam.model.pipeline.v1.Coder")
	proto.RegisterType((*StandardCoders)(nil), "org.apache.beam.model.pipeline.v1.StandardCoders")
	proto.RegisterType((*Schema)(nil), "org.apache.beam.model.pipeline.v1.Schema")
	proto.RegisterType((*Schema_LogicalType)(nil), "org.apache.beam.model.pipeline.v1.Schema.LogicalType")
	proto.RegisterType((*Schema_MapType)(nil), "org.apache.beam.model.pipeline.v1.Schema.MapType")
	proto.RegisterType((*Schema_FieldType)(nil), "org.apache.beam.model.pipeline.v1.Schema.FieldType")
	proto.RegisterType((*Schema_Field)(nil), "org.apache.beam.model.pipeline.v1.Schema.Field")
	proto.RegisterType((*WindowingStrategy)(nil), "org.apache.beam.model.pipeline.v1.WindowingStrategy")
	proto.RegisterType((*MergeStatus)(nil), "org.apache.beam.model.pipeline.v1.MergeStatus")
	proto.RegisterType((*AccumulationMode)(nil), "org.apache.beam.model.pipeline.v1.AccumulationMode")
	proto.RegisterType((*ClosingBehavior)(nil), "org.apache.beam.model.pipeline.v1.ClosingBehavior")
	proto.RegisterType((*OnTimeBehavior)(nil), "org.apache.beam.model.pipeline.v1.OnTimeBehavior")
	proto.RegisterType((*OutputTime)(nil), "org.apache.beam.model.pipeline.v1.OutputTime")
	proto.RegisterType((*TimeDomain)(nil), "org.apache.beam.model.pipeline.v1.TimeDomain")
	proto.RegisterType((*Trigger)(nil), "org.apache.beam.model.pipeline.v1.Trigger")
	proto.RegisterType((*Trigger_AfterAll)(nil), "org.apache.beam.model.pipeline.v1.Trigger.AfterAll")
	proto.RegisterType((*Trigger_AfterAny)(nil), "org.apache.beam.model.pipeline.v1.Trigger.AfterAny")
	proto.RegisterType((*Trigger_AfterEach)(nil), "org.apache.beam.model.pipeline.v1.Trigger.AfterEach")
	proto.RegisterType((*Trigger_AfterEndOfWindow)(nil), "org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow")
	proto.RegisterType((*Trigger_AfterProcessingTime)(nil), "org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime")
	proto.RegisterType((*Trigger_AfterSynchronizedProcessingTime)(nil), "org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime")
	proto.RegisterType((*Trigger_Default)(nil), "org.apache.beam.model.pipeline.v1.Trigger.Default")
	proto.RegisterType((*Trigger_ElementCount)(nil), "org.apache.beam.model.pipeline.v1.Trigger.ElementCount")
	proto.RegisterType((*Trigger_Never)(nil), "org.apache.beam.model.pipeline.v1.Trigger.Never")
	proto.RegisterType((*Trigger_Always)(nil), "org.apache.beam.model.pipeline.v1.Trigger.Always")
	proto.RegisterType((*Trigger_OrFinally)(nil), "org.apache.beam.model.pipeline.v1.Trigger.OrFinally")
	proto.RegisterType((*Trigger_Repeat)(nil), "org.apache.beam.model.pipeline.v1.Trigger.Repeat")
	proto.RegisterType((*TimestampTransform)(nil), "org.apache.beam.model.pipeline.v1.TimestampTransform")
	proto.RegisterType((*TimestampTransform_Delay)(nil), "org.apache.beam.model.pipeline.v1.TimestampTransform.Delay")
	proto.RegisterType((*TimestampTransform_AlignTo)(nil), "org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo")
	proto.RegisterType((*SideInput)(nil), "org.apache.beam.model.pipeline.v1.SideInput")
	proto.RegisterType((*Environment)(nil), "org.apache.beam.model.pipeline.v1.Environment")
	proto.RegisterType((*StandardEnvironments)(nil), "org.apache.beam.model.pipeline.v1.StandardEnvironments")
	proto.RegisterType((*DockerPayload)(nil), "org.apache.beam.model.pipeline.v1.DockerPayload")
	proto.RegisterType((*ProcessPayload)(nil), "org.apache.beam.model.pipeline.v1.ProcessPayload")
	proto.RegisterMapType((map[string]string)(nil), "org.apache.beam.model.pipeline.v1.ProcessPayload.EnvEntry")
	proto.RegisterType((*ExternalPayload)(nil), "org.apache.beam.model.pipeline.v1.ExternalPayload")
	proto.RegisterMapType((map[string]string)(nil), "org.apache.beam.model.pipeline.v1.ExternalPayload.ParamsEntry")
	proto.RegisterType((*SdkFunctionSpec)(nil), "org.apache.beam.model.pipeline.v1.SdkFunctionSpec")
	proto.RegisterType((*FunctionSpec)(nil), "org.apache.beam.model.pipeline.v1.FunctionSpec")
	proto.RegisterType((*DisplayData)(nil), "org.apache.beam.model.pipeline.v1.DisplayData")
	proto.RegisterType((*DisplayData_Identifier)(nil), "org.apache.beam.model.pipeline.v1.DisplayData.Identifier")
	proto.RegisterType((*DisplayData_Item)(nil), "org.apache.beam.model.pipeline.v1.DisplayData.Item")
	proto.RegisterType((*DisplayData_Type)(nil), "org.apache.beam.model.pipeline.v1.DisplayData.Type")
	proto.RegisterType((*MessageWithComponents)(nil), "org.apache.beam.model.pipeline.v1.MessageWithComponents")
	proto.RegisterType((*ExecutableStagePayload)(nil), "org.apache.beam.model.pipeline.v1.ExecutableStagePayload")
	proto.RegisterType((*ExecutableStagePayload_SideInputId)(nil), "org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId")
	proto.RegisterType((*ExecutableStagePayload_UserStateId)(nil), "org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId")
	proto.RegisterType((*ExecutableStagePayload_TimerId)(nil), "org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId")
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.BeamConstants_Constants", BeamConstants_Constants_name, BeamConstants_Constants_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardPTransforms_Primitives", StandardPTransforms_Primitives_name, StandardPTransforms_Primitives_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardPTransforms_DeprecatedPrimitives", StandardPTransforms_DeprecatedPrimitives_name, StandardPTransforms_DeprecatedPrimitives_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardPTransforms_Composites", StandardPTransforms_Composites_name, StandardPTransforms_Composites_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardPTransforms_CombineComponents", StandardPTransforms_CombineComponents_name, StandardPTransforms_CombineComponents_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardPTransforms_SplittableParDoComponents", StandardPTransforms_SplittableParDoComponents_name, StandardPTransforms_SplittableParDoComponents_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardSideInputTypes_Enum", StandardSideInputTypes_Enum_name, StandardSideInputTypes_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.Parameter_Type_Enum", Parameter_Type_Enum_name, Parameter_Type_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.IsBounded_Enum", IsBounded_Enum_name, IsBounded_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardCoders_Enum", StandardCoders_Enum_name, StandardCoders_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.Schema_TypeName", Schema_TypeName_name, Schema_TypeName_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.MergeStatus_Enum", MergeStatus_Enum_name, MergeStatus_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.AccumulationMode_Enum", AccumulationMode_Enum_name, AccumulationMode_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.ClosingBehavior_Enum", ClosingBehavior_Enum_name, ClosingBehavior_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.OnTimeBehavior_Enum", OnTimeBehavior_Enum_name, OnTimeBehavior_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.OutputTime_Enum", OutputTime_Enum_name, OutputTime_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.TimeDomain_Enum", TimeDomain_Enum_name, TimeDomain_Enum_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.StandardEnvironments_Environments", StandardEnvironments_Environments_name, StandardEnvironments_Environments_value)
	proto.RegisterEnum("org.apache.beam.model.pipeline.v1.DisplayData_Type_Enum", DisplayData_Type_Enum_name, DisplayData_Type_Enum_value)
	proto.RegisterExtension(E_BeamUrn)
	proto.RegisterExtension(E_BeamConstant)
}

func init() {
	proto.RegisterFile("beam_runner_api.proto", fileDescriptor_beam_runner_api_38625b9043608c5d)
}

var fileDescriptor_beam_runner_api_38625b9043608c5d = []byte{
	// 5526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5c, 0x5b, 0x8f, 0x23, 0xc7,
	0x75, 0xe6, 0xfd, 0x72, 0xc8, 0xe1, 0xf4, 0xd6, 0x5e, 0x34, 0x6a, 0xcb, 0xd2, 0xaa, 0x25, 0x4b,
	0x2b, 0x59, 0xa6, 0x76, 0x67, 0x57, 0x7b, 0x19, 0xdb, 0x92, 0x39, 0xc3, 0x9e, 0x9d, 0xde, 0xe5,
	0xcd, 0x4d, 0xce, 0xec, 0xae, 0x6c, 0xab, 0x5d, 0xc3, 0x2e, 0xce, 0x34, 0xa6, 0xd9, 0x4d, 0x77,
	0x37, 0x67, 0x45, 0xc3, 0x46, 0x80, 0x3c, 0x18, 0x01, 0x02, 0x04, 0xc9, 0x43, 0x1e, 0xfc, 0x14,
	0xc0, 0x06, 0x02, 0x24, 0x41, 0xae, 0x76, 0x02, 0x24, 0x8f, 0xb6, 0xf3, 0x0b, 0x12, 0x20, 0x40,
	0x7e, 0x43, 0x5e, 0x92, 0xc0, 0x0f, 0xc9, 0x53, 0x50, 0x97, 0x6e, 0x36, 0x39, 0x33, 0x2b, 0x72,
	0x66, 0x91, 0x37, 0xf6, 0xa9, 0x3a, 0xdf, 0xa9, 0xdb, 0x39, 0x75, 0xce, 0xa9, 0x2a, 0xc2, 0xd5,
	0x7d, 0x82, 0x87, 0x86, 0x37, 0x76, 0x1c, 0xe2, 0x19, 0x78, 0x64, 0x55, 0x47, 0x9e, 0x1b, 0xb8,
	0xe8, 0x4d, 0xd7, 0x3b, 0xa8, 0xe2, 0x11, 0xee, 0x1f, 0x92, 0x2a, 0xad, 0x51, 0x1d, 0xba, 0x26,
	0xb1, 0xab, 0x23, 0x6b, 0x44, 0x6c, 0xcb, 0x21, 0xd5, 0xe3, 0x5b, 0xf2, 0x2a, 0x71, 0xcc, 0x91,
	0x6b, 0x39, 0x81, 0xcf, 0x79, 0xe4, 0x57, 0x0f, 0x5c, 0xf7, 0xc0, 0x26, 0x1f, 0xb2, 0xaf, 0xfd,
	0xf1, 0xe0, 0x43, 0xec, 0x4c, 0x44, 0xd1, 0xf5, 0xf9, 0x22, 0x93, 0xf8, 0x7d, 0xcf, 0x1a, 0x05,
	0xae, 0xc7, 0x6b, 0x28, 0xbf, 0x4a, 0xc2, 0xca, 0x26, 0xc1, 0xc3, 0x2d, 0xd7, 0xf1, 0x03, 0xec,
	0x04, 0xbe, 0xf2, 0x37, 0x49, 0x28, 0x46, 0x5f, 0xe8, 0x16, 0x5c, 0x69, 0x6a, 0x2d, 0xa3, 0xa7,
	0x35, 0xd5, 0x6e, 0xaf, 0xd6, 0xec, 0x18, 0x4d, 0xad, 0xd1, 0xd0, 0xba, 0x52, 0x42, 0x7e, 0xe5,
	0xcf, 0x7f, 0xf9, 0xbf, 0xbf, 0xca, 0x5e, 0xfa, 0xda, 0x83, 0xf5, 0xf5, 0xdb, 0xb7, 0xef, 0xad,
	0xdf, 0xbc, 0x7d, 0xf7, 0xfe, 0x47, 0x77, 0xee, 0xdd, 0xfb, 0x08, 0xdd, 0x84, 0x2b, 0xcd, 0xda,
	0xd3, 0x93, 0x2c, 0x49, 0xf9, 0x1a, 0x63, 0x91, 0x4e, 0x70, 0x7c, 0x0c, 0xca, 0xc3, 0x46, 0x7b,
	0xb3, 0xd6, 0x30, 0x9e, 0x68, 0xad, 0x7a, 0xfb, 0x89, 0x71, 0x2a, 0x7f, 0x6a, 0x96, 0xff, 0xd6,
	0x83, 0x8f, 0x6e, 0xde, 0x61, 0xfc, 0xca, 0x3f, 0x14, 0x00, 0xb6, 0xdc, 0xe1, 0xc8, 0x75, 0x08,
	0x6d, 0xf3, 0xf7, 0x00, 0x02, 0x0f, 0x3b, 0xfe, 0xc0, 0xf5, 0x86, 0xfe, 0x5a, 0xf2, 0x7a, 0xfa,
	0x46, 0x69, 0xfd, 0x9b, 0xd5, 0x2f, 0x1c, 0xd9, 0xea, 0x14, 0xa2, 0xda, 0x8b, 0xf8, 0x55, 0x27,
	0xf0, 0x26, 0x7a, 0x0c, 0x10, 0xf5, 0xa1, 0x3c, 0xea, 0xbb, 0xb6, 0x4d, 0xfa, 0x81, 0xe5, 0x3a,
	0xfe, 0x5a, 0x8a, 0x09, 0xf8, 0x64, 0x39, 0x01, 0x9d, 0x18, 0x02, 0x17, 0x31, 0x03, 0x8a, 0x26,
	0x70, 0xe5, 0xb9, 0xe5, 0x98, 0xee, 0x73, 0xcb, 0x39, 0x30, 0xfc, 0xc0, 0xc3, 0x01, 0x39, 0xb0,
	0x88, 0xbf, 0x96, 0x66, 0xc2, 0xb6, 0x97, 0x13, 0xf6, 0x24, 0x44, 0xea, 0x46, 0x40, 0x5c, 0xe6,
	0xe5, 0xe7, 0x27, 0x4b, 0xd0, 0xb7, 0x21, 0xd7, 0x77, 0x4d, 0xe2, 0xf9, 0x6b, 0x19, 0x26, 0xec,
	0xc1, 0x72, 0xc2, 0xb6, 0x18, 0x2f, 0xc7, 0x17, 0x40, 0x74, 0xc8, 0x88, 0x73, 0x6c, 0x79, 0xae,
	0x33, 0xa4, 0x75, 0xd6, 0xb2, 0xe7, 0x19, 0x32, 0x35, 0x86, 0x20, 0x86, 0x2c, 0x0e, 0x2a, 0xdb,
	0xb0, 0x3a, 0x37, 0x6d, 0x48, 0x82, 0xf4, 0x11, 0x99, 0xac, 0x25, 0xaf, 0x27, 0x6f, 0x14, 0x75,
	0xfa, 0x13, 0x6d, 0x41, 0xf6, 0x18, 0xdb, 0x63, 0xb2, 0x96, 0xba, 0x9e, 0xbc, 0x51, 0x5a, 0xff,
	0xda, 0x02, 0x4d, 0xe8, 0x44, 0xa8, 0x3a, 0xe7, 0xdd, 0x48, 0xdd, 0x4f, 0xca, 0x2e, 0x5c, 0x3a,
	0x31, 0x87, 0xa7, 0xc8, 0xab, 0xcf, 0xca, 0xab, 0x2e, 0x22, 0x6f, 0x2b, 0x82, 0x8d, 0x0b, 0xfc,
	0x11, 0xac, 0x9d, 0x35, 0x8f, 0xa7, 0xc8, 0x7d, 0x34, 0x2b, 0xf7, 0xce, 0x02, 0x72, 0xe7, 0xd1,
	0x27, 0x71, 0xe9, 0x7d, 0x28, 0xc5, 0x26, 0xf6, 0x14, 0x81, 0x1f, 0xcf, 0x0a, 0xbc, 0xb1, 0xd0,
	0xdc, 0x9a, 0xc4, 0x9b, 0x1b, 0xd3, 0x13, 0x93, 0xfc, 0x72, 0xc6, 0x34, 0x06, 0x1b, 0x13, 0xa8,
	0xfc, 0x7b, 0x12, 0x0a, 0x1d, 0x51, 0x0d, 0x35, 0x01, 0xfa, 0xd1, 0x6a, 0x63, 0xf2, 0x16, 0x5b,
	0x1f, 0xd3, 0x25, 0xaa, 0xc7, 0x00, 0xd0, 0x07, 0x80, 0x3c, 0xd7, 0x0d, 0x8c, 0xc8, 0x72, 0x18,
	0x96, 0xc9, 0x8d, 0x45, 0x51, 0x97, 0x68, 0x49, 0xb4, 0xac, 0x34, 0x93, 0x2a, 0x5d, 0xd9, 0xb4,
	0xfc, 0x91, 0x8d, 0x27, 0x86, 0x89, 0x03, 0xbc, 0x96, 0x5e, 0xb8, 0x6b, 0x75, 0xce, 0x56, 0xc7,
	0x01, 0xd6, 0x4b, 0xe6, 0xf4, 0x43, 0xf9, 0xfd, 0x0c, 0xc0, 0x74, 0xed, 0xa2, 0x37, 0xa0, 0x34,
	0x76, 0xac, 0x1f, 0x8c, 0x89, 0xe1, 0xe0, 0x21, 0x59, 0xcb, 0xb2, 0xf1, 0x04, 0x4e, 0x6a, 0xe1,
	0x21, 0x41, 0x5b, 0x90, 0xf1, 0x47, 0xa4, 0x2f, 0x7a, 0xfe, 0xe1, 0x02, 0xa2, 0xb7, 0xc7, 0x0e,
	0x5b, 0xa6, 0xdd, 0x11, 0xe9, 0xeb, 0x8c, 0x19, 0xbd, 0x0d, 0x2b, 0xfe, 0x78, 0x3f, 0x66, 0x7e,
	0x79, 0x87, 0x67, 0x89, 0xd4, 0xc4, 0x58, 0xce, 0x68, 0x1c, 0x84, 0xf6, 0xec, 0xc1, 0x52, 0x6a,
	0x58, 0xd5, 0x18, 0xaf, 0x30, 0x31, 0x1c, 0x08, 0xf5, 0x20, 0xef, 0x8e, 0x03, 0x86, 0xc9, 0xcd,
	0xd6, 0xc6, 0x72, 0x98, 0x6d, 0xce, 0xcc, 0x41, 0x43, 0xa8, 0x13, 0xd3, 0x92, 0xbb, 0xf0, 0xb4,
	0xc8, 0x0f, 0xa0, 0x14, 0x6b, 0xff, 0x29, 0xcb, 0xfb, 0x4a, 0x7c, 0x79, 0x17, 0xe3, 0xfa, 0xb1,
	0x01, 0xe5, 0x78, 0x33, 0x97, 0xe1, 0x55, 0xfe, 0x7e, 0x05, 0x2e, 0x77, 0x03, 0xec, 0x98, 0xd8,
	0x33, 0xa7, 0xdd, 0xf6, 0x95, 0x3f, 0x4b, 0x03, 0x74, 0x3c, 0x6b, 0x68, 0x05, 0xd6, 0x31, 0xf1,
	0xd1, 0x7b, 0x90, 0xeb, 0xd4, 0x74, 0xa3, 0xde, 0x96, 0x12, 0xf2, 0x97, 0x7f, 0x46, 0xb7, 0xdb,
	0x57, 0x68, 0x07, 0x37, 0xa2, 0xc9, 0xdb, 0x18, 0x61, 0xcf, 0x74, 0x37, 0x8e, 0x6f, 0xa1, 0x0f,
	0x20, 0xbf, 0xdd, 0xa8, 0xf5, 0x7a, 0x6a, 0x4b, 0x4a, 0xca, 0x6f, 0xb0, 0xba, 0xaf, 0xce, 0xd5,
	0x1d, 0xd8, 0x38, 0x08, 0x88, 0x43, 0x6b, 0xdf, 0x85, 0xf2, 0x43, 0xbd, 0xbd, 0xdb, 0x31, 0x36,
	0x9f, 0x19, 0x8f, 0xd5, 0x67, 0x52, 0x4a, 0x7e, 0x9b, 0xb1, 0xbc, 0x3e, 0xc7, 0x72, 0xe0, 0xb9,
	0xe3, 0x91, 0xb1, 0x3f, 0x31, 0x8e, 0xc8, 0x44, 0x48, 0xd1, 0x9a, 0x9d, 0xdd, 0x46, 0x57, 0x95,
	0xd2, 0x67, 0x48, 0xb1, 0x86, 0xa3, 0xb1, 0xed, 0x13, 0x5a, 0xfb, 0x1e, 0x54, 0x6a, 0xdd, 0xae,
	0xf6, 0xb0, 0x25, 0x3c, 0x89, 0xae, 0x94, 0x91, 0xdf, 0x62, 0x4c, 0x5f, 0x9e, 0x63, 0xe2, 0x3b,
	0x9f, 0x61, 0x39, 0x01, 0xeb, 0xcc, 0x6d, 0x28, 0xf5, 0xd4, 0x6e, 0xcf, 0xe8, 0xf6, 0x74, 0xb5,
	0xd6, 0x94, 0xb2, 0xb2, 0xc2, 0xb8, 0x5e, 0x9b, 0xe3, 0x0a, 0x88, 0x1f, 0xf8, 0x81, 0x47, 0x89,
	0xc7, 0xb7, 0xd0, 0x1d, 0x28, 0x35, 0x6b, 0x9d, 0x48, 0x54, 0xee, 0x0c, 0x51, 0x43, 0x3c, 0x32,
	0xb8, 0x38, 0x9f, 0x72, 0xdd, 0x87, 0x95, 0xa6, 0xaa, 0x3f, 0x54, 0x23, 0xbe, 0xbc, 0xfc, 0x15,
	0xc6, 0xf7, 0xc6, 0x3c, 0x1f, 0xf1, 0x0e, 0x48, 0x8c, 0x53, 0x09, 0xe0, 0x4a, 0x9d, 0x8c, 0x3c,
	0xd2, 0xc7, 0x01, 0x31, 0x63, 0x93, 0xf6, 0x0e, 0x64, 0x74, 0xb5, 0x56, 0x97, 0x12, 0xf2, 0x6b,
	0x0c, 0xe8, 0xda, 0x1c, 0x90, 0x47, 0xb0, 0x29, 0xda, 0xbb, 0xa5, 0xab, 0xb5, 0x9e, 0x6a, 0xec,
	0x69, 0xea, 0x13, 0x29, 0x79, 0x46, 0x7b, 0xfb, 0x1e, 0xc1, 0x01, 0x31, 0x8e, 0x2d, 0xf2, 0x9c,
	0x4a, 0xfd, 0xaf, 0xa4, 0xf0, 0xae, 0x7c, 0x2b, 0x20, 0x3e, 0xfa, 0x06, 0xac, 0x6e, 0xb5, 0x9b,
	0x9b, 0x5a, 0x4b, 0x35, 0x3a, 0xaa, 0xce, 0xe6, 0x32, 0x21, 0xbf, 0xcb, 0x80, 0xde, 0x9c, 0x07,
	0x72, 0x87, 0xfb, 0x96, 0x43, 0x8c, 0x11, 0xf1, 0xc2, 0xe9, 0xfc, 0x18, 0xa4, 0x90, 0x9b, 0xbb,
	0x7c, 0x8d, 0x67, 0x52, 0x52, 0xbe, 0xc1, 0xd8, 0x95, 0x33, 0xd8, 0x0f, 0x6c, 0x77, 0x1f, 0xdb,
	0x36, 0xe3, 0xbf, 0x09, 0x45, 0x5d, 0xed, 0xee, 0xec, 0x6e, 0x6f, 0x37, 0x54, 0x29, 0x25, 0xbf,
	0xc9, 0x18, 0xbf, 0x74, 0xa2, 0xbf, 0xfe, 0xe1, 0x78, 0x30, 0xb0, 0x89, 0xe8, 0xf4, 0x13, 0x5d,
	0xeb, 0xa9, 0xc6, 0xb6, 0xd6, 0x50, 0xbb, 0x52, 0xfa, 0xac, 0xf5, 0xe0, 0x59, 0x01, 0x31, 0x06,
	0x96, 0x4d, 0xd8, 0x50, 0xff, 0x36, 0x05, 0x97, 0xb6, 0xb8, 0xfc, 0x98, 0x67, 0xa9, 0x83, 0x3c,
	0xd7, 0x77, 0xa3, 0xa3, 0xab, 0x82, 0x24, 0x25, 0xe4, 0x75, 0x06, 0xfd, 0xc1, 0x8b, 0x87, 0xc1,
	0xa0, 0x33, 0xc8, 0x49, 0xb4, 0x7d, 0xfb, 0xa0, 0xcc, 0x63, 0xf2, 0xe5, 0x51, 0xdb, 0xda, 0xda,
	0x6d, 0xee, 0x36, 0x6a, 0xbd, 0xb6, 0x4e, 0x9d, 0xe7, 0x0d, 0x86, 0x7d, 0xe7, 0x0b, 0xb0, 0xf9,
	0x9a, 0xc1, 0xfd, 0xfe, 0x78, 0x38, 0xb6, 0x71, 0xe0, 0x7a, 0x6c, 0xc9, 0x7d, 0x17, 0xde, 0x98,
	0x97, 0xa1, 0x3e, 0xed, 0xe9, 0xb5, 0xad, 0x9e, 0xd1, 0xde, 0xed, 0x75, 0x76, 0x7b, 0xd4, 0xbb,
	0xbe, 0xc7, 0x04, 0xdc, 0xfa, 0x02, 0x01, 0xe4, 0xf3, 0xc0, 0xc3, 0xfd, 0xc0, 0x10, 0x16, 0x92,
	0xa2, 0x3f, 0x82, 0x6b, 0xd1, 0x9c, 0x52, 0x15, 0x57, 0xeb, 0xc6, 0x5e, 0xad, 0xb1, 0xcb, 0x06,
	0xbb, 0xca, 0x40, 0x6f, 0x9c, 0x35, 0xb3, 0x54, 0xd9, 0x89, 0x69, 0x30, 0x33, 0xc5, 0xc6, 0xfd,
	0x0f, 0x32, 0xf0, 0x6a, 0x77, 0x64, 0x5b, 0x41, 0x80, 0xf7, 0x6d, 0xd2, 0xc1, 0x5e, 0xdd, 0x8d,
	0x8d, 0x7f, 0x03, 0xae, 0x76, 0x6a, 0x9a, 0x6e, 0x3c, 0xd1, 0x7a, 0x3b, 0x86, 0xae, 0x76, 0x7b,
	0xba, 0xb6, 0xd5, 0xd3, 0xda, 0x2d, 0x29, 0x21, 0xdf, 0x62, 0x82, 0xbe, 0x3a, 0x27, 0xc8, 0x37,
	0x07, 0xc6, 0x08, 0x5b, 0x9e, 0xf1, 0xdc, 0x0a, 0x0e, 0x0d, 0x8f, 0xf8, 0x81, 0x67, 0xb1, 0x2d,
	0x8b, 0xb6, 0xbb, 0x0e, 0x97, 0xba, 0x9d, 0x86, 0xd6, 0x9b, 0x41, 0x4a, 0xca, 0x5f, 0x63, 0x48,
	0xef, 0x9e, 0x82, 0xe4, 0xd3, 0x86, 0xcd, 0xa3, 0xb4, 0xe0, 0x5a, 0x47, 0x6f, 0x6f, 0xa9, 0xdd,
	0x2e, 0x1d, 0x57, 0xb5, 0x6e, 0xa8, 0x0d, 0xb5, 0xa9, 0xb6, 0xd8, 0x90, 0x9e, 0xbe, 0x1e, 0x58,
	0xa3, 0x3c, 0xb7, 0x4f, 0x7c, 0x9f, 0x0e, 0x29, 0x31, 0x0d, 0x62, 0x13, 0xe6, 0xf1, 0x50, 0xbc,
	0x4d, 0x90, 0x42, 0xbc, 0x08, 0x29, 0x2d, 0x7f, 0xc0, 0x90, 0xde, 0x79, 0x01, 0x52, 0x1c, 0xe3,
	0x29, 0x7c, 0x89, 0xf7, 0xac, 0xd6, 0xaa, 0x1b, 0x5d, 0xed, 0x53, 0x35, 0xde, 0x45, 0x6a, 0x13,
	0x4f, 0x9f, 0xeb, 0x69, 0x1f, 0xb1, 0x63, 0x1a, 0xbe, 0xf5, 0x43, 0x12, 0xef, 0x2c, 0x43, 0x76,
	0xe1, 0xdd, 0xb0, 0x75, 0x14, 0x77, 0xda, 0x5b, 0x26, 0x6a, 0x46, 0x4a, 0x56, 0xde, 0x64, 0x52,
	0xbe, 0xf1, 0x82, 0x46, 0x53, 0x19, 0x51, 0xf7, 0x99, 0xd4, 0x39, 0x81, 0xca, 0xef, 0x26, 0xe1,
	0x5a, 0xb8, 0x6f, 0x75, 0x2d, 0x93, 0xb0, 0xbd, 0xb3, 0x37, 0x19, 0x11, 0x5f, 0x39, 0x84, 0x8c,
	0xea, 0x8c, 0x87, 0xe8, 0x43, 0x28, 0x68, 0x3d, 0x55, 0xaf, 0x6d, 0x36, 0xa8, 0x0e, 0xc6, 0x4d,
	0x82, 0x6f, 0x99, 0xc4, 0x60, 0x0e, 0xc2, 0x86, 0x15, 0x10, 0x8f, 0x2e, 0x29, 0xda, 0x89, 0x0f,
	0xa1, 0xd0, 0xdc, 0x6d, 0xf4, 0xb4, 0x66, 0xad, 0x23, 0x25, 0xcf, 0x62, 0x18, 0x8e, 0xed, 0xc0,
	0x1a, 0xe2, 0x11, 0x6d, 0xc4, 0xcf, 0x52, 0x50, 0x8a, 0xb9, 0xe5, 0xf3, 0xbe, 0x54, 0xf2, 0x84,
	0x2f, 0xf5, 0x2a, 0x14, 0x58, 0xe8, 0x63, 0x58, 0xa6, 0xd8, 0x8a, 0xf3, 0xec, 0x5b, 0x33, 0x51,
	0x07, 0xc0, 0xf2, 0x8d, 0x7d, 0x77, 0xec, 0x98, 0xc4, 0x64, 0x7e, 0x5e, 0x65, 0xfd, 0xd6, 0x02,
	0x0e, 0x85, 0xe6, 0x6f, 0x72, 0x9e, 0x2a, 0xed, 0xb4, 0x5e, 0xb4, 0xc2, 0x6f, 0xb4, 0x0e, 0x57,
	0x4f, 0xc4, 0x8a, 0x13, 0x2a, 0x39, 0xc3, 0x24, 0x9f, 0x08, 0xf2, 0x26, 0x9a, 0x79, 0xc2, 0xb1,
	0xc9, 0x5e, 0xdc, 0xdf, 0xfc, 0x69, 0x1e, 0xca, 0x4c, 0x61, 0x3b, 0x78, 0x62, 0xbb, 0xd8, 0x44,
	0x0f, 0x21, 0x6b, 0xba, 0xc6, 0xc0, 0x11, 0x1e, 0xe5, 0xfa, 0x02, 0xe0, 0x5d, 0xf3, 0x68, 0xd6,
	0xa9, 0x34, 0xdd, 0x6d, 0x07, 0x35, 0x00, 0x46, 0xd8, 0xc3, 0x43, 0x12, 0xd0, 0xa8, 0x94, 0xc7,
	0xdb, 0x1f, 0x2c, 0xe2, 0xde, 0x85, 0x4c, 0x7a, 0x8c, 0x1f, 0x7d, 0x1f, 0x4a, 0xd3, 0x69, 0x0e,
	0x3d, 0xd0, 0x4f, 0x16, 0x83, 0x8b, 0x3a, 0x57, 0x8d, 0xd6, 0x62, 0x98, 0x21, 0xf0, 0x23, 0x02,
	0x93, 0x10, 0xd0, 0x2d, 0x94, 0xba, 0xc4, 0xa1, 0x3f, 0xba, 0xbc, 0x04, 0x0a, 0x41, 0x47, 0x21,
	0x92, 0x10, 0x11, 0xa8, 0x84, 0xc0, 0x1a, 0x12, 0x4f, 0x48, 0xc8, 0x9e, 0x4f, 0x42, 0x8f, 0x42,
	0xc4, 0x25, 0x04, 0x11, 0x01, 0xbd, 0x0e, 0xe0, 0x47, 0x76, 0x98, 0xf9, 0xbd, 0x05, 0x3d, 0x46,
	0x41, 0x37, 0xe1, 0x4a, 0x4c, 0x55, 0x8d, 0x68, 0xb5, 0xe7, 0xd9, 0x9a, 0x43, 0xb1, 0xb2, 0x2d,
	0xb1, 0xf0, 0x6f, 0xc3, 0x55, 0x8f, 0xfc, 0x60, 0x4c, 0x3d, 0x28, 0x63, 0x60, 0x39, 0xd8, 0xb6,
	0x7e, 0x88, 0x69, 0xf9, 0x5a, 0x81, 0x81, 0x5f, 0x09, 0x0b, 0xb7, 0x63, 0x65, 0xf2, 0x11, 0xac,
	0xce, 0x8d, 0xf4, 0x29, 0x5e, 0xef, 0xe6, 0x6c, 0x40, 0xb8, 0xc8, 0xd2, 0x88, 0x40, 0xe3, 0xfe,
	0x35, 0x15, 0x36, 0x3b, 0xe8, 0x2f, 0x49, 0x58, 0x08, 0x3a, 0x27, 0x6c, 0x6e, 0xfc, 0x5f, 0x8e,
	0xb0, 0x08, 0x34, 0xee, 0xfd, 0xff, 0x22, 0x09, 0xc5, 0x48, 0x1b, 0xd0, 0x23, 0xc8, 0x04, 0x93,
	0x11, 0xb7, 0x5b, 0x95, 0xf5, 0xbb, 0xcb, 0x68, 0x52, 0x95, 0x9a, 0x5e, 0x6e, 0x81, 0x18, 0x86,
	0xfc, 0x29, 0x64, 0x28, 0x49, 0xd1, 0x85, 0x31, 0x5e, 0x85, 0xd2, 0x6e, 0xab, 0xdb, 0x51, 0xb7,
	0xb4, 0x6d, 0x4d, 0xad, 0x4b, 0x09, 0x04, 0x90, 0xe3, 0x8e, 0xae, 0x94, 0x44, 0x57, 0x40, 0xea,
	0x68, 0x1d, 0xb5, 0x41, 0x5d, 0x85, 0x76, 0x87, 0x6f, 0x13, 0x29, 0xf4, 0x0a, 0x5c, 0x8e, 0x6d,
	0x1c, 0x06, 0xf5, 0x4b, 0x1e, 0xab, 0xba, 0x94, 0x56, 0xfe, 0x36, 0x0d, 0xc5, 0x68, 0xec, 0x90,
	0x0e, 0xc0, 0x3a, 0x64, 0xc4, 0xa2, 0xd4, 0x45, 0x0c, 0xe7, 0x1e, 0x65, 0x8a, 0x60, 0x76, 0x12,
	0x7a, 0x91, 0xc1, 0x30, 0xcc, 0x06, 0x14, 0xf6, 0xf1, 0x01, 0x47, 0x4c, 0x2d, 0x1c, 0xf7, 0x6e,
	0xe2, 0x83, 0x38, 0x5e, 0x7e, 0x1f, 0x1f, 0x30, 0xb4, 0xcf, 0xa0, 0xc2, 0x3d, 0x1b, 0x66, 0x88,
	0x29, 0x26, 0x0f, 0xe3, 0x3f, 0x5a, 0x2c, 0x8b, 0xc0, 0x19, 0xe3, 0xc8, 0x2b, 0x11, 0x5c, 0xd8,
	0x5a, 0x1a, 0x4b, 0x30, 0xe4, 0xcc, 0xc2, 0xad, 0x6d, 0xe2, 0xd1, 0x4c, 0x6b, 0x87, 0x78, 0x14,
	0xa2, 0xf9, 0x24, 0xe0, 0x68, 0xd9, 0x85, 0xd1, 0xba, 0x24, 0x98, 0x41, 0xf3, 0x49, 0x40, 0x7f,
	0x6e, 0xe6, 0x78, 0xf6, 0x40, 0xf9, 0x2a, 0x54, 0x66, 0x07, 0x7c, 0x66, 0x2f, 0x4c, 0xce, 0xec,
	0x85, 0xca, 0x7d, 0x28, 0xc7, 0xc7, 0x12, 0xdd, 0x00, 0x29, 0xf4, 0x05, 0xe6, 0x58, 0x2a, 0x82,
	0x2e, 0x8c, 0x89, 0xf2, 0xd3, 0x24, 0xa0, 0x93, 0x43, 0x46, 0xad, 0x52, 0xcc, 0xf7, 0x9d, 0x07,
	0x41, 0xb1, 0xb2, 0xd0, 0x2a, 0x7d, 0x9b, 0x65, 0x7d, 0x98, 0x37, 0x3a, 0x70, 0xc4, 0x1a, 0x38,
	0xcf, 0x4e, 0x55, 0x14, 0x28, 0xdb, 0x8e, 0xb2, 0x07, 0xe5, 0xf8, 0x98, 0xa3, 0xeb, 0x50, 0xa6,
	0x9e, 0xf3, 0x5c, 0x63, 0xe0, 0x88, 0x4c, 0xc2, 0x46, 0xbc, 0x0d, 0x15, 0xbe, 0xb4, 0xe7, 0x9c,
	0x86, 0x32, 0xa3, 0x6e, 0x4d, 0x47, 0x2b, 0x3e, 0xfa, 0x4b, 0x8c, 0xd6, 0x4f, 0x92, 0x50, 0x8c,
	0xec, 0x02, 0xea, 0xf2, 0xcd, 0xc3, 0x30, 0xdd, 0x21, 0xb6, 0x1c, 0x61, 0x05, 0xd6, 0x17, 0x34,
	0x2d, 0x75, 0xc6, 0xc4, 0x2d, 0x00, 0xdb, 0x2f, 0x38, 0x81, 0x76, 0x81, 0xef, 0x48, 0xf3, 0x5d,
	0x60, 0xd4, 0xb0, 0x21, 0xdf, 0x82, 0x62, 0xe4, 0xc7, 0x28, 0xb7, 0xcf, 0x32, 0x19, 0x2b, 0x50,
	0xdc, 0x6d, 0x6d, 0xb6, 0x77, 0x5b, 0x75, 0xb5, 0x2e, 0x25, 0x51, 0x09, 0xf2, 0xe1, 0x47, 0x4a,
	0xf9, 0x8b, 0x24, 0x94, 0x74, 0x82, 0xcd, 0xd0, 0xc9, 0x78, 0x04, 0x39, 0xdf, 0x1d, 0x7b, 0x7d,
	0x72, 0x01, 0x2f, 0x43, 0x20, 0xcc, 0xb9, 0x66, 0xa9, 0x8b, 0xbb, 0x66, 0x8a, 0x09, 0x97, 0x78,
	0x5a, 0x55, 0x73, 0x82, 0xc8, 0x2f, 0x6a, 0x43, 0x51, 0x64, 0x1f, 0x2e, 0xe4, 0x1b, 0x15, 0x38,
	0xc8, 0xb6, 0xa3, 0xfc, 0x71, 0x12, 0x2a, 0x22, 0x58, 0x0d, 0x65, 0xcc, 0x2e, 0xeb, 0xe4, 0x4b,
	0x58, 0xd6, 0x67, 0xea, 0x56, 0xea, 0x2c, 0xdd, 0x52, 0xfe, 0x25, 0x07, 0x97, 0x7a, 0xc4, 0x0f,
	0xba, 0x2c, 0x63, 0x12, 0x36, 0xed, 0x6c, 0x7b, 0x80, 0x74, 0xc8, 0x91, 0x63, 0x96, 0x7e, 0x4d,
	0x2d, 0x9c, 0xc3, 0x3b, 0x21, 0xa0, 0xaa, 0x52, 0x08, 0x5d, 0x20, 0xc9, 0xff, 0x99, 0x81, 0x2c,
	0xa3, 0xa0, 0x63, 0x58, 0x7d, 0x8e, 0x03, 0xe2, 0x0d, 0xb1, 0x77, 0x64, 0xb0, 0x52, 0x31, 0x30,
	0x8f, 0xcf, 0x2f, 0xa6, 0x5a, 0x33, 0x8f, 0xb1, 0xd3, 0x27, 0x4f, 0x42, 0xe0, 0x9d, 0x84, 0x5e,
	0x89, 0xa4, 0x70, 0xb9, 0x3f, 0x49, 0xc2, 0x55, 0x11, 0xf0, 0xd0, 0x8d, 0x81, 0xe9, 0x1e, 0x17,
	0xcf, 0xcd, 0x4d, 0xe7, 0xe2, 0xe2, 0x3b, 0x11, 0x3c, 0xd5, 0xd1, 0x9d, 0x84, 0x7e, 0x79, 0x34,
	0x43, 0xe1, 0x0d, 0x19, 0xc2, 0x4a, 0x68, 0x30, 0xb8, 0x7c, 0xbe, 0x3d, 0x6d, 0x5f, 0x48, 0xbe,
	0xa9, 0x8a, 0xc0, 0x73, 0x27, 0xa1, 0x97, 0x05, 0x3c, 0x2b, 0x93, 0xef, 0x81, 0x34, 0x3f, 0x3a,
	0xe8, 0x2d, 0x58, 0x71, 0xc8, 0x73, 0x23, 0x1a, 0x21, 0x36, 0x03, 0x69, 0xbd, 0xec, 0x90, 0xe7,
	0x51, 0x25, 0x79, 0x13, 0xae, 0x9e, 0xda, 0x2f, 0xf4, 0x1e, 0x48, 0x98, 0x17, 0x18, 0xe6, 0xd8,
	0xe3, 0xde, 0x23, 0x07, 0x58, 0x15, 0xf4, 0xba, 0x20, 0xcb, 0x1e, 0x94, 0x62, 0x6d, 0x43, 0x7d,
	0x28, 0x84, 0x01, 0xb2, 0x38, 0x11, 0x7c, 0x78, 0xae, 0x5e, 0xd3, 0x66, 0xf8, 0x01, 0x1e, 0x8e,
	0x48, 0x88, 0xad, 0x47, 0xc0, 0x9b, 0x79, 0xc8, 0xb2, 0x71, 0x95, 0xbf, 0x03, 0xe8, 0x64, 0x45,
	0xf4, 0x2e, 0xac, 0x12, 0x87, 0x2e, 0xf5, 0x28, 0xe2, 0x65, 0x8d, 0x2f, 0xeb, 0x15, 0x41, 0x0e,
	0x2b, 0xbe, 0x06, 0xc5, 0x20, 0x64, 0x67, 0x6b, 0x24, 0xad, 0x4f, 0x09, 0xca, 0x7f, 0xa7, 0xe1,
	0xd2, 0x13, 0xcf, 0x0a, 0xc8, 0xb6, 0x65, 0x13, 0x3f, 0xd4, 0xaa, 0x6d, 0xc8, 0xf8, 0x96, 0x73,
	0x74, 0x91, 0x58, 0x8b, 0xf2, 0xa3, 0xef, 0xc0, 0x2a, 0x8d, 0xd2, 0x71, 0x60, 0x0c, 0x44, 0xe1,
	0x05, 0x36, 0xc5, 0x0a, 0x87, 0x0a, 0x69, 0x74, 0x04, 0xb8, 0xd1, 0x22, 0xa6, 0xc1, 0x12, 0x6e,
	0x3e, 0x5b, 0x82, 0x05, 0xbd, 0x12, 0x92, 0x59, 0xc7, 0x7c, 0xf4, 0x0d, 0x90, 0xc5, 0xd9, 0xb8,
	0x49, 0xbd, 0xce, 0xa1, 0xe5, 0x10, 0xd3, 0xf0, 0x0f, 0xb1, 0x67, 0x5a, 0xce, 0x01, 0xf3, 0x7d,
	0x0a, 0xfa, 0x1a, 0xaf, 0x51, 0x8f, 0x2a, 0x74, 0x45, 0x39, 0x22, 0xb3, 0x11, 0x1e, 0x8f, 0x8e,
	0xea, 0x8b, 0x1c, 0x81, 0xcd, 0x0f, 0xeb, 0x8b, 0xc2, 0xbc, 0xff, 0xd7, 0xd8, 0x44, 0xf9, 0x11,
	0x64, 0x99, 0x59, 0x7d, 0x39, 0xc7, 0x34, 0x55, 0xb8, 0x1c, 0x1d, 0x55, 0x45, 0x96, 0x3c, 0x3c,
	0xac, 0xb9, 0x14, 0x15, 0x09, 0x43, 0xee, 0x2b, 0xff, 0x96, 0x81, 0x4a, 0x98, 0x85, 0xe1, 0xe7,
	0x80, 0xca, 0x6f, 0x32, 0x62, 0xfb, 0x7e, 0x1b, 0xb2, 0x9b, 0xcf, 0x7a, 0x6a, 0x57, 0x4a, 0xc8,
	0xaf, 0xb2, 0x54, 0xca, 0x65, 0x96, 0x4a, 0x61, 0xa8, 0x1b, 0xfb, 0x93, 0x80, 0x25, 0xf6, 0xd0,
	0x4d, 0x28, 0x51, 0x17, 0xbf, 0xf5, 0xd0, 0xd8, 0xed, 0x6d, 0xdf, 0x97, 0x60, 0x26, 0x97, 0xcf,
	0xeb, 0xd2, 0x88, 0xd1, 0x39, 0x30, 0xc6, 0xc1, 0xe0, 0x3e, 0xe5, 0x78, 0x1d, 0x52, 0x8f, 0xf7,
	0xa4, 0xa4, 0x7c, 0x8d, 0x55, 0x94, 0x62, 0x15, 0x8f, 0x8e, 0x69, 0xf9, 0x3b, 0x90, 0xdb, 0xab,
	0xe9, 0x5a, 0xab, 0x27, 0xa5, 0x64, 0x99, 0xd5, 0xb9, 0x12, 0xab, 0x73, 0x8c, 0x3d, 0xcb, 0x09,
	0x44, 0xbd, 0x7a, 0x7b, 0x77, 0xb3, 0xa1, 0x4a, 0xa5, 0x53, 0xea, 0x99, 0xee, 0x58, 0x64, 0x85,
	0xde, 0x8f, 0xa5, 0x91, 0xd2, 0x33, 0x99, 0x74, 0x5e, 0x33, 0x9e, 0x41, 0x7a, 0x1b, 0xb2, 0x3d,
	0xad, 0xa9, 0xea, 0x52, 0xe6, 0x94, 0x3e, 0x33, 0x8f, 0x87, 0x67, 0xfa, 0x57, 0xb5, 0x56, 0x4f,
	0xd5, 0xf7, 0xa2, 0x9b, 0x0d, 0x52, 0x76, 0x26, 0xfd, 0x2c, 0x80, 0x9d, 0x80, 0x78, 0xc7, 0xd8,
	0x16, 0xa9, 0x7e, 0x9e, 0xb4, 0x5e, 0x69, 0xa8, 0xad, 0x87, 0xbd, 0x1d, 0xa3, 0xa3, 0xab, 0xdb,
	0xda, 0x53, 0x29, 0x37, 0x93, 0xa6, 0xe2, 0x7c, 0x36, 0x71, 0x0e, 0x82, 0x43, 0x63, 0xe4, 0x91,
	0x81, 0xf5, 0xb9, 0xe0, 0x9a, 0xb9, 0x47, 0x21, 0xe5, 0x4f, 0xe1, 0xe2, 0xd9, 0xf4, 0x98, 0xac,
	0xbb, 0x50, 0xe1, 0xd5, 0xc3, 0xbc, 0xad, 0x54, 0x98, 0x39, 0xfd, 0xe0, 0x6c, 0x91, 0xde, 0xf2,
	0x25, 0xc9, 0xd2, 0xa7, 0x57, 0xbb, 0xbd, 0x5a, 0x4f, 0x35, 0x36, 0x69, 0xbc, 0x56, 0x37, 0xa2,
	0xc1, 0x2b, 0xca, 0xef, 0x31, 0xf6, 0xb7, 0x66, 0xe6, 0x16, 0x07, 0xc4, 0xd8, 0xc7, 0xfd, 0x23,
	0x62, 0x1a, 0xb1, 0x91, 0x54, 0x7e, 0x09, 0x90, 0xeb, 0xf6, 0x0f, 0xc9, 0x10, 0xa3, 0x87, 0x90,
	0x1b, 0x58, 0xc4, 0x36, 0x43, 0x0b, 0xbd, 0x50, 0x38, 0xc2, 0x58, 0xab, 0xdb, 0x94, 0x4f, 0x17,
	0xec, 0xa8, 0x02, 0xa9, 0xc8, 0x2f, 0x49, 0x59, 0xa6, 0xfc, 0x57, 0x49, 0x28, 0x35, 0xdc, 0x03,
	0xab, 0x8f, 0x6d, 0x1a, 0xab, 0x8a, 0xf2, 0x64, 0x58, 0x8e, 0x10, 0x64, 0xb0, 0x77, 0xe0, 0x0b,
	0x0e, 0xf6, 0x1b, 0x75, 0xa0, 0xb8, 0x8f, 0x7d, 0x62, 0xb0, 0x40, 0x99, 0xef, 0x93, 0xb7, 0x97,
	0x6c, 0x0f, 0x95, 0xa5, 0x17, 0x28, 0x0a, 0x93, 0xfa, 0x1e, 0x48, 0x3e, 0xf1, 0x2c, 0x6c, 0xb3,
	0x9c, 0x67, 0xdf, 0xc6, 0xbe, 0xcf, 0x2c, 0x59, 0x59, 0x5f, 0x9d, 0xd2, 0xb7, 0x28, 0x59, 0xfe,
	0xcb, 0x24, 0xe4, 0x9b, 0x78, 0xc4, 0xd8, 0x5a, 0x50, 0xa0, 0xd1, 0x43, 0x14, 0xb0, 0x9f, 0xb3,
	0x1d, 0xf9, 0x23, 0x32, 0x61, 0x78, 0x51, 0x18, 0xcd, 0x10, 0x53, 0xe7, 0x47, 0xe4, 0x61, 0x34,
	0xfd, 0x29, 0xff, 0x47, 0x1a, 0x8a, 0x51, 0x01, 0xf5, 0x6f, 0x29, 0xf6, 0x34, 0x37, 0xba, 0x58,
	0x74, 0x21, 0x04, 0x50, 0x88, 0x16, 0x1e, 0x12, 0xbd, 0x10, 0x88, 0x5f, 0x48, 0x86, 0x82, 0x33,
	0xb6, 0x6d, 0x96, 0x89, 0x4a, 0x31, 0xdb, 0x1f, 0x7d, 0xa3, 0x21, 0xbc, 0x32, 0xbd, 0x86, 0x11,
	0x65, 0x92, 0x2f, 0x38, 0x6b, 0x3b, 0x09, 0xfd, 0xea, 0x14, 0x55, 0x6c, 0xcb, 0xe1, 0x6c, 0xd0,
	0x10, 0x9c, 0xe1, 0x67, 0x16, 0x4e, 0x41, 0x08, 0x7c, 0x31, 0xa5, 0x22, 0x08, 0x67, 0x78, 0x8f,
	0x00, 0x3c, 0xf7, 0xb9, 0xe1, 0xb3, 0x0a, 0x22, 0x0c, 0x7f, 0x6f, 0x61, 0xc4, 0x9d, 0x84, 0x5e,
	0xf4, 0xdc, 0xe7, 0x42, 0x7f, 0x3e, 0x85, 0xb2, 0xcd, 0x57, 0x39, 0x6f, 0x5f, 0x6e, 0xe1, 0xe4,
	0x83, 0x68, 0x5f, 0x4c, 0x47, 0x76, 0x12, 0x7a, 0xc9, 0x9e, 0x7e, 0x6e, 0x96, 0xc4, 0x9c, 0x5a,
	0xce, 0xc0, 0x95, 0x7f, 0x9d, 0x84, 0x2c, 0x1b, 0x2b, 0xaa, 0x39, 0xb1, 0x0c, 0x38, 0xfb, 0x8d,
	0xae, 0x43, 0x29, 0xbc, 0x66, 0x16, 0x7a, 0x0f, 0x45, 0x3d, 0x4e, 0x42, 0x0f, 0x45, 0xfe, 0xe9,
	0x02, 0x6a, 0xc5, 0x00, 0x84, 0x22, 0xd3, 0x79, 0xc8, 0x32, 0x45, 0xfe, 0x2a, 0x5c, 0x62, 0xae,
	0x14, 0xdd, 0x46, 0xd8, 0x79, 0x25, 0x6d, 0x40, 0x96, 0x15, 0x4b, 0x61, 0x41, 0x47, 0xd0, 0x95,
	0x7f, 0x4a, 0x42, 0x21, 0x5c, 0x6c, 0xa8, 0x00, 0x19, 0xba, 0x89, 0x49, 0x09, 0x54, 0x84, 0xac,
	0xd6, 0xea, 0xdd, 0xba, 0x2b, 0x25, 0xc5, 0xcf, 0xdb, 0xeb, 0x52, 0x4a, 0xfc, 0xbc, 0x7b, 0x47,
	0x4a, 0xd3, 0x70, 0xb4, 0xae, 0x6e, 0x69, 0xcd, 0x5a, 0x43, 0xca, 0x50, 0xfa, 0x76, 0xa3, 0x5d,
	0xeb, 0x49, 0x59, 0x04, 0xd1, 0x3e, 0x93, 0xa3, 0xbf, 0xf9, 0x6e, 0x27, 0xe5, 0x51, 0x19, 0x0a,
	0xf5, 0x5a, 0x4f, 0xa5, 0xfb, 0x85, 0x54, 0xe0, 0xc1, 0x6c, 0xbb, 0xa1, 0xd6, 0x5a, 0x52, 0x91,
	0x72, 0xf3, 0xad, 0x13, 0xe8, 0xcf, 0x9a, 0xae, 0xd7, 0x9e, 0x49, 0x25, 0x94, 0x87, 0x74, 0xb3,
	0xd6, 0x91, 0x56, 0xe8, 0x0f, 0xbd, 0xfd, 0x44, 0xaa, 0x20, 0x09, 0xca, 0x8d, 0xf6, 0x43, 0x6d,
	0xab, 0xd6, 0x30, 0x7a, 0xcf, 0x3a, 0xaa, 0xb4, 0xaa, 0xfc, 0x5e, 0x2e, 0x8c, 0x2c, 0x63, 0x79,
	0xfd, 0x97, 0x1e, 0x59, 0xa2, 0x3d, 0x28, 0xf3, 0x13, 0x45, 0x6a, 0xbf, 0xc7, 0xbe, 0x88, 0x89,
	0x17, 0x99, 0xb1, 0x26, 0x65, 0xeb, 0x32, 0x2e, 0x1e, 0x15, 0x97, 0x86, 0x53, 0x0a, 0x7a, 0x27,
	0x74, 0x04, 0xa7, 0x61, 0x64, 0x9a, 0xad, 0x93, 0x15, 0x4e, 0x0e, 0x13, 0x23, 0x75, 0xc8, 0x07,
	0x9e, 0x75, 0x70, 0x40, 0x3c, 0xa1, 0x6d, 0xef, 0x2f, 0xe2, 0xb5, 0x73, 0x0e, 0x3d, 0x64, 0x45,
	0x04, 0x2e, 0x45, 0xd1, 0x29, 0xb5, 0x12, 0x94, 0x85, 0x2d, 0x8b, 0xca, 0xfa, 0xfd, 0x05, 0xf0,
	0x6a, 0x31, 0xde, 0xa6, 0x6b, 0x8a, 0xf4, 0xa7, 0x84, 0xe7, 0xc8, 0xa8, 0x0b, 0x25, 0x7e, 0x2a,
	0xca, 0x42, 0x3c, 0xa6, 0x7e, 0x8b, 0x59, 0x3e, 0x7e, 0xa9, 0x83, 0x46, 0x0c, 0x22, 0xaf, 0xe2,
	0x46, 0x04, 0xb4, 0x0f, 0x52, 0xdf, 0x76, 0x59, 0xe0, 0xb8, 0x4f, 0x0e, 0xf1, 0xb1, 0xe5, 0x7a,
	0x2c, 0xc7, 0x5e, 0x59, 0xbf, 0xb7, 0x48, 0x56, 0x91, 0xb3, 0x6e, 0x0a, 0x4e, 0x0e, 0xbf, 0xda,
	0x9f, 0xa5, 0xb2, 0xb0, 0xca, 0xb6, 0xd9, 0xee, 0x6e, 0xe3, 0x80, 0x38, 0xc4, 0xf7, 0x59, 0x52,
	0x9e, 0x86, 0x55, 0x9c, 0xde, 0x10, 0x64, 0xf4, 0x19, 0x54, 0xda, 0x0e, 0x6d, 0x58, 0xc8, 0xbc,
	0x56, 0x5c, 0x38, 0x89, 0x3c, 0xcb, 0xc8, 0xdb, 0x32, 0x87, 0x86, 0x6e, 0xc1, 0x55, 0xec, 0xfb,
	0xd6, 0x81, 0xe3, 0x1b, 0x81, 0x6b, 0xb8, 0x4e, 0x78, 0xff, 0x61, 0x0d, 0x98, 0xdd, 0x47, 0xa2,
	0xb0, 0xe7, 0xb6, 0x1d, 0xc2, 0xd7, 0xbf, 0xf2, 0x5d, 0x28, 0xc5, 0x16, 0x9b, 0xd2, 0x3c, 0x2b,
	0xab, 0xb4, 0x0a, 0xa5, 0x56, 0xbb, 0xc5, 0x0e, 0xd7, 0xa9, 0x62, 0x26, 0x19, 0x41, 0x55, 0xeb,
	0x5d, 0x7e, 0xde, 0x2e, 0xa5, 0x10, 0x82, 0x4a, 0xad, 0xa1, 0xab, 0xb5, 0xba, 0x38, 0x82, 0xaf,
	0x4b, 0x69, 0xe5, 0x7b, 0x20, 0xcd, 0xcf, 0xbf, 0xa2, 0x9d, 0x25, 0xa2, 0x02, 0x50, 0xd7, 0xba,
	0x5b, 0x35, 0xbd, 0xce, 0x25, 0x48, 0x50, 0x8e, 0x4e, 0xf1, 0x29, 0x25, 0x45, 0x6b, 0xe8, 0x2a,
	0x3b, 0x79, 0xa7, 0xdf, 0x69, 0xe5, 0xdb, 0xb0, 0x3a, 0x37, 0x47, 0xca, 0xc7, 0x2f, 0xe8, 0x80,
	0xda, 0xd4, 0x7a, 0x46, 0xad, 0xf1, 0xa4, 0xf6, 0xac, 0xcb, 0xd3, 0xe9, 0x8c, 0xa0, 0x6d, 0x1b,
	0xad, 0x76, 0x4b, 0x6d, 0x76, 0x7a, 0xcf, 0xa4, 0x94, 0xd2, 0x99, 0x9f, 0xa2, 0x17, 0x22, 0x6e,
	0x6b, 0xba, 0x3a, 0x83, 0xc8, 0x08, 0xb3, 0x88, 0xfb, 0x00, 0xd3, 0x25, 0xaa, 0xf4, 0xce, 0x42,
	0xbb, 0x04, 0x2b, 0x6a, 0xab, 0x6e, 0xb4, 0xb7, 0x8d, 0x28, 0xe1, 0x8f, 0xa0, 0xd2, 0xa8, 0xb1,
	0x8b, 0x35, 0x5a, 0xcb, 0xe8, 0xd4, 0x5a, 0x74, 0x94, 0x69, 0xab, 0x6b, 0x7a, 0x43, 0x8b, 0x53,
	0xd3, 0x8a, 0x0d, 0x30, 0x4d, 0x2f, 0x2a, 0x9f, 0xbd, 0x60, 0x84, 0xd5, 0x3d, 0xb5, 0xd5, 0x63,
	0xd7, 0x83, 0xa5, 0x24, 0xba, 0x0c, 0xab, 0xe2, 0x3c, 0x9a, 0x86, 0x16, 0x8c, 0x98, 0x42, 0xd7,
	0xe1, 0xb5, 0xee, 0xb3, 0xd6, 0xd6, 0x8e, 0xde, 0x6e, 0xb1, 0x33, 0xea, 0xf9, 0x1a, 0x69, 0xe5,
	0xe7, 0x12, 0xe4, 0x85, 0x99, 0x40, 0x3a, 0x14, 0xf1, 0x20, 0x20, 0x9e, 0x81, 0x6d, 0x7b, 0x09,
	0x0f, 0x4b, 0xb0, 0x57, 0x6b, 0x94, 0xb7, 0x66, 0xdb, 0x3b, 0x09, 0xbd, 0x80, 0xc5, 0xef, 0x18,
	0xa6, 0x33, 0x59, 0xc2, 0xc7, 0x9a, 0xc5, 0x74, 0x26, 0x53, 0x4c, 0x67, 0x82, 0x76, 0x01, 0x38,
	0x26, 0xc1, 0xfd, 0x43, 0xb1, 0x77, 0xde, 0x59, 0x16, 0x54, 0xc5, 0xfd, 0x43, 0xea, 0x35, 0xe0,
	0xf0, 0x03, 0xd9, 0x70, 0x59, 0xc0, 0x3a, 0xa6, 0xe1, 0x0e, 0x42, 0x7d, 0xe3, 0xe6, 0xf6, 0xeb,
	0x4b, 0xe3, 0x3b, 0x66, 0x7b, 0xc0, 0x15, 0x73, 0x27, 0xa1, 0x4b, 0x78, 0x8e, 0x86, 0x02, 0xb8,
	0xca, 0xa5, 0xcd, 0x25, 0xc4, 0x84, 0xeb, 0xf3, 0xf1, 0xb2, 0xf2, 0x4e, 0x26, 0xbe, 0xf0, 0x49,
	0x32, 0xfa, 0x69, 0x12, 0x14, 0x2e, 0xd6, 0x9f, 0x38, 0xfd, 0x43, 0xcf, 0x75, 0x98, 0x0f, 0x3e,
	0xdf, 0x06, 0xee, 0x30, 0x3d, 0x5a, 0xb6, 0x0d, 0xdd, 0x18, 0xe6, 0x89, 0xf6, 0xbc, 0x81, 0x5f,
	0x5c, 0x05, 0x3d, 0x86, 0x1c, 0xb6, 0x9f, 0xe3, 0x89, 0xbf, 0x56, 0x5e, 0xd8, 0x9f, 0x8c, 0xc4,
	0x33, 0xc6, 0x9d, 0x84, 0x2e, 0x20, 0x50, 0x0b, 0xf2, 0x26, 0x19, 0xe0, 0xb1, 0x1d, 0xb0, 0x4d,
	0x62, 0xb1, 0xed, 0x3f, 0x44, 0xab, 0x73, 0x4e, 0xea, 0x9e, 0x0a, 0x10, 0xf4, 0xd9, 0x34, 0x63,
	0xd8, 0x77, 0xc7, 0x4e, 0xc0, 0xb6, 0x85, 0xd2, 0x42, 0x5b, 0x4f, 0x88, 0xaa, 0x86, 0x47, 0x11,
	0x63, 0x27, 0x88, 0xa5, 0x08, 0xd9, 0x37, 0xda, 0x81, 0xac, 0x43, 0x8e, 0x09, 0xdf, 0x45, 0x4a,
	0xeb, 0x37, 0x97, 0xc0, 0x6d, 0x51, 0xbe, 0x9d, 0x84, 0xce, 0x01, 0xa8, 0x76, 0xb8, 0x1e, 0x3f,
	0x57, 0xb6, 0x27, 0x6c, 0xb7, 0x58, 0x4e, 0x3b, 0xda, 0xde, 0x36, 0xe7, 0xa5, 0xda, 0xe1, 0x86,
	0x1f, 0x74, 0x76, 0x3c, 0x32, 0x22, 0x38, 0x58, 0x2b, 0x2d, 0x3d, 0x3b, 0x3a, 0x63, 0xa4, 0xb3,
	0xc3, 0x21, 0xe4, 0xa7, 0x50, 0x08, 0xad, 0x05, 0x6a, 0x40, 0x89, 0xdd, 0x89, 0x65, 0x55, 0xc3,
	0x88, 0x77, 0x19, 0xef, 0x26, 0xce, 0x3e, 0x45, 0x76, 0x26, 0x2f, 0x19, 0xf9, 0x19, 0x14, 0x23,
	0xc3, 0xf1, 0x92, 0xa1, 0xff, 0x2e, 0x09, 0xd2, 0xbc, 0xd1, 0x40, 0x6d, 0x58, 0x21, 0xd8, 0xb3,
	0x27, 0xc6, 0xc0, 0xf2, 0x2c, 0xe7, 0x20, 0xbc, 0x88, 0xbd, 0x8c, 0x90, 0x32, 0x03, 0xd8, 0xe6,
	0xfc, 0xa8, 0x09, 0x65, 0xea, 0xd4, 0x44, 0x78, 0xa9, 0xa5, 0xf1, 0x4a, 0x94, 0x5f, 0xc0, 0xc9,
	0xbf, 0x03, 0x97, 0x4f, 0x31, 0x3c, 0xe8, 0x10, 0xae, 0x44, 0x19, 0x5a, 0xe3, 0xc4, 0xeb, 0x93,
	0x8f, 0x16, 0x3c, 0x5c, 0x63, 0xec, 0xd3, 0xe7, 0x06, 0x97, 0x83, 0x13, 0x34, 0x5f, 0x7e, 0x13,
	0xde, 0xf8, 0x02, 0xab, 0x23, 0x17, 0x21, 0x2f, 0x74, 0x59, 0xbe, 0x0d, 0xe5, 0xb8, 0x02, 0xa2,
	0xb7, 0xe6, 0x15, 0x3a, 0xc9, 0xa2, 0xa3, 0x19, 0xad, 0x94, 0xf3, 0x90, 0x65, 0xda, 0x25, 0x17,
	0x20, 0xc7, 0x4d, 0x8c, 0xfc, 0x47, 0x49, 0x28, 0x46, 0x2a, 0x82, 0x3e, 0x86, 0x4c, 0x74, 0x74,
	0xb8, 0xdc, 0x58, 0x32, 0x3e, 0xea, 0xd6, 0x87, 0x9a, 0xba, 0xfc, 0x74, 0x84, 0xac, 0x72, 0x0f,
	0x72, 0x5c, 0xc5, 0x68, 0x14, 0x3d, 0x5d, 0x58, 0xe7, 0x68, 0x55, 0x8c, 0x7b, 0xb3, 0x18, 0x85,
	0x1c, 0xca, 0xaf, 0x53, 0xb1, 0x3c, 0xfe, 0xf4, 0x26, 0x7d, 0x17, 0xb2, 0x26, 0xb1, 0xf1, 0x44,
	0x08, 0xfa, 0xfa, 0xb9, 0x26, 0xb7, 0x5a, 0xa7, 0x10, 0xd4, 0x7e, 0x31, 0x2c, 0xf4, 0x29, 0x14,
	0xb0, 0x6d, 0x1d, 0x38, 0x46, 0xe0, 0x8a, 0x31, 0xf9, 0xe6, 0xf9, 0x70, 0x6b, 0x14, 0xa5, 0xe7,
	0x52, 0x2b, 0x8e, 0xf9, 0x4f, 0xf9, 0x7d, 0xc8, 0x32, 0x69, 0xe8, 0x4d, 0x28, 0x33, 0x69, 0xc6,
	0xd0, 0xb2, 0x6d, 0xcb, 0x17, 0x67, 0x27, 0x25, 0x46, 0x6b, 0x32, 0x92, 0xfc, 0x00, 0xf2, 0x02,
	0x01, 0x5d, 0x83, 0xdc, 0x88, 0x78, 0x96, 0xcb, 0x63, 0xb3, 0xb4, 0x2e, 0xbe, 0x28, 0xdd, 0x1d,
	0x0c, 0x7c, 0x12, 0x30, 0x27, 0x21, 0xad, 0x8b, 0xaf, 0xcd, 0xab, 0x70, 0xf9, 0x14, 0x1d, 0x50,
	0xfe, 0x30, 0x05, 0xc5, 0x28, 0xa5, 0x8d, 0xf6, 0xa0, 0x82, 0xfb, 0xec, 0xee, 0xdf, 0x08, 0x07,
	0x01, 0xf1, 0x9c, 0xf3, 0x26, 0xb2, 0x57, 0x38, 0x4c, 0x87, 0xa3, 0xa0, 0xc7, 0x90, 0x3f, 0xb6,
	0xc8, 0xf3, 0x8b, 0x1d, 0xe2, 0xe7, 0x28, 0xc4, 0xb6, 0x83, 0x3e, 0x83, 0x4b, 0x22, 0x3c, 0x1d,
	0xe2, 0xd1, 0x88, 0xfa, 0x07, 0x03, 0x47, 0x78, 0x5c, 0xe7, 0x81, 0x15, 0xb1, 0x6e, 0x93, 0x63,
	0x6d, 0x3b, 0xca, 0x27, 0x50, 0x8a, 0xbd, 0x48, 0x41, 0x12, 0xa4, 0xc7, 0x5e, 0x98, 0x29, 0xa1,
	0x3f, 0xd1, 0x1a, 0xe4, 0x47, 0xfc, 0x04, 0x82, 0x89, 0x2d, 0xeb, 0xe1, 0xe7, 0xa3, 0x4c, 0x21,
	0x29, 0xa5, 0x94, 0x3f, 0x49, 0xc2, 0x95, 0x30, 0x1f, 0x1f, 0x7f, 0x32, 0xa3, 0xfc, 0x24, 0x09,
	0xe5, 0x38, 0x01, 0xbd, 0x0d, 0xb9, 0x7a, 0x9b, 0xdd, 0xa7, 0x49, 0xc8, 0x6b, 0x2c, 0x2d, 0x8b,
	0x58, 0x5a, 0x96, 0x38, 0xc7, 0x1b, 0xa6, 0xdb, 0x3f, 0xe2, 0x99, 0xea, 0x77, 0x20, 0x2f, 0x9c,
	0x64, 0x29, 0x39, 0x93, 0xd1, 0xa6, 0xd5, 0x84, 0x9b, 0x44, 0xeb, 0xdd, 0x80, 0x82, 0xfa, 0xb4,
	0xa7, 0xea, 0xad, 0x5a, 0x63, 0x2e, 0xeb, 0x4e, 0x2b, 0x92, 0xcf, 0xe9, 0x54, 0x60, 0x7b, 0xe3,
	0xf8, 0x96, 0x72, 0x1f, 0x56, 0xea, 0x0c, 0x3e, 0x3c, 0xa0, 0x7a, 0x17, 0x56, 0xfb, 0xae, 0x13,
	0x60, 0xcb, 0xa1, 0xf1, 0xfe, 0x10, 0x1f, 0x84, 0x59, 0xa3, 0x4a, 0x44, 0xd6, 0x28, 0x55, 0xf9,
	0xd7, 0x24, 0x54, 0x84, 0x41, 0x0b, 0x79, 0x2b, 0x90, 0x72, 0xfd, 0x30, 0x61, 0xeb, 0xfa, 0x3c,
	0x61, 0xdb, 0x3f, 0x9c, 0x26, 0x6c, 0xfb, 0x87, 0x74, 0xc8, 0xfa, 0xee, 0x70, 0x88, 0x9d, 0x30,
	0x95, 0x10, 0x7e, 0xa2, 0x06, 0xa4, 0x89, 0x73, 0xbc, 0xcc, 0xb3, 0x90, 0x19, 0xe9, 0x55, 0xd5,
	0x39, 0xe6, 0x87, 0x3f, 0x14, 0x46, 0xbe, 0x0b, 0x85, 0x90, 0xb0, 0xd4, 0x03, 0x8c, 0xff, 0x49,
	0xc2, 0xaa, 0x2a, 0x06, 0x28, 0xec, 0x57, 0x17, 0x0a, 0xe1, 0x6b, 0x4e, 0xa1, 0x06, 0x8b, 0x78,
	0x56, 0xb5, 0x91, 0xd5, 0x25, 0xde, 0xb1, 0xd5, 0x27, 0xf5, 0xe8, 0x39, 0xa7, 0x1e, 0x01, 0xa1,
	0x3d, 0xc8, 0xb1, 0xdb, 0x8e, 0xe1, 0x21, 0xfa, 0x22, 0x3e, 0xf5, 0x5c, 0xc3, 0xf8, 0x7d, 0xaf,
	0xf0, 0x85, 0x0d, 0x47, 0x93, 0x1f, 0x40, 0x29, 0x46, 0x5e, 0xaa, 0xef, 0x3f, 0x86, 0xd5, 0x39,
	0x9d, 0x78, 0x39, 0xc7, 0x58, 0x5f, 0x81, 0x4a, 0xec, 0x09, 0xe0, 0xf4, 0x32, 0xc2, 0x4a, 0x8c,
	0xaa, 0x99, 0xca, 0x06, 0x94, 0x67, 0x64, 0x0b, 0x7d, 0x4b, 0x2e, 0xa0, 0x6f, 0xca, 0x6f, 0x33,
	0x50, 0x8a, 0x5d, 0x79, 0x45, 0x1a, 0x64, 0xad, 0x80, 0x44, 0x3b, 0xfb, 0xed, 0xe5, 0x6e, 0xcc,
	0x56, 0xb5, 0x80, 0x0c, 0x75, 0x8e, 0x20, 0x0f, 0x00, 0x34, 0x93, 0x38, 0x81, 0x35, 0xb0, 0x88,
	0x47, 0x6d, 0x73, 0xfc, 0xa9, 0x98, 0x68, 0x5d, 0x29, 0x98, 0xbe, 0x12, 0xa3, 0x9b, 0xf7, 0xb4,
	0xca, 0xd4, 0x62, 0x4c, 0xf9, 0x76, 0x3d, 0x27, 0x9c, 0x97, 0x74, 0x34, 0x2f, 0xf2, 0x2f, 0x52,
	0x90, 0xa1, 0x72, 0x91, 0x16, 0x9d, 0x7b, 0x2c, 0xf6, 0xe4, 0x6a, 0xa6, 0xe1, 0x51, 0x4b, 0x59,
	0xa6, 0xb5, 0x21, 0x52, 0xb8, 0xa9, 0x85, 0xb3, 0x68, 0x71, 0xb0, 0xb9, 0x4b, 0x84, 0xe8, 0xfd,
	0x70, 0xe5, 0x70, 0x1b, 0x7b, 0xa5, 0xca, 0xdf, 0x2d, 0x57, 0xc3, 0x77, 0xcb, 0xd5, 0x9a, 0x13,
	0xbe, 0x46, 0x44, 0x1f, 0x41, 0xc9, 0x3f, 0x74, 0xbd, 0x80, 0x1f, 0x44, 0x89, 0x38, 0xf5, 0x74,
	0x0e, 0x60, 0x15, 0xd9, 0x75, 0x34, 0xba, 0x38, 0x6d, 0xbc, 0x4f, 0x6c, 0xf1, 0xf0, 0x8d, 0x7f,
	0xa0, 0x57, 0xa1, 0x60, 0x5b, 0xce, 0x91, 0x31, 0xf6, 0x6c, 0x16, 0xfd, 0x15, 0xf5, 0x3c, 0xfd,
	0xde, 0xf5, 0x6c, 0xf9, 0xc7, 0xe2, 0x62, 0xe3, 0xf8, 0x05, 0x17, 0x1b, 0x45, 0x8e, 0x97, 0x5d,
	0x51, 0xd2, 0x5a, 0x3d, 0xf5, 0xa1, 0xaa, 0xf3, 0x5c, 0x31, 0xcf, 0x09, 0xa7, 0xe3, 0xd9, 0xde,
	0x0c, 0x5a, 0x81, 0x62, 0xf4, 0xa8, 0x59, 0xca, 0xb2, 0xbc, 0xf0, 0xae, 0x5e, 0x63, 0xaf, 0x0e,
	0x72, 0xa8, 0x02, 0xf0, 0xa8, 0xb6, 0x57, 0x33, 0xb6, 0x1a, 0xb5, 0x6e, 0x57, 0xca, 0x2b, 0xff,
	0x58, 0x80, 0xab, 0x4d, 0xe2, 0xfb, 0xf8, 0x80, 0x3c, 0xb1, 0x82, 0xc3, 0xd8, 0x23, 0x88, 0x97,
	0xfc, 0x4e, 0xf1, 0x5b, 0x90, 0x65, 0x39, 0xd8, 0x65, 0x1f, 0x6e, 0x52, 0xd7, 0x85, 0x31, 0xa2,
	0xef, 0x52, 0xcb, 0x2e, 0x5e, 0x89, 0xc4, 0x94, 0x68, 0xb1, 0x60, 0x69, 0xf6, 0xde, 0xd2, 0x4e,
	0x42, 0x17, 0x57, 0x28, 0xa3, 0x9b, 0x4c, 0xdf, 0x87, 0x4b, 0xbe, 0x79, 0x14, 0xdd, 0x46, 0x88,
	0xdf, 0x7e, 0x3c, 0xc7, 0x5e, 0xbc, 0x93, 0xd0, 0x57, 0xfd, 0x39, 0x53, 0xf4, 0x04, 0x2a, 0x23,
	0xec, 0x19, 0xa6, 0x1b, 0x35, 0x3f, 0xb7, 0xb0, 0x51, 0x8a, 0xdf, 0xa7, 0xa6, 0xd1, 0xed, 0x28,
	0x7e, 0x01, 0xbe, 0x0d, 0x30, 0x8a, 0x74, 0x53, 0x04, 0xe4, 0xcb, 0xbd, 0x38, 0xde, 0x49, 0xe8,
	0x31, 0x08, 0xa4, 0x43, 0x29, 0xf6, 0x4a, 0x5c, 0x04, 0xe3, 0x4b, 0xbe, 0x29, 0xde, 0x49, 0xe8,
	0x71, 0x10, 0xd4, 0x85, 0xb2, 0x47, 0xb0, 0x19, 0xf5, 0xbd, 0xb8, 0x30, 0x68, 0xec, 0x1a, 0x1e,
	0x05, 0xf5, 0x62, 0xb7, 0xf2, 0x9a, 0x00, 0xd3, 0x1b, 0x18, 0x22, 0x74, 0x5e, 0xea, 0xea, 0x03,
	0x8d, 0xc2, 0xa3, 0xab, 0x16, 0x68, 0x00, 0x97, 0x63, 0xef, 0xf5, 0xa2, 0xa6, 0x96, 0x97, 0x7c,
	0xdb, 0x1c, 0xbb, 0x84, 0xb7, 0x93, 0xd0, 0x85, 0x8b, 0x17, 0xbf, 0x99, 0x47, 0x00, 0x9d, 0x7c,
	0x49, 0xb1, 0xb6, 0x72, 0xfe, 0x27, 0xd4, 0x53, 0x31, 0xf1, 0x63, 0x9a, 0x3d, 0x58, 0x99, 0x5d,
	0xce, 0x95, 0x73, 0x6d, 0x82, 0x74, 0xbd, 0x0d, 0x62, 0xdf, 0x9b, 0x39, 0xc8, 0x78, 0xae, 0x1b,
	0x28, 0x3f, 0xcf, 0xc1, 0x35, 0xf5, 0x73, 0xd2, 0x1f, 0xb3, 0xab, 0xfa, 0xdd, 0x00, 0x1f, 0x44,
	0xda, 0xd4, 0x81, 0x52, 0x6c, 0x6f, 0x14, 0xd6, 0x63, 0xd9, 0x17, 0xd4, 0x71, 0x08, 0x6a, 0x58,
	0xf9, 0x2c, 0x8b, 0x5d, 0xdf, 0x12, 0x33, 0x76, 0xca, 0x23, 0x0b, 0x75, 0x21, 0x4f, 0xe4, 0xb4,
	0x76, 0x4f, 0x17, 0x86, 0x66, 0xce, 0x3c, 0xb5, 0x78, 0x7d, 0xe6, 0xbf, 0x1e, 0x32, 0xec, 0xfe,
	0x4a, 0xfc, 0xcf, 0x1a, 0xd6, 0xa6, 0xcf, 0x82, 0xb3, 0xac, 0x30, 0x7a, 0xda, 0x3b, 0x6b, 0x46,
	0x73, 0x17, 0x35, 0xa3, 0x03, 0x28, 0x8d, 0x7d, 0xe2, 0xb1, 0x83, 0x32, 0xe2, 0xaf, 0xe5, 0x2f,
	0xda, 0xe1, 0x5d, 0x9f, 0x78, 0xec, 0xaa, 0x2f, 0xed, 0xf0, 0x38, 0xfc, 0xf0, 0xd1, 0x33, 0xc8,
	0xb1, 0xfb, 0x25, 0xfe, 0x5a, 0x81, 0x89, 0xa8, 0x9d, 0x5f, 0x04, 0xbb, 0x11, 0xac, 0x99, 0xba,
	0x00, 0x94, 0xdb, 0x50, 0x8a, 0x0d, 0xf3, 0x22, 0x0e, 0xc9, 0x97, 0x01, 0x6c, 0xb7, 0x8f, 0x6d,
	0x7e, 0xd4, 0xcf, 0x17, 0x40, 0x91, 0x51, 0x5a, 0x78, 0x48, 0x28, 0x60, 0xac, 0x1b, 0x2f, 0x01,
	0xf0, 0x31, 0xe4, 0x45, 0xa3, 0x2f, 0x0e, 0xb6, 0xf1, 0x09, 0x14, 0xd8, 0x9f, 0xb0, 0x50, 0xff,
	0xef, 0xcd, 0x13, 0xfe, 0x03, 0xdd, 0xf3, 0x99, 0xe7, 0xd0, 0x1e, 0xf1, 0xbf, 0xf9, 0xf8, 0xcd,
	0x9f, 0xfe, 0xf5, 0x53, 0xee, 0x21, 0x50, 0xae, 0x5d, 0xcf, 0xd9, 0xd0, 0x60, 0x85, 0x01, 0xf4,
	0xc5, 0xbf, 0xa5, 0x2c, 0x82, 0xf2, 0xcf, 0x21, 0x4a, 0x79, 0x3f, 0xf6, 0xaf, 0x2b, 0x9b, 0x5f,
	0x87, 0x2f, 0xfe, 0xe7, 0x97, 0xcd, 0xa2, 0xce, 0x2e, 0xbc, 0xd5, 0x46, 0xd6, 0xa7, 0xa5, 0x90,
	0x6e, 0x1c, 0xdf, 0xda, 0xcf, 0x31, 0x71, 0xb7, 0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x81,
	0x4f, 0x6b, 0x54, 0x46, 0x00, 0x00,
}
