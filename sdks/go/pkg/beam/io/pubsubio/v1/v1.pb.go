// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	v1.proto

It has these top-level messages:
	PubSubPayload
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PubSubPayload_Op int32

const (
	PubSubPayload_INVALID PubSubPayload_Op = 0
	PubSubPayload_READ    PubSubPayload_Op = 1
	PubSubPayload_WRITE   PubSubPayload_Op = 2
)

var PubSubPayload_Op_name = map[int32]string{
	0: "INVALID",
	1: "READ",
	2: "WRITE",
}
var PubSubPayload_Op_value = map[string]int32{
	"INVALID": 0,
	"READ":    1,
	"WRITE":   2,
}

func (x PubSubPayload_Op) String() string {
	return proto.EnumName(PubSubPayload_Op_name, int32(x))
}
func (PubSubPayload_Op) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type PubSubPayload struct {
	Op                 PubSubPayload_Op `protobuf:"varint,1,opt,name=op,enum=v1.PubSubPayload_Op" json:"op,omitempty"`
	Topic              string           `protobuf:"bytes,2,opt,name=Topic" json:"Topic,omitempty"`
	Subscription       string           `protobuf:"bytes,3,opt,name=Subscription" json:"Subscription,omitempty"`
	IdAttribute        string           `protobuf:"bytes,4,opt,name=IdAttribute" json:"IdAttribute,omitempty"`
	TimestampAttribute string           `protobuf:"bytes,5,opt,name=TimestampAttribute" json:"TimestampAttribute,omitempty"`
	WithAttributes     bool             `protobuf:"varint,6,opt,name=WithAttributes" json:"WithAttributes,omitempty"`
}

func (m *PubSubPayload) Reset()                    { *m = PubSubPayload{} }
func (m *PubSubPayload) String() string            { return proto.CompactTextString(m) }
func (*PubSubPayload) ProtoMessage()               {}
func (*PubSubPayload) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PubSubPayload) GetOp() PubSubPayload_Op {
	if m != nil {
		return m.Op
	}
	return PubSubPayload_INVALID
}

func (m *PubSubPayload) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PubSubPayload) GetSubscription() string {
	if m != nil {
		return m.Subscription
	}
	return ""
}

func (m *PubSubPayload) GetIdAttribute() string {
	if m != nil {
		return m.IdAttribute
	}
	return ""
}

func (m *PubSubPayload) GetTimestampAttribute() string {
	if m != nil {
		return m.TimestampAttribute
	}
	return ""
}

func (m *PubSubPayload) GetWithAttributes() bool {
	if m != nil {
		return m.WithAttributes
	}
	return false
}

func init() {
	proto.RegisterType((*PubSubPayload)(nil), "v1.PubSubPayload")
	proto.RegisterEnum("v1.PubSubPayload_Op", PubSubPayload_Op_name, PubSubPayload_Op_value)
}

func init() { proto.RegisterFile("v1.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x18, 0x86, 0x4d, 0x5c, 0x67, 0xf7, 0x4d, 0x47, 0xf9, 0xd8, 0x21, 0xc7, 0x52, 0x64, 0xf4, 0x14,
	0xa8, 0xfe, 0x82, 0xc2, 0x76, 0x08, 0x88, 0x1b, 0x59, 0x71, 0xe7, 0x66, 0x1b, 0x18, 0x70, 0xe6,
	0xa3, 0x4d, 0x0a, 0xfe, 0x0c, 0xff, 0xb1, 0x10, 0x41, 0x9d, 0xec, 0xf8, 0x3e, 0xcf, 0x73, 0x7a,
	0x21, 0x1d, 0x2a, 0x49, 0x9d, 0xf3, 0x0e, 0xf9, 0x50, 0x15, 0x9f, 0x1c, 0xee, 0x36, 0xc1, 0x6c,
	0x83, 0xd9, 0xb4, 0x1f, 0x6f, 0xae, 0x3d, 0xe0, 0x3d, 0x70, 0x47, 0x82, 0xe5, 0xac, 0x9c, 0x3d,
	0xcc, 0xe5, 0x50, 0xc9, 0x33, 0x2d, 0xd7, 0xa4, 0xb9, 0x23, 0x9c, 0x43, 0xd2, 0x38, 0xb2, 0x7b,
	0xc1, 0x73, 0x56, 0x4e, 0xf4, 0xf7, 0xc0, 0x02, 0x6e, 0xb7, 0xc1, 0xf4, 0xfb, 0xce, 0x92, 0xb7,
	0xee, 0x5d, 0x5c, 0x47, 0x79, 0xc6, 0x30, 0x87, 0xa9, 0x3a, 0xd4, 0xde, 0x77, 0xd6, 0x04, 0x7f,
	0x14, 0xa3, 0x98, 0xfc, 0x45, 0x28, 0x01, 0x1b, 0x7b, 0x3a, 0xf6, 0xbe, 0x3d, 0xd1, 0x6f, 0x98,
	0xc4, 0xf0, 0x82, 0xc1, 0x05, 0xcc, 0x76, 0xd6, 0xbf, 0xfe, 0x80, 0x5e, 0x8c, 0x73, 0x56, 0xa6,
	0xfa, 0x1f, 0x2d, 0x16, 0xc0, 0xd7, 0x84, 0x53, 0xb8, 0x51, 0xcf, 0x2f, 0xf5, 0x93, 0x5a, 0x66,
	0x57, 0x98, 0xc2, 0x48, 0xaf, 0xea, 0x65, 0xc6, 0x70, 0x02, 0xc9, 0x4e, 0xab, 0x66, 0x95, 0x71,
	0x33, 0x8e, 0xf7, 0x3c, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x1b, 0xdf, 0x4b, 0x2a, 0x01,
	0x00, 0x00,
}
