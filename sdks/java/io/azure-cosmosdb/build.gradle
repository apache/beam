/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id("org.apache.beam.module")
  id("scala")
}

ext {
  junitVersion = "5.9.1"
  cosmosVersion = "4.37.1"
  cosmosContainerVersion = "1.17.5"
  bsonMongoVersion = "4.7.2"
  log4jVersion = "2.19.0"
}

applyJavaNature(automaticModuleName: "org.apache.beam.sdk.io.azure.cosmosdb")

description = "Apache Beam :: SDKs :: Java :: IO :: Azure Cosmos DB"
ext.summary = "IO library to read and write Azure Cosmos DB services from Beam."

dependencies {
  implementation("org.scala-lang:scala-library:2.12.17")
  implementation("com.azure:azure-cosmos:${cosmosVersion}")
  implementation library.java.commons_io
  permitUnusedDeclared library.java.commons_io // BEAM-11761
  implementation library.java.slf4j_api
  implementation project(path: ":sdks:java:core", configuration: "shadow")
  implementation("org.mongodb:bson:${bsonMongoVersion}")
}

// TEST
dependencies {
  testImplementation("org.testcontainers:azure:${cosmosContainerVersion}")
  testImplementation("com.outr:scribe_2.12:3.10.4")
  testImplementation project(path: ":sdks:java:core", configuration: "shadowTest")
  testImplementation library.java.mockito_core
  testImplementation("org.junit.vintage:junit-vintage-engine:${junitVersion}")
  testRuntimeOnly("org.apache.logging.log4j:log4j-api:$log4jVersion")
  testRuntimeOnly("org.apache.logging.log4j:log4j-core:$log4jVersion")
  testRuntimeOnly library.java.slf4j_jdk14
  testRuntimeOnly project(path: ":runners:direct-java", configuration: "shadow")
}
