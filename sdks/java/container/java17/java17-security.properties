# Java 17 java.security properties file override for JVM

# Java has now disabled TLSv1 and TLSv1.1. We specifically put it in the
# legacy algorithms list to allow it to be used if something better is not
# available (e.g. TLSv1.2). This will prevent breakages for existing users
# (for example JDBC with MySQL). See
# https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8202343
# for additional details.
#
# GCM is explicitly disabled in Java 8 only because it performs very
# poorly (https://stackoverflow.com/questions/25992131/slow-aes-gcm-encryption-and-decryption-with-java-8u20)
# GCM is not disabled in Java 11 or 17 (https://bugs.openjdk.java.net/browse/JDK-8046943)
#
# SSLv3 is explicitly disabled due to the potential for the POODLE attack. See
# https://www.cisa.gov/uscert/ncas/alerts/TA14-290A for additional details.
#
# remaining algorithms derived from:
# openjdk 17.0.2 2022-01-18
# OpenJDK Runtime Environment (build 17.0.2+8-86)
# OpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)
jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, \
    DH keySize < 1024, EC keySize < 224, 3DES_EDE_CBC, anon, NULL

# The raw value from 17.0.2 for legacyAlgorithms is
#   NULL, anon, RC4, DES, 3DES_EDE_CBC
# Because these values are in disabledAlgorithms, it is erroneous to include
# them in legacy (they are disabled in Java 8 and Java 11 as well). Here we 
# only include TLSv1 and TLSv1.1 which were removed from disabledAlgorithms
jdk.tls.legacyAlgorithms=TLSv1, TLSv1.1
