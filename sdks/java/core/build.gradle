/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: project(":").file("build_rules.gradle")
applyJavaNature()
applyAvroNature()

description = "Apache Beam :: SDKs :: Java :: Core"

processResources {
  filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
          'pom.version' : version,
          'timestamp' : new Date().format("yyyy-MM-dd HH:mm")
  ]
}

dependencies {
  compile library.java.guava
  compile library.java.protobuf_java
  compile library.java.findbugs_jsr305
  compile "com.github.stephenc.findbugs:findbugs-annotations:1.3.9-1"
  compile library.java.jackson_core
  compile library.java.jackson_annotations
  compile library.java.jackson_databind
  compile library.java.slf4j_api
  compile library.java.byte_buddy
  compile library.java.avro
  compile library.java.snappy_java
  compile library.java.commons_compress
  compile library.java.commons_lang3
  compile library.java.joda_time
  compile library.java.hamcrest_all
  compile library.java.junit
  runtime "org.tukaani:xz:1.5"
  testCompile project(":beam-model-parent:beam-model-fn-execution")
  testCompile library.java.guava_testlib
  testCompile library.java.jackson_dataformat_yaml
  testCompile library.java.slf4j_jdk14
  testCompile library.java.mockito_all
  testCompile "com.esotericsoftware.kryo:kryo:2.21"
}

task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = "tests"
}

artifacts.archives packageTests
