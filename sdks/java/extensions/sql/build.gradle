/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: project(":").file("build_rules.gradle")
applyJavaNature()

description = "Apache Beam :: SDKs :: Java :: Extensions :: SQL"

test {
  jvmArgs "-da"
}

def calcite_version = "1.13.0"
def avatica_version = "1.10.0"

dependencies {
  compile library.java.guava
  compile "org.apache.calcite:calcite-core:$calcite_version"
  compile "org.apache.calcite:calcite-linq4j:$calcite_version"
  compile "org.apache.calcite.avatica:avatica-core:$avatica_version"
  shadow project(path: ":beam-sdks-parent:beam-sdks-java-parent:beam-sdks-java-core", configuration: "shadow")
  shadow project(path: ":beam-sdks-parent:beam-sdks-java-parent:beam-sdks-java-extensions-parent:beam-sdks-java-extensions-join-library", configuration: "shadow")
  shadow library.java.slf4j_api
  shadow library.java.commons_csv
  shadow library.java.joda_time
  shadow project(path: ":beam-runners-parent:beam-runners-direct-java", configuration: "shadow")
  provided project(path: ":beam-sdks-parent:beam-sdks-java-parent:beam-sdks-java-io-parent:beam-sdks-java-io-kafka", configuration: "shadow")
  provided library.java.kafka_clients
  testCompile library.java.slf4j_jdk14
  testCompile library.java.junit
  testCompile library.java.hamcrest_core
}

shadowJar {
  dependencies {
    include(dependency("org.apache.calcite:.*"))
    include(dependency("org.apache.calcite.avatica:.*"))
    include(dependency("org.codehaus.janino:.*"))
    include(dependency(library.java.protobuf_java))
  }
  relocate "com.google.protobuf", "org.apache.beam.${project.name}.repackaged.com.google.protobuf"
  relocate "org.apache.calcite", "org.apache.beam.${project.name}.repackaged.org.apache.calcite"
  relocate "org.codehaus", "org.apache.beam.${project.name}.repackaged.org.codehaus"
}

task packageTests(type: Jar) {
  from sourceSets.test.output
  classifier = "tests"
}

artifacts.archives packageTests
