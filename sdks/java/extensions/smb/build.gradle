/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins { id 'org.apache.beam.module' }
applyJavaNature()

description = "Apache Beam :: SDKs :: Java :: Extensions :: SMB"

dependencies {
  shadow project(path: ":sdks:java:core", configuration: "shadow")
  shadow project(path: ":sdks:java:extensions:sorter", configuration: "shadow")
  shadow project(path: ":runners:google-cloud-dataflow-java", configuration: "shadow")

  // Required by sorter module
  provided library.java.hadoop_mapreduce_client_core
  provided library.java.hadoop_common
  // Required by TableRow JSON
  provided project(path: ":sdks:java:io:google-cloud-platform", configuration: "shadow")

  shadowTest project(path: ":runners:direct-java", configuration: "shadow")
  shadowTest project(path: ":sdks:java:testing:test-utils", configuration: "shadowTest")
  shadowTest project(path: ":sdks:java:core", configuration: "shadowTest")
  shadow library.java.vendored_guava_20_0
  testCompile library.java.junit
  testCompile library.java.hamcrest_core
  testCompile library.java.hamcrest_library
  testRuntimeOnly project(path: ":runners:direct-java")
}

// TODO: These tasks are here for quick reference, can probably be removed before merge.
task runBenchmarkMatchingBuckets(type: JavaExec) {
  classpath = sourceSets.test.runtimeClasspath
  main = "org.apache.beam.sdk.extensions.smb.benchmark.SmbIT"
  args "--numKeys=10000",
       "--maxRecordsPerKey=20",
       "--avroNumBuckets=16",
       "--avroNumShards=2",
       "--jsonNumBuckets=16",
       "--jsonNumShards=2"
}

task runBenchmarkMixedBuckets(type: JavaExec) {
  classpath = sourceSets.test.runtimeClasspath
  main = "org.apache.beam.sdk.extensions.smb.benchmark.SmbIT"
  args "--numKeys=10000",
       "--maxRecordsPerKey=20",
       "--avroNumBuckets=16",
       "--avroNumShards=2",
       "--jsonNumBuckets=16",
       "--jsonNumShards=2"
}
