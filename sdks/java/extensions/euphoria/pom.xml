<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>cz.seznam.euphoria</groupId>
  <artifactId>euphoria-parent</artifactId>
  <version>0.5.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@gitlab.kancelar.seznam.cz:euphoria/euphoria.git</connection>
    <url>scm:git:git@gitlab.kancelar.seznam.cz:euphoria/euphoria.git</url>
    <developerConnection>scm:git:git@gitlab.kancelar.seznam.cz:euphoria/euphoria.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://maven.dev/content/groups/repo</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>snapshots</id>
      <url>https://maven.dev/content/groups/repo</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <url>https://maven.dev/content/groups/repo</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>snapshots</id>
      <url>https://maven.dev/content/groups/repo</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>maven-seznam</id>
      <name>szn-releases</name>
      <url>https://maven.dev/content/repositories/releases-local</url>
    </repository>
    <snapshotRepository>
      <id>maven-seznam</id>
      <name>szn-snapshots</name>
      <url>https://maven.dev/content/repositories/snapshots-local</url>
    </snapshotRepository>
  </distributionManagement>

  <organization>
    <name>Seznam.cz, a.s.</name>
    <url>http://www.seznam.cz</url>
  </organization>

  <modules>
    <module>euphoria-core</module>
    <module>euphoria-fluent</module>
    <module>euphoria-inmem</module>
    <module>euphoria-kafka</module>
    <module>euphoria-hadoop</module>
    <module>euphoria-operator-testkit</module>
    <module>euphoria-flink</module>
    <module>euphoria-spark</module>
  </modules>

  <!-- make a few things differently when building under jdk8 -->
  <profiles>
    <profile>
      <id>java8</id>
      <activation>
        <jdk>1.8</jdk>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.10.3</version>
              <configuration>
                <skip>true</skip>
                <additionalparam>-Xdoclint:none</additionalparam>
                <encoding>UTF-8</encoding>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>hudson</id>
      <activation>
        <property>
          <name>env.BUILD_NUMBER</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-project-info-reports-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.9</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.3</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <encoding>UTF-8</encoding>
            <compilerArgs>
              <arg>-Xlint</arg>
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin>
          <groupId>de.softwareforge.mojo</groupId>
          <artifactId>maven-protoc-plugin</artifactId>
          <version>0.2-HPS-2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <archive>
              <manifestSections>
                <manifestSection>
                  <name>Package-Metadata</name>
                  <manifestEntries>
                    <Build-Revision>${buildNumber}</Build-Revision>
                    <Build-Branch>${scmBranch}</Build-Branch>
                    <Build-Time>${maven.build.timestamp}</Build-Time>
                    <Build-Host>${build.hostname}</Build-Host>
                    <Build-User>${user.name}</Build-User>
                    <Build-Java>${java.version}</Build-Java>
                    <Build-OS>${os.name}</Build-OS>
                    <Package-Vendor>${project.organization.name}</Package-Vendor>
                    <Package-Group>${project.groupId}</Package-Group>
                    <Package-Name>${project.artifactId}</Package-Name>
                    <Package-Version>${project.version}</Package-Version>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
          <configuration>
            <archive>
              <manifestSections>
                <manifestSection>
                  <name>Package-Metadata</name>
                  <manifestEntries>
                    <Build-Revision>${buildNumber}</Build-Revision>
                    <Build-Branch>${scmBranch}</Build-Branch>
                    <Build-Time>${maven.build.timestamp}</Build-Time>
                    <Build-Host>${build.hostname}</Build-Host>
                    <Build-User>${user.name}</Build-User>
                    <Build-Java>${java.version}</Build-Java>
                    <Build-OS>${os.name}</Build-OS>
                    <Package-Vendor>${project.organization.name}</Package-Vendor>
                    <Package-Group>${project.groupId}</Package-Group>
                    <Package-Name>${project.artifactId}</Package-Name>
                    <Package-Version>${project.version}</Package-Version>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>assembly</directory>
                <followSymlinks>false</followSymlinks>
              </fileset>
            </filesets>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.2</version>
          <configuration>
            <tagNameFormat>v@{project.version}</tagNameFormat>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-remote-resources-plugin</artifactId>
          <version>1.5</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!--  generate and attach sources jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- generate and attache javadoc jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin fetching information for package manifest meta-data -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <doCheck>false</doCheck>
              <doUpdate>false</doUpdate>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin fetching information for package manifest meta-data -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                project.properties["build.hostname"] = InetAddress.getLocalHost().getHostName()
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- generate test reports for Jenkins -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.18.1</version>
        <configuration>
          <forkCount>1</forkCount>
          <threadCount>1</threadCount>
          <runOrder>hourly</runOrder>
          <argLine>-Xmx512m</argLine>
        </configuration>
      </plugin>

      <!-- produce license resources artifacts/jars -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-remote-resources-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <resourceBundles>
                <resourceBundle>org.apache:apache-jar-resource-bundle:1.4</resourceBundle>
              </resourceBundles>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>

      <!-- our own dependencies -->

      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-core</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-inmem</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-kafka_0.10</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-flink</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-spark</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-hadoop</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>cz.seznam.euphoria</groupId>
        <artifactId>euphoria-operator-testkit</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- other dependencies -->

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.14.8</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.6.6</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>1.6.6</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>1.6.6</version>
      </dependency>

      <dependency>
        <groupId>com.esotericsoftware.kryo</groupId>
        <artifactId>kryo</artifactId>
        <version>2.24.0</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.1.2</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.10</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>1.9.5</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <properties>
    <flink.version>1.1.3</flink.version>
    <spark.version>2.0.1</spark.version>
    <!--
      the guava version used by euphoria; this is
      basically determined by hadoop's provided
      version of this library
    -->
    <guava.version>11.0.2</guava.version>
  </properties>

</project>
