/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins { id 'org.apache.beam.module' }

ext {
    kryoVersion = '4.0.2'
}

applyJavaNature(automaticModuleName: 'org.apache.beam.sdk.extensions.kryo',
    exportJavadoc: false,
    shadowClosure: {
    dependencies {
        include(dependency('com.esotericsoftware:.*'))
        include(dependency('org.ow2.asm:asm'))
        include(dependency('org.objenesis:objenesis'))
    }
    relocate 'com.esotericsoftware', getJavaRelocatedPath('com.esotericsoftware')
    relocate 'org.objectweb', getJavaRelocatedPath('org.objectweb')
    relocate 'org.objenesis', getJavaRelocatedPath('org.objenesis')
    }
)

description = 'Apache Beam :: SDKs :: Java :: Extensions :: Kryo'

dependencies {
    compile "com.esotericsoftware:kryo:${kryoVersion}"
    shadow project(path: ':sdks:java:core', configuration: 'shadow')
    testCompile project(path: ':sdks:java:core', configuration: 'shadowTest')
    testRuntimeOnly project(path: ':runners:direct-java', configuration: 'shadow')
}

test {
    jvmArgs '-Dsun.io.serialization.extendedDebugInfo=true'
}
