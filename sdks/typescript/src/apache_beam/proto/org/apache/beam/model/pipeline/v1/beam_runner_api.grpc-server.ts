// @generated by protobuf-ts 2.1.0 with parameter client_grpc1,server_grpc1,generate_dependencies
// @generated from protobuf file "org/apache/beam/model/pipeline/v1/beam_runner_api.proto" (package "org.apache.beam.model.pipeline.v1", syntax proto3)
// tslint:disable
//
//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
//
// Protocol Buffers describing the Runner API, which is the runner-independent,
// SDK-independent definition of the Beam model.
//
import { TestStreamPayload_Event } from "./beam_runner_api";
import { EventsRequest } from "./beam_runner_api";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service org.apache.beam.model.pipeline.v1.TestStreamService
 */
export interface ITestStreamService extends grpc.UntypedServiceImplementation {
    /**
     * A TestStream will request for events using this RPC.
     *
     * @generated from protobuf rpc: Events(org.apache.beam.model.pipeline.v1.EventsRequest) returns (stream org.apache.beam.model.pipeline.v1.TestStreamPayload.Event);
     */
    events: grpc.handleServerStreamingCall<EventsRequest, TestStreamPayload_Event>;
}
/**
 * @grpc/grpc-js definition for the protobuf service org.apache.beam.model.pipeline.v1.TestStreamService.
 *
 * Usage: Implement the interface ITestStreamService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: ITestStreamService = ...
 * server.addService(testStreamServiceDefinition, service);
 * ```
 */
export const testStreamServiceDefinition: grpc.ServiceDefinition<ITestStreamService> = {
    events: {
        path: "/org.apache.beam.model.pipeline.v1.TestStreamService/Events",
        originalName: "Events",
        requestStream: false,
        responseStream: true,
        responseDeserialize: bytes => TestStreamPayload_Event.fromBinary(bytes),
        requestDeserialize: bytes => EventsRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(TestStreamPayload_Event.toBinary(value)),
        requestSerialize: value => Buffer.from(EventsRequest.toBinary(value))
    }
};
