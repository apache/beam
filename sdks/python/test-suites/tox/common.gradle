/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def pythonVersionSuffix = project.ext.pythonVersion.replace('.', '')

toxTask "testPython${pythonVersionSuffix}", "py${pythonVersionSuffix}"
test.dependsOn "testPython${pythonVersionSuffix}"

toxTask "testPy${pythonVersionSuffix}Cloud", "py${pythonVersionSuffix}-cloud"
test.dependsOn "testPy${pythonVersionSuffix}Cloud"

toxTask "testPy${pythonVersionSuffix}Cython", "py${pythonVersionSuffix}-cython"
test.dependsOn "testPy${pythonVersionSuffix}Cython"

toxTask "testPy38CloudCoverage", "py38-cloudcoverage"
test.dependsOn "testPy38CloudCoverage"

project.task("preCommitPy${pythonVersionSuffix}") {
      // Generates coverage reports only once, in Py38, to remove duplicated work
      if (pythonVersionSuffix.equals('38')) {
          dependsOn = ["testPy38CloudCoverage", "testPy38Cython"]
      } else {
          dependsOn = ["testPy${pythonVersionSuffix}Cloud", "testPy${pythonVersionSuffix}Cython"]
      }
}
