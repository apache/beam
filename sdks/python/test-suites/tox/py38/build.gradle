/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Unit tests for Python 3.8
 */

plugins { id 'org.apache.beam.module' }
applyPythonNature()

// Required to setup a Python 3 virtualenv and task names.
pythonVersion = '3.8'

def posargs = project.findProperty("posargs") ?: ""

apply from: "../common.gradle"

toxTask "testPy38CloudCoverage", "py38-cloudcoverage", "${posargs}"
test.dependsOn "testPy38CloudCoverage"
project.tasks.register("preCommitPyCoverage") {
      dependsOn = ["testPy38CloudCoverage"]
}

// Dep Postcommit runs test suites that evaluate compatibility of particular
// dependencies. It is exercised on a single Python version.
//
// Should still leave at least one version in PreCommit unless the marked tests
// are also exercised by existing PreCommit
// e.g. pyarrow and pandas also run on PreCommit Dataframe and Coverage
project.tasks.register("postCommitPyDep") {}

// Create a test task for supported major versions of pyarrow
// We should have a test for the lowest supported version and
// For versions that we would like to prioritize for testing,
// for example versions released in a timeframe of last 1-2 years.

toxTask "testPy38pyarrow-3", "py38-pyarrow-3", "${posargs}"
test.dependsOn "testPy38pyarrow-3"
postCommitPyDep.dependsOn "testPy38pyarrow-3"

toxTask "testPy38pyarrow-9", "py38-pyarrow-9", "${posargs}"
test.dependsOn "testPy38pyarrow-9"
postCommitPyDep.dependsOn "testPy38pyarrow-9"

toxTask "testPy38pyarrow-10", "py38-pyarrow-10", "${posargs}"
test.dependsOn "testPy38pyarrow-10"
postCommitPyDep.dependsOn "testPy38pyarrow-10"

toxTask "testPy38pyarrow-11", "py38-pyarrow-11", "${posargs}"
test.dependsOn "testPy38pyarrow-11"
postCommitPyDep.dependsOn "testPy38pyarrow-11"

toxTask "testPy38pyarrow-12", "py38-pyarrow-12", "${posargs}"
test.dependsOn "testPy38pyarrow-12"
postCommitPyDep.dependsOn "testPy38pyarrow-12"

toxTask "testPy38pyarrow-13", "py38-pyarrow-13", "${posargs}"
test.dependsOn "testPy38pyarrow-13"
postCommitPyDep.dependsOn "testPy38pyarrow-13"

toxTask "testPy38pyarrow-14", "py38-pyarrow-14", "${posargs}"
test.dependsOn "testPy38pyarrow-14"
postCommitPyDep.dependsOn "testPy38pyarrow-14"

toxTask "testPy38pyarrow-15", "py38-pyarrow-15", "${posargs}"
test.dependsOn "testPy38pyarrow-15"
postCommitPyDep.dependsOn "testPy38pyarrow-15"

toxTask "testPy38pyarrow-16", "py38-pyarrow-16", "${posargs}"
test.dependsOn "testPy38pyarrow-16"
postCommitPyDep.dependsOn "testPy38pyarrow-16"

// Create a test task for each supported minor version of pandas
toxTask "testPy38pandas-14", "py38-pandas-14", "${posargs}"
test.dependsOn "testPy38pandas-14"
postCommitPyDep.dependsOn "testPy38pandas-14"

toxTask "testPy38pandas-15", "py38-pandas-15", "${posargs}"
test.dependsOn "testPy38pandas-15"
postCommitPyDep.dependsOn "testPy38pandas-15"

toxTask "testPy38pandas-20", "py38-pandas-20", "${posargs}"
test.dependsOn "testPy38pandas-20"
postCommitPyDep.dependsOn "testPy38pandas-20"

// TODO(https://github.com/apache/beam/issues/31192): Add below suites
// after dependency compat tests suite switches to Python 3.9 or we add
// Python 2.2 support.

// toxTask "testPy39pandas-21", "py39-pandas-21", "${posargs}"
// test.dependsOn "testPy39pandas-21"
// postCommitPyDep.dependsOn "testPy39pandas-21"

// toxTask "testPy39pandas-22", "py39-pandas-22", "${posargs}"
// test.dependsOn "testPy39pandas-22"
// postCommitPyDep.dependsOn "testPy39pandas-22"

// TODO(https://github.com/apache/beam/issues/30908): Revise what are we testing

// Create a test task for each minor version of pytorch
toxTask "testPy38pytorch-19", "py38-pytorch-19", "${posargs}"
test.dependsOn "testPy38pytorch-19"
postCommitPyDep.dependsOn "testPy38pytorch-19"

toxTask "testPy38pytorch-110", "py38-pytorch-110", "${posargs}"
test.dependsOn "testPy38pytorch-110"
postCommitPyDep.dependsOn "testPy38pytorch-110"

toxTask "testPy38pytorch-111", "py38-pytorch-111", "${posargs}"
test.dependsOn "testPy38pytorch-111"
postCommitPyDep.dependsOn "testPy38pytorch-111"

toxTask "testPy38pytorch-112", "py38-pytorch-112", "${posargs}"
test.dependsOn "testPy38pytorch-112"
postCommitPyDep.dependsOn "testPy38pytorch-112"

toxTask "testPy38pytorch-113", "py38-pytorch-113", "${posargs}"
test.dependsOn "testPy38pytorch-113"
postCommitPyDep.dependsOn "testPy38pytorch-113"

// run on precommit
toxTask "testPy38pytorch-200", "py38-pytorch-200", "${posargs}"
test.dependsOn "testPy38pytorch-200"
postCommitPyDep.dependsOn "testPy38pytorch-200"

toxTask "testPy38tft-113", "py38-tft-113", "${posargs}"
test.dependsOn "testPy38tft-113"
postCommitPyDep.dependsOn "testPy38tft-113"

// TODO(https://github.com/apache/beam/issues/25796) - uncomment onnx tox task once onnx supports protobuf 4.x.x
// Create a test task for each minor version of onnx
// toxTask "testPy38onnx-113", "py38-onnx-113", "${posargs}"
// test.dependsOn "testPy38onnx-113"
// postCommitPyDep.dependsOn "testPy38onnx-113"

// Create a test task for each minor version of tensorflow
toxTask "testPy38tensorflow-212", "py38-tensorflow-212", "${posargs}"
test.dependsOn "testPy38tensorflow-212"
postCommitPyDep.dependsOn "testPy38tensorflow-212"

// Create a test task for each minor version of transformers
toxTask "testPy38transformers-428", "py38-transformers-428", "${posargs}"
test.dependsOn "testPy38transformers-428"
postCommitPyDep.dependsOn "testPy38transformers-428"

toxTask "testPy38transformers-429", "py38-transformers-429", "${posargs}"
test.dependsOn "testPy38transformers-429"
postCommitPyDep.dependsOn "testPy38transformers-429"

toxTask "testPy38transformers-430", "py38-transformers-430", "${posargs}"
test.dependsOn "testPy38transformers-430"
postCommitPyDep.dependsOn "testPy38transformers-430"

toxTask "testPy38embeddingsMLTransform", "py38-embeddings", "${posargs}"
test.dependsOn "testPy38embeddingsMLTransform"
postCommitPyDep.dependsOn "testPy38embeddingsMLTransform"

// Part of MLTransform embeddings test suite but requires tensorflow hub, which we need to test on
// mutliple versions so keeping this suite separate.
toxTask "testPy38TensorflowHubEmbeddings-014", "py38-TFHubEmbeddings-014", "${posargs}"
test.dependsOn "testPy38TensorflowHubEmbeddings-014"
postCommitPyDep.dependsOn "testPy38TensorflowHubEmbeddings-014"

toxTask "testPy38TensorflowHubEmbeddings-015", "py38-TFHubEmbeddings-015", "${posargs}"
test.dependsOn "testPy38TensorflowHubEmbeddings-015"
postCommitPyDep.dependsOn "testPy38TensorflowHubEmbeddings-015"

toxTask "whitespacelint", "whitespacelint", "${posargs}"

task archiveFilesToLint(type: Zip) {
  archiveFileName = "files-to-whitespacelint.zip"
  destinationDirectory = file("$buildDir/dist")

  from ("$rootProject.projectDir") {
    include "**/*.md"
    include "**/build.gradle"
    include '**/build.gradle.kts'
    exclude '**/build/**' // intermediate build directory
    exclude 'website/www/site/themes/docsy/**' // fork to google/docsy
    exclude "**/node_modules/*"
    exclude "**/.gogradle/*"
  }
}

task unpackFilesToLint(type: Copy) {
  from zipTree("$buildDir/dist/files-to-whitespacelint.zip")
  into "$buildDir/files-to-whitespacelint"
}

whitespacelint.dependsOn archiveFilesToLint, unpackFilesToLint
unpackFilesToLint.dependsOn archiveFilesToLint
archiveFilesToLint.dependsOn cleanPython

toxTask "jest", "jest", "${posargs}"

toxTask "eslint", "eslint", "${posargs}"

task copyTsSource(type: Copy) {
  from ("$rootProject.projectDir") {
    include "sdks/python/apache_beam/runners/interactive/extensions/**/*"
    exclude "sdks/python/apache_beam/runners/interactive/extensions/**/lib/*"
    exclude "sdks/python/apache_beam/runners/interactive/extensions/**/node_modules/*"
  }
  into "$buildDir/ts"
}

jest.dependsOn copyTsSource
eslint.dependsOn copyTsSource
copyTsSource.dependsOn cleanPython
