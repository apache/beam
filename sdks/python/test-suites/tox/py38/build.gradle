/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Unit tests for Python 3.8
 */

plugins { id 'org.apache.beam.module' }
applyPythonNature()

// Required to setup a Python 3 virtualenv and task names.
pythonVersion = '3.8'

toxTask "formatter", "py3-yapf-check"
check.dependsOn formatter

// TODO(BEAM-12000): Move tasks that aren't specific to 3.8 to Py 3.9.
def posargs = project.findProperty("posargs") ?: ""

task lint {}
check.dependsOn lint

toxTask "lintPy38", "py38-lint", "${posargs}"
lint.dependsOn lintPy38

toxTask "mypyPy38", "py38-mypy", "${posargs}"
lint.dependsOn mypyPy38

apply from: "../common.gradle"

// TODO(https://github.com/apache/beam/issues/20051): Remove this once tox uses isolated builds.
testPy38Cython.mustRunAfter testPython38, testPy38CloudCoverage


// PyCoverage Precommit runs test suites that evaluate test coverage and compatibility of
// particular dependencies. It is exercised on a single Python version.
project.tasks.register("preCommitPyCoverage") {
      dependsOn = ["testPy38CloudCoverage"]
}

// Create a test task for each supported major version of pyarrow
toxTask "testPy38pyarrow-3", "py38-pyarrow-3", "${posargs}"
test.dependsOn "testPy38pyarrow-3"
preCommitPyCoverage.dependsOn "testPy38pyarrow-3"

toxTask "testPy38pyarrow-4", "py38-pyarrow-4", "${posargs}"
test.dependsOn "testPy38pyarrow-4"
preCommitPyCoverage.dependsOn "testPy38pyarrow-4"

toxTask "testPy38pyarrow-5", "py38-pyarrow-5", "${posargs}"
test.dependsOn "testPy38pyarrow-5"
preCommitPyCoverage.dependsOn "testPy38pyarrow-5"

toxTask "testPy38pyarrow-6", "py38-pyarrow-6", "${posargs}"
test.dependsOn "testPy38pyarrow-6"
preCommitPyCoverage.dependsOn "testPy38pyarrow-6"

toxTask "testPy38pyarrow-7", "py38-pyarrow-7", "${posargs}"
test.dependsOn "testPy38pyarrow-7"
preCommitPyCoverage.dependsOn "testPy38pyarrow-7"

toxTask "testPy38pyarrow-8", "py38-pyarrow-8", "${posargs}"
test.dependsOn "testPy38pyarrow-8"
preCommitPyCoverage.dependsOn "testPy38pyarrow-8"

toxTask "testPy38pyarrow-9", "py38-pyarrow-9", "${posargs}"
test.dependsOn "testPy38pyarrow-9"
preCommitPyCoverage.dependsOn "testPy38pyarrow-9"

// Create a test task for each minor version of pandas
toxTask "testPy38pandas-14", "py38-pandas-14", "${posargs}"
test.dependsOn "testPy38pandas-14"
preCommitPyCoverage.dependsOn "testPy38pandas-14"

toxTask "testPy38pandas-15", "py38-pandas-15", "${posargs}"
test.dependsOn "testPy38pandas-15"
preCommitPyCoverage.dependsOn "testPy38pandas-15"

// Create a test task for each minor version of pytorch
toxTask "testPy38pytorch-19", "py38-pytorch-19", "${posargs}"
test.dependsOn "testPy38pytorch-19"
preCommitPyCoverage.dependsOn "testPy38pytorch-19"

toxTask "testPy38pytorch-110", "py38-pytorch-110", "${posargs}"
test.dependsOn "testPy38pytorch-110"
preCommitPyCoverage.dependsOn "testPy38pytorch-110"

toxTask "testPy38pytorch-111", "py38-pytorch-111", "${posargs}"
test.dependsOn "testPy38pytorch-111"
preCommitPyCoverage.dependsOn "testPy38pytorch-111"

toxTask "testPy38pytorch-112", "py38-pytorch-112", "${posargs}"
test.dependsOn "testPy38pytorch-112"
preCommitPyCoverage.dependsOn "testPy38pytorch-112"

toxTask "testPy38pytorch-113", "py38-pytorch-113", "${posargs}"
test.dependsOn "testPy38pytorch-113"
preCommitPyCoverage.dependsOn "testPy38pytorch-113"

toxTask "testPy38pytorch-200", "py38-pytorch-200", "${posargs}"
test.dependsOn "testPy38pytorch-200"
preCommitPyCoverage.dependsOn "testPy38pytorch-200"

toxTask "testPy38tft-113", "py38-tft-113", "${posargs}"
test.dependsOn "testPy38tft-113"
preCommitPyCoverage.dependsOn "testPy38tft-113"

// TODO(https://github.com/apache/beam/issues/25796) - uncomment onnx tox task once onnx supports protobuf 4.x.x
// Create a test task for each minor version of onnx
// toxTask "testPy38onnx-113", "py38-onnx-113", "${posargs}"
// test.dependsOn "testPy38onnx-113"
// preCommitPyCoverage.dependsOn "testPy38onnx-113"
// Create a test task for each minor version of tensorflow
toxTask "testPy38tensorflow-212", "py38-tensorflow-212", "${posargs}"
test.dependsOn "testPy38tensorflow-212"
preCommitPyCoverage.dependsOn "testPy38tensorflow-212"

toxTask "whitespacelint", "whitespacelint", "${posargs}"

task archiveFilesToLint(type: Zip) {
  archiveFileName = "files-to-whitespacelint.zip"
  destinationDirectory = file("$buildDir/dist")

  from ("$rootProject.projectDir") {
    include "**/*.md"
    include "**/build.gradle"
    include '**/build.gradle.kts'
    exclude "**/node_modules/*"
    exclude "**/.gogradle/*"
  }
}

task unpackFilesToLint(type: Copy) {
  from zipTree("$buildDir/dist/files-to-whitespacelint.zip")
  into "$buildDir/files-to-whitespacelint"
}

whitespacelint.dependsOn archiveFilesToLint, unpackFilesToLint
unpackFilesToLint.dependsOn archiveFilesToLint
archiveFilesToLint.dependsOn cleanPython

toxTask "jest", "jest", "${posargs}"

toxTask "eslint", "eslint", "${posargs}"

task copyTsSource(type: Copy) {
  from ("$rootProject.projectDir") {
    include "sdks/python/apache_beam/runners/interactive/extensions/**/*"
    exclude "sdks/python/apache_beam/runners/interactive/extensions/**/lib/*"
    exclude "sdks/python/apache_beam/runners/interactive/extensions/**/node_modules/*"
  }
  into "$buildDir/ts"
}

jest.dependsOn copyTsSource
eslint.dependsOn copyTsSource
copyTsSource.dependsOn cleanPython
