/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Unit tests for Python 3.9
 */

plugins { id 'org.apache.beam.module' }
applyPythonNature()

// Required to setup a Python 3 virtualenv and task names.
pythonVersion = '3.9'

apply from: "../common.gradle"

toxTask "formatter", "py3-yapf-check"
check.dependsOn formatter

def posargs = project.findProperty("posargs") ?: ""

task lint {}
check.dependsOn lint

toxTask "lintPy39", "py39-lint", "${posargs}"
lint.dependsOn lintPy39

toxTask "mypyPy39", "py39-mypy", "${posargs}"
lint.dependsOn mypyPy39

toxTask "testPy39CloudCoverage", "py39-cloudcoverage", "${posargs}"
test.dependsOn "testPy39CloudCoverage"
project.tasks.register("preCommitPyCoverage") {
      dependsOn = ["testPy39CloudCoverage"]
}

// Dep Postcommit runs test suites that evaluate compatibility of particular
// dependencies. It is exercised on a single Python version.
//
// Should still leave at least one version in PreCommit unless the marked tests
// are also exercised by existing PreCommit
// e.g. pyarrow and pandas also run on PreCommit Dataframe and Coverage
project.tasks.register("postCommitPyDep") {}

// Create a test task for each supported major version of pyarrow
toxTask "testPy39pyarrow-3", "py39-pyarrow-3", "${posargs}"
test.dependsOn "testPy39pyarrow-3"
postCommitPyDep.dependsOn "testPy39pyarrow-3"

toxTask "testPy39pyarrow-4", "py39-pyarrow-4", "${posargs}"
test.dependsOn "testPy39pyarrow-4"
postCommitPyDep.dependsOn "testPy39pyarrow-4"

toxTask "testPy39pyarrow-5", "py39-pyarrow-5", "${posargs}"
test.dependsOn "testPy39pyarrow-5"
postCommitPyDep.dependsOn "testPy39pyarrow-5"

toxTask "testPy39pyarrow-6", "py39-pyarrow-6", "${posargs}"
test.dependsOn "testPy39pyarrow-6"
postCommitPyDep.dependsOn "testPy39pyarrow-6"

toxTask "testPy39pyarrow-7", "py39-pyarrow-7", "${posargs}"
test.dependsOn "testPy39pyarrow-7"
postCommitPyDep.dependsOn "testPy39pyarrow-7"

toxTask "testPy39pyarrow-8", "py39-pyarrow-8", "${posargs}"
test.dependsOn "testPy39pyarrow-8"
postCommitPyDep.dependsOn "testPy39pyarrow-8"

toxTask "testPy39pyarrow-9", "py39-pyarrow-9", "${posargs}"
test.dependsOn "testPy39pyarrow-9"
postCommitPyDep.dependsOn "testPy39pyarrow-9"

// Create a test task for each minor version of pandas
toxTask "testPy39pandas-14", "py39-pandas-14", "${posargs}"
test.dependsOn "testPy39pandas-14"
postCommitPyDep.dependsOn "testPy39pandas-14"

toxTask "testPy39pandas-15", "py39-pandas-15", "${posargs}"
test.dependsOn "testPy39pandas-15"
postCommitPyDep.dependsOn "testPy39pandas-15"

toxTask "testPy39pandas-20", "py39-pandas-20", "${posargs}"
test.dependsOn "testPy39pandas-20"
postCommitPyDep.dependsOn "testPy39pandas-20"

// Create a test task for each minor version of pytorch
toxTask "testPy39pytorch-19", "py39-pytorch-19", "${posargs}"
test.dependsOn "testPy39pytorch-19"
postCommitPyDep.dependsOn "testPy39pytorch-19"

toxTask "testPy39pytorch-110", "py39-pytorch-110", "${posargs}"
test.dependsOn "testPy39pytorch-110"
postCommitPyDep.dependsOn "testPy39pytorch-110"

toxTask "testPy39pytorch-111", "py39-pytorch-111", "${posargs}"
test.dependsOn "testPy39pytorch-111"
postCommitPyDep.dependsOn "testPy39pytorch-111"

toxTask "testPy39pytorch-112", "py39-pytorch-112", "${posargs}"
test.dependsOn "testPy39pytorch-112"
postCommitPyDep.dependsOn "testPy39pytorch-112"

toxTask "testPy39pytorch-113", "py39-pytorch-113", "${posargs}"
test.dependsOn "testPy39pytorch-113"
postCommitPyDep.dependsOn "testPy39pytorch-113"

// run on precommit
toxTask "testPy39pytorch-200", "py39-pytorch-200", "${posargs}"
test.dependsOn "testPy39pytorch-200"
preCommitPyCoverage.dependsOn "testPy39pytorch-200"

toxTask "testPy39tft-113", "py39-tft-113", "${posargs}"
test.dependsOn "testPy39tft-113"
preCommitPyCoverage.dependsOn "testPy39tft-113"

// TODO(https://github.com/apache/beam/issues/25796) - uncomment onnx tox task once onnx supports protobuf 4.x.x
// Create a test task for each minor version of onnx
// toxTask "testPy39onnx-113", "py39-onnx-113", "${posargs}"
// test.dependsOn "testPy39onnx-113"
// postCommitPyDep.dependsOn "testPy39onnx-113"
// Create a test task for each minor version of tensorflow
toxTask "testPy39tensorflow-212", "py39-tensorflow-212", "${posargs}"
test.dependsOn "testPy39tensorflow-212"
preCommitPyCoverage.dependsOn "testPy39tensorflow-212"

// Create a test task for each minor version of transformers
toxTask "testPy39transformers-428", "py39-transformers-428", "${posargs}"
test.dependsOn "testPy39transformers-428"
postCommitPyDep.dependsOn "testPy39transformers-428"

toxTask "testPy39transformers-429", "py39-transformers-429", "${posargs}"
test.dependsOn "testPy39transformers-429"
postCommitPyDep.dependsOn "testPy39transformers-429"

// run on precommit
toxTask "testPy39transformers-430", "py39-transformers-430", "${posargs}"
test.dependsOn "testPy39transformers-430"
preCommitPyCoverage.dependsOn "testPy39transformers-430"

toxTask "testPy39embeddingsMLTransform", "py39-embeddings", "${posargs}"
test.dependsOn "testPy39embeddingsMLTransform"
preCommitPyCoverage.dependsOn "testPy39embeddingsMLTransform"

// Part of MLTransform embeddings test suite but requires tensorflow hub, which we need to test on
// mutliple versions so keeping this suite separate.
toxTask "testPy39TensorflowHubEmbeddings-014", "py39-TFHubEmbeddings-014", "${posargs}"
test.dependsOn "testPy39TensorflowHubEmbeddings-014"
postCommitPyDep.dependsOn "testPy39TensorflowHubEmbeddings-014"

// run on precommit
toxTask "testPy39TensorflowHubEmbeddings-015", "py39-TFHubEmbeddings-015", "${posargs}"
test.dependsOn "testPy39TensorflowHubEmbeddings-015"
preCommitPyCoverage.dependsOn "testPy39TensorflowHubEmbeddings-015"

toxTask "whitespacelint", "whitespacelint", "${posargs}"

task archiveFilesToLint(type: Zip) {
  archiveFileName = "files-to-whitespacelint.zip"
  destinationDirectory = file("$buildDir/dist")

  from ("$rootProject.projectDir") {
    include "**/*.md"
    include "**/build.gradle"
    include '**/build.gradle.kts'
    exclude '**/build/**' // intermediate build directory
    exclude 'website/www/site/themes/docsy/**' // fork to google/docsy
    exclude "**/node_modules/*"
    exclude "**/.gogradle/*"
  }
}

task unpackFilesToLint(type: Copy) {
  from zipTree("$buildDir/dist/files-to-whitespacelint.zip")
  into "$buildDir/files-to-whitespacelint"
}

whitespacelint.dependsOn archiveFilesToLint, unpackFilesToLint
unpackFilesToLint.dependsOn archiveFilesToLint
archiveFilesToLint.dependsOn cleanPython

toxTask "jest", "jest", "${posargs}"

toxTask "eslint", "eslint", "${posargs}"

task copyTsSource(type: Copy) {
  from ("$rootProject.projectDir") {
    include "sdks/python/apache_beam/runners/interactive/extensions/**/*"
    exclude "sdks/python/apache_beam/runners/interactive/extensions/**/lib/*"
    exclude "sdks/python/apache_beam/runners/interactive/extensions/**/node_modules/*"
  }
  into "$buildDir/ts"
}

jest.dependsOn copyTsSource
eslint.dependsOn copyTsSource
copyTsSource.dependsOn cleanPython
