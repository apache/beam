/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: org.apache.beam.gradle.BeamModulePlugin
applyPythonNature()

def pythonRootDir = "${rootDir}/sdks/python"

/*************************************************************************************************/

addPortableWordCountTasks()

// TODO: Move the rest of this file into ../common.gradle.

/*************************************************************************************************/

task crossLanguagePythonJavaDirect {
  dependsOn 'setupVirtualenv'
  dependsOn ':sdks:java:container:docker'
  dependsOn ':sdks:java:testing:expansion-service:buildTestExpansionServiceJar'

  doLast {
    def options = [
        "--expansion_service_target=sdks:java:testing:expansion-service:buildTestExpansionServiceJar",
        "--expansion_service_target_appendix=testExpansionService",
    ]
    exec {
      executable 'sh'
      args '-c', ". ${envdir}/bin/activate && cd ${pythonRootDir} && pip install -e .[test] && python -m apache_beam.transforms.external_java ${options.join(' ')}"
    }
  }
}

task crossLanguagePythonJavaFlink {
  dependsOn 'setupVirtualenv'
  dependsOn ':runners:flink:1.10:job-server:shadowJar'
  dependsOn ':sdks:python:container:py2:docker'
  dependsOn ':sdks:java:container:docker'
  dependsOn ':sdks:java:testing:expansion-service:buildTestExpansionServiceJar'

  doLast {
    def testServiceExpansionJar = project(":sdks:java:testing:expansion-service:").buildTestExpansionServiceJar.archivePath
    def options = [
        "--runner=FlinkRunner",
        "--parallelism=2",
        "--environment_cache_millis=10000",
        "--expansion_service_port=8096",
        "--expansion_service_jar=${testServiceExpansionJar}",
    ]
    exec {
      executable 'sh'
      args '-c', ". ${envdir}/bin/activate && cd ${pythonRootDir} && pip install -e .[test] && python -m apache_beam.transforms.external_java ${options.join(' ')}"
    }
  }
}

task crossLanguagePortableWordCountFlink {
  dependsOn 'setupVirtualenv'
  dependsOn ':runners:flink:1.10:job-server:shadowJar'
  dependsOn ':sdks:python:container:py2:docker'
  dependsOn ':sdks:java:container:docker'
  dependsOn ':sdks:java:testing:expansion-service:buildTestExpansionServiceJar'

  doLast {
    def testServiceExpansionJar = project(":sdks:java:testing:expansion-service:").buildTestExpansionServiceJar.archivePath
    def options = [
        "--input=/etc/profile",
        "--output=/tmp/py-wordcount-portable",
        "--runner=FlinkRunner",
        "--parallelism=2",
        "--environment_cache_millis=10000",
        "--expansion_service_jar=${testServiceExpansionJar}",
        // Writes to local filesystem might fail for multiple SDK workers.
        "--sdk_worker_parallelism=1"
    ]
    exec {
      executable 'sh'
      args '-c', ". ${envdir}/bin/activate && cd ${pythonRootDir} && pip install -e .[test] && python -m apache_beam.examples.wordcount_xlang ${options.join(' ')}"
      // TODO: Check that the output file is generated and runs.
    }
  }
}

task crossLanguageTests {
  dependsOn "crossLanguagePythonJavaFlink"
  dependsOn "crossLanguagePortableWordCountFlink"
}

task installChicagoTaxiExampleRequirements {
  dependsOn 'installGcpTest'

  doLast {
    exec {
      workingDir "$rootProject.projectDir/sdks/python/apache_beam/testing/benchmarks/chicago_taxi/"
      executable 'sh'
      args '-c', ". ${envdir}/bin/activate && pip install -r requirements.txt"
    }
  }
}

task chicagoTaxiExample {
  dependsOn 'installChicagoTaxiExampleRequirements'

  def gcsRoot = findProperty('gcsRoot')
  def pipelineOptions = findProperty('pipelineOptions') ?: ""

  doLast {
    exec {
      workingDir "$rootProject.projectDir/sdks/python/apache_beam/testing/benchmarks/chicago_taxi/"
      executable 'sh'
      args '-c', ". ${envdir}/bin/activate && ./run_chicago.sh ${gcsRoot} PortableRunner ${pipelineOptions}"
    }
  }
}

/*************************************************************************************************/

apply from: "../common.gradle"
