#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

fixtures:
  - name: TEMP_DIR
    type: "tempfile.TemporaryDirectory"

pipelines:
  - pipeline:
      type: chain
      transforms:
        - type: Create
          config:
            elements:
              - {name: "foo"}
        - type: MapToFields
          config:
            language: python
            fields:
              record: 
                callable: |
                  def process(row):
                    return row.name.encode('utf-8')
                output_type: bytes
        - type: WriteToTFRecord
          config:
            file_path_prefix: "{TEMP_DIR}"
            file_name_suffix: ".tfrecords"
            compression_type: "UNCOMPRESSED"
            num_shards: 1

  - pipeline:
      type: chain
      transforms:
        - type: ReadFromTFRecord
          config:
            file_pattern: "{TEMP_DIR}*"
            compression_type: "AUTO"
            validate: true
        - type: MapToFields
          config:
            language: python
            fields:
              record: 
                callable: |
                  def process(row):
                    return row.record.decode('utf-8')
                output_type: string
        - type: AssertEqual
          config:
            elements:
              - {record: "foo"}