#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

pipelines:
  - pipeline:
      type: chain
      transforms:
        - type: Create
          config:
            elements:
              - question: "What is a car?"
              - question: "Where is the Eiffel Tower located?"
        - type: RunInference
          config:
            model_handler: 
              type: "VertexAIModelHandlerJSON"
              config:
                endpoint_id: 9157860935048626176
                project: "apache-beam-testing"
                location: "us-central1"
                preprocess:
                  callable: 'lambda x: {"prompt": x.question}'
                private: false
        - type: PyTransform
          name: TransformInferenceBeamRowsToSimpleSchemaRows
          config:
            constructor: __callable__
            kwargs: 
              source: | 
                import apache_beam as beam
                def simplify_elements(pcoll):
                  return pcoll | beam.Map(lambda row: beam.Row(dummy_field=1))
        - type: Sql
          name: CountRows
          config:
            query: "SELECT COUNT(*) AS actual_inference_count FROM PCOLLECTION"
        - type: AssertEqual
          config:
            elements:
              - {actual_inference_count: 2}

    options:
      yaml_experimental_features: ['ML']