#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


fixtures:
  - name: BT_TABLE
    type: "apache_beam.yaml.integration_tests.temp_bigtable_table"
    config:
      project: "apache-beam-testing"
  - name: TEMP_DIR
    # Need distributed filesystem to be able to read and write from a container.
    type: "apache_beam.yaml.integration_tests.gcs_temp_dir"
    config:
      bucket: "gs://temp-storage-for-end-to-end-tests/temp-it"

  # Tests for BigTable YAML IO
pipelines:
  - pipeline:
    type: chain
    transforms:
      - type: ReadFromBigTable
        name: ReadBigTableData
        config:
          project: 'dummy-project-id'  # These will likely be overridden or mocked by the test runner
          instance: 'dummy-instance-id'
          table: 'dummy-table-id'
      - type: LogForTesting # Placeholder for actual data verification
        name: LogReadOutput
        input: ReadBigTableData
    options:
      project: "apache-beam-testing"
      temp_location: "{TEMP_DIR}"

  - pipeline:
    type: chain
    transforms:
      - type: Create
        name: CreateSampleMutations
        config:
          elements:
            - row:
              - key: b'row1' # Base64 encoded string for bytes, or ensure test runner handles 'b' prefix
              - type: b'SetCell'
              - family_name: b'cf1'
              - column_qualifier: b'cq1'
              - value: b'value1_from_yaml'
              - timestamp_micros: -1
            - row:
              - key: b'row2'
              - type: b'SetCell'
              - family_name: b'cf2'
              - column_qualifier: b'cq_other'
              - value: b'another_value_yaml'
      - type: WriteToBigTable
        name: WriteBigTableData
        input: CreateSampleMutations
        config:
          project: 'dummy-project-id' # These will likely be overridden or mocked by the test runner
          instance: 'dummy-instance-id'
          table: 'dummy-table-id'
    options:
        project: "apache-beam-testing"
        temp_location: "{TEMP_DIR}"