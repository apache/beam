# coding=utf-8
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


pipeline:
  type: chain
  transforms:
    - type: ReadFromBigQuery
      name: ReadFromBigQuery
      config:
        table: "apache-beam-testing.charlesnguyen.test"
        fields: [embedding]
        row_restriction: 'id = 5'

    - type: PyTransform
      name: AnomalyScoring
      config:
        constructor: __constructor__
        kwargs:
          source: |
            import apache_beam as beam
            from apache_beam.ml.anomaly.detectors.pyod_adapter import PyODFactory
            from apache_beam.ml.anomaly.transforms import AnomalyDetection
            
            class KNN(beam.PTransform):
              def __init__(self, model_artifact_path):
                self.model_artifact_path = model_artifact_path
                self.model = PyODFactory.create_detector(
                   self.model_artifact_path,
                   model_id="knn",
                )
            
              def expand(self, pcoll):
                return (
                  pcoll
                  | beam.Map(lambda x: x.embedding)
                  | AnomalyDetection(detector=self.model)
                  | beam.Map(lambda x: beam.Row(
                     example=x.example,
                     predictions=[pred.__dict__ for pred in x.predictions]))
              )

          model_artifact_path: "gs://apache-beam-testing-charlesng/batch-log-analysis/knn_model.pkl"

    - type: LogForTesting
