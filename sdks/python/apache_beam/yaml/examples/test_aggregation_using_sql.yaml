# coding=utf-8
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This examples reads from a public file stored on Google Cloud. This
# requires authenticating with Google Cloud, or setting the file in
#`ReadFromText` to a local file.
#
# To set up Application Default Credentials,
# see https://cloud.google.com/docs/authentication/external/set-up-adc for more
# information
#
# The following example reads mock transaction data from resources/products.csv
# then performs a MapToFields in order to rename the imput data names
# then uses a Combine with sql to run some aggregations
pipeline:
  transforms:
    - type: ReadFromCsv
      name: ReadInputFile
      config:
        path: gs://apache-beam-samples/beam-yaml-blog/products.csv
    - type: MapToFields
      name: MapToFields
      input: ReadInputFile
      config:
        language: sql
        fields:
          id: "transaction_id"
          prod_name: "product_name"
          category_name: "category"
          price: "price"
    - type: Combine
      name: Combines
      input: MapToFields
      config:
        language: sql
        group_by: category_name
        combine:
          num_sold: count
          revenue: sum
    - type: WriteToCsv
      name: WriteOutputFile
      input: Combines
      config:
        path: output
        
# Expected:
#  Row(category_name='Apparel', num_sold=1, revenue=109.99)
#  Row(category_name='Kitchen', num_sold=1, revenue=29.99)
#  Row(category_name='Electronics', num_sold=3, revenue=369.97)
