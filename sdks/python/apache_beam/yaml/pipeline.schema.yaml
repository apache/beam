$schema: 'http://json-schema.org/schema#'
$id: https://github.com/apache/beam/tree/master/sdks/python/apache_beam/yaml/pipeline.schema.yaml

$defs:

  transformBase:
    type: object
    properties:
      type: { type: string }
      name: { type: string }
      input:
        oneOf:
          - type: string
          - type: object
            additionalProperties:
              type: string
      output:
        oneOf:
          - type: string
          - type: object
            additionalProperties:
              type: string
    additionalProperties: true
    required:
      - type

  leafTransform:
    allOf:
      - $ref: '#/$defs/transformBase'
      - type: object
        properties:
          type:
            not:
              anyOf:
                - const: chain
                - const: composite
          args:
            type: object

  chainTransform:
    allOf:
      - $ref: '#/$defs/transformBase'
      - type: object
        properties:
          type:
            const: chain
          name: {}
          input: {}
          output: {}
          transforms:
            type: array
            items:
              allOf:
                - $ref: '#/$defs/transform'
                - type: object
                  properties:
                    # Must be implicit.
                    input: { not: {} }
                    output: { not: {} }
        additionalProperties: false
        required:
          - transforms

  compositeTransform:
    allOf:
      - $ref: '#/$defs/transformBase'
      - type: object
        properties:
          type:
            const: composite
          name: {}
          input: {}
          output: {}
          transforms:
            type: array
            items:
              $ref: '#/$defs/transform'
        additionalProperties: false
        required:
          - transforms

  transform:
    oneOf:
      - $ref: '#/$defs/leafTransform'
      - $ref: '#/$defs/chainTransform'
      - $ref: '#/$defs/compositeTransform'

  provider:
    type: object
    properties:
      type: { type: string }
      transforms:
        type: object
        additionalProperties:
          type: string
    required:
      - type
      - transforms

type: object
properties:
  pipeline:
    type: array
    items:
      $ref: '#/$defs/transform'
  providers:
    type: array
    items:
      $ref: '#/$defs/provider'
required:
  - pipeline
