#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

fixtures:
  - name: SPANNER_TABLE
    type: "apache_beam.yaml.integration_tests.temp_spanner_table"
    config:
      project: "apache-beam-testing"
  - name: TEMP_DIR
    type: "apache_beam.yaml.integration_tests.gcs_temp_dir"
    config:
      bucket: "gs://temp-storage-for-end-to-end-tests/temp-it"

pipelines:
  - pipeline:
      transforms:
        - type: Create
          name: Row
          config:
            elements:
            - UserId: "01"
              Key: "Apple"

        - type: WriteToSpanner
          name: Write
          input: Row
          config:
            project: "{SPANNER_TABLE[0]}"
            instance: "{SPANNER_TABLE[1]}"
            database: "{SPANNER_TABLE[2]}"
            table: "{SPANNER_TABLE[3]}"
            error_handling:
              output: my_error_output

        - type: LogForTesting
          input: Write.my_error_output

  - pipeline:
      type: chain
      transforms:
        - type: ReadFromSpanner
          config:
              project: "{SPANNER_TABLE[0]}"
              instance: "{SPANNER_TABLE[1]}"
              database: "{SPANNER_TABLE[2]}"
              query: 'SELECT * FROM tmp_table where UserId = "01"'
              
        - type: AssertEqual
          config:
            elements:
              - UserId: "01"
                Key: "Apple"

  - pipeline:
      type: chain
      transforms:
        - type: Create
          config:
            elements:
            - UserId: "02"
              Key: "Mango"

        - type: WriteToSpanner
          config:
            project: "{SPANNER_TABLE[0]}"
            instance: "{SPANNER_TABLE[1]}"
            database: "{SPANNER_TABLE[2]}"
            table: "{SPANNER_TABLE[3]}"

  - pipeline:
      type: chain
      transforms:
        - type: ReadFromSpanner
          config:
            project: "{SPANNER_TABLE[0]}"
            instance: "{SPANNER_TABLE[1]}"
            database: "{SPANNER_TABLE[2]}"
            table: "{SPANNER_TABLE[3]}"
            columns: 
              - "{SPANNER_TABLE[4][0]}"
              - "{SPANNER_TABLE[4][1]}"
